// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: v1/audio/audio.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sensory.Api.V1.Audio {

  /// <summary>Holder for reflection information generated from v1/audio/audio.proto</summary>
  public static partial class AudioReflection {

    #region Descriptor
    /// <summary>File descriptor for v1/audio/audio.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AudioReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChR2MS9hdWRpby9hdWRpby5wcm90bxIUc2Vuc29yeS5hcGkudjEuYXVkaW8a",
            "F3ZhbGlkYXRlL3ZhbGlkYXRlLnByb3RvGhNjb21tb24vY29tbW9uLnByb3Rv",
            "IhIKEEdldE1vZGVsc1JlcXVlc3Qi8gEKCkF1ZGlvTW9kZWwSDAoEbmFtZRgB",
            "IAEoCRIUCgxpc0Vucm9sbGFibGUYAiABKAgSMAoJbW9kZWxUeXBlGAMgASgO",
            "Mh0uc2Vuc29yeS5hcGkuY29tbW9uLk1vZGVsVHlwZRITCgtmaXhlZFBocmFz",
            "ZRgEIAEoCRISCgpzYW1wbGVSYXRlGAUgASgFEhAKCHZlcnNpb25zGAYgAygJ",
            "EjYKCnRlY2hub2xvZ3kYByABKA4yIi5zZW5zb3J5LmFwaS5jb21tb24uVGVj",
            "aG5vbG9neVR5cGUSGwoTaXNMaXZlbmVzc1N1cHBvcnRlZBgIIAEoCCJ/CiBB",
            "dWRpb1JlcXVlc3RQb3N0UHJvY2Vzc2luZ0FjdGlvbhIQCghhY3Rpb25JZBgB",
            "IAEoCRJJCgZhY3Rpb24YAiABKA4yLy5zZW5zb3J5LmFwaS52MS5hdWRpby5B",
            "dWRpb1Bvc3RQcm9jZXNzaW5nQWN0aW9uQgj6QgWCAQIQASKAAQohQXVkaW9S",
            "ZXNwb25zZVBvc3RQcm9jZXNzaW5nQWN0aW9uEhAKCGFjdGlvbklkGAEgASgJ",
            "EkkKBmFjdGlvbhgCIAEoDjIvLnNlbnNvcnkuYXBpLnYxLmF1ZGlvLkF1ZGlv",
            "UG9zdFByb2Nlc3NpbmdBY3Rpb25CCPpCBYIBAhABIkUKEUdldE1vZGVsc1Jl",
            "c3BvbnNlEjAKBm1vZGVscxgBIAMoCzIgLnNlbnNvcnkuYXBpLnYxLmF1ZGlv",
            "LkF1ZGlvTW9kZWwiigEKF0NyZWF0ZUVucm9sbG1lbnRSZXF1ZXN0Ej4KBmNv",
            "bmZpZxgBIAEoCzIsLnNlbnNvcnkuYXBpLnYxLmF1ZGlvLkNyZWF0ZUVucm9s",
            "bG1lbnRDb25maWdIABIWCgxhdWRpb0NvbnRlbnQYAiABKAxIAEIXChBzdHJl",
            "YW1pbmdSZXF1ZXN0EgP4QgEiggEKE0F1dGhlbnRpY2F0ZVJlcXVlc3QSOgoG",
            "Y29uZmlnGAEgASgLMiguc2Vuc29yeS5hcGkudjEuYXVkaW8uQXV0aGVudGlj",
            "YXRlQ29uZmlnSAASFgoMYXVkaW9Db250ZW50GAIgASgMSABCFwoQc3RyZWFt",
            "aW5nUmVxdWVzdBID+EIBItoBChRWYWxpZGF0ZUV2ZW50UmVxdWVzdBI7CgZj",
            "b25maWcYASABKAsyKS5zZW5zb3J5LmFwaS52MS5hdWRpby5WYWxpZGF0ZUV2",
            "ZW50Q29uZmlnSAASFgoMYXVkaW9Db250ZW50GAIgASgMSAASVAoUcG9zdFBy",
            "b2Nlc3NpbmdBY3Rpb24YCiABKAsyNi5zZW5zb3J5LmFwaS52MS5hdWRpby5B",
            "dWRpb1JlcXVlc3RQb3N0UHJvY2Vzc2luZ0FjdGlvbkIXChBzdHJlYW1pbmdS",
            "ZXF1ZXN0EgP4QgEikgEKGkNyZWF0ZUVucm9sbGVkRXZlbnRSZXF1ZXN0EkMK",
            "BmNvbmZpZxgBIAEoCzIxLnNlbnNvcnkuYXBpLnYxLmF1ZGlvLkNyZWF0ZUVu",
            "cm9sbG1lbnRFdmVudENvbmZpZ0gAEhYKDGF1ZGlvQ29udGVudBgCIAEoDEgA",
            "QhcKEHN0cmVhbWluZ1JlcXVlc3QSA/hCASKUAQocVmFsaWRhdGVFbnJvbGxl",
            "ZEV2ZW50UmVxdWVzdBJDCgZjb25maWcYASABKAsyMS5zZW5zb3J5LmFwaS52",
            "MS5hdWRpby5WYWxpZGF0ZUVucm9sbGVkRXZlbnRDb25maWdIABIWCgxhdWRp",
            "b0NvbnRlbnQYAiABKAxIAEIXChBzdHJlYW1pbmdSZXF1ZXN0EgP4QgEi1AEK",
            "EVRyYW5zY3JpYmVSZXF1ZXN0EjgKBmNvbmZpZxgBIAEoCzImLnNlbnNvcnku",
            "YXBpLnYxLmF1ZGlvLlRyYW5zY3JpYmVDb25maWdIABIWCgxhdWRpb0NvbnRl",
            "bnQYAiABKAxIABJUChRwb3N0UHJvY2Vzc2luZ0FjdGlvbhgKIAEoCzI2LnNl",
            "bnNvcnkuYXBpLnYxLmF1ZGlvLkF1ZGlvUmVxdWVzdFBvc3RQcm9jZXNzaW5n",
            "QWN0aW9uQhcKEHN0cmVhbWluZ1JlcXVlc3QSA/hCASJlChdTeW50aGVzaXpl",
            "U3BlZWNoUmVxdWVzdBIOCgZwaHJhc2UYASABKAkSOgoGY29uZmlnGAIgASgL",
            "Miouc2Vuc29yeS5hcGkudjEuYXVkaW8uVm9pY2VTeW50aGVzaXNDb25maWci",
            "+gEKGENyZWF0ZUVucm9sbG1lbnRSZXNwb25zZRIXCg9wZXJjZW50Q29tcGxl",
            "dGUYASABKAMSEwoLYXVkaW9FbmVyZ3kYAiABKAISFAoMZW5yb2xsbWVudElk",
            "GAMgASgJEhEKCW1vZGVsTmFtZRgEIAEoCRIUCgxtb2RlbFZlcnNpb24YBSAB",
            "KAkSEwoLbW9kZWxQcm9tcHQYBiABKAkSHgoWcGVyY2VudFNlZ21lbnRDb21w",
            "bGV0ZRgHIAEoAxI8Cg9lbnJvbGxtZW50VG9rZW4YCCABKAsyIy5zZW5zb3J5",
            "LmFwaS5jb21tb24uRW5yb2xsbWVudFRva2VuIskBChRBdXRoZW50aWNhdGVS",
            "ZXNwb25zZRITCgthdWRpb0VuZXJneRgBIAEoAhIPCgdzdWNjZXNzGAIgASgI",
            "EjAKBXRva2VuGAMgASgLMiEuc2Vuc29yeS5hcGkuY29tbW9uLlRva2VuUmVz",
            "cG9uc2USDgoGdXNlcklkGAQgASgJEhQKDGVucm9sbG1lbnRJZBgFIAEoCRIT",
            "Cgttb2RlbFByb21wdBgGIAEoCRIeChZwZXJjZW50U2VnbWVudENvbXBsZXRl",
            "GAcgASgDIlUKE1NvdW5kSWRUb3BOUmVzcG9uc2USEAoIcmVzdWx0SWQYASAB",
            "KAkSEgoKbG9naXRTY29yZRgCIAEoAhIYChBwcm9iYWJpbGl0eVNjb3JlGAMg",
            "ASgCIqYCChVWYWxpZGF0ZUV2ZW50UmVzcG9uc2USEwoLYXVkaW9FbmVyZ3kY",
            "ASABKAISDwoHc3VjY2VzcxgCIAEoCBIQCghyZXN1bHRJZBgDIAEoCRINCgVz",
            "Y29yZRgEIAEoAhI/Cgx0b3BOUmVzcG9uc2UYBSADKAsyKS5zZW5zb3J5LmFw",
            "aS52MS5hdWRpby5Tb3VuZElkVG9wTlJlc3BvbnNlEhcKD1Jlc3VsdFN0YXJ0",
            "VGltZRgGIAEoAhIVCg1SZXN1bHRFbmRUaW1lGAcgASgCElUKFHBvc3RQcm9j",
            "ZXNzaW5nQWN0aW9uGAogASgLMjcuc2Vuc29yeS5hcGkudjEuYXVkaW8uQXVk",
            "aW9SZXNwb25zZVBvc3RQcm9jZXNzaW5nQWN0aW9uIoABCh1WYWxpZGF0ZUVu",
            "cm9sbGVkRXZlbnRSZXNwb25zZRITCgthdWRpb0VuZXJneRgBIAEoAhIPCgdz",
            "dWNjZXNzGAIgASgIEhQKDGVucm9sbG1lbnRJZBgDIAEoCRIOCgZ1c2VySWQY",
            "BCABKAkSEwoLbW9kZWxQcm9tcHQYBSABKAkioQEKDlRyYW5zY3JpYmVXb3Jk",
            "EhMKC2JlZ2ludGltZU1zGAEgASgEEhEKCWVuZHRpbWVNcxgCIAEoBBISCgpj",
            "b25maWRlbmNlGAMgASgCEjIKCXdvcmRTdGF0ZRgEIAEoDjIfLnNlbnNvcnku",
            "YXBpLnYxLmF1ZGlvLldvcmRTdGF0ZRIRCgl3b3JkSW5kZXgYBSABKAQSDAoE",
            "d29yZBgGIAEoCSJ8ChZUcmFuc2NyaWJlV29yZFJlc3BvbnNlEjMKBXdvcmRz",
            "GAEgAygLMiQuc2Vuc29yeS5hcGkudjEuYXVkaW8uVHJhbnNjcmliZVdvcmQS",
            "FgoOZmlyc3RXb3JkSW5kZXgYAiABKAQSFQoNbGFzdFdvcmRJbmRleBgDIAEo",
            "BCLaAQoSVHJhbnNjcmliZVJlc3BvbnNlEhMKC2F1ZGlvRW5lcmd5GAEgASgC",
            "Ej4KCHdvcmRMaXN0GAQgASgLMiwuc2Vuc29yeS5hcGkudjEuYXVkaW8uVHJh",
            "bnNjcmliZVdvcmRSZXNwb25zZRIYChBoYXNWb2ljZUFjdGl2aXR5GAUgASgI",
            "ElUKFHBvc3RQcm9jZXNzaW5nQWN0aW9uGAogASgLMjcuc2Vuc29yeS5hcGku",
            "djEuYXVkaW8uQXVkaW9SZXNwb25zZVBvc3RQcm9jZXNzaW5nQWN0aW9uInwK",
            "GFN5bnRoZXNpemVTcGVlY2hSZXNwb25zZRIzCgZjb25maWcYASABKAsyIS5z",
            "ZW5zb3J5LmFwaS52MS5hdWRpby5BdWRpb0NvbmZpZ0gAEhYKDGF1ZGlvQ29u",
            "dGVudBgCIAEoDEgAQhMKEXN0cmVhbWluZ1Jlc3BvbnNlIqADChZDcmVhdGVF",
            "bnJvbGxtZW50Q29uZmlnEjoKBWF1ZGlvGAEgASgLMiEuc2Vuc29yeS5hcGku",
            "djEuYXVkaW8uQXVkaW9Db25maWdCCPpCBYoBAhABEhkKBnVzZXJJZBgCIAEo",
            "CUIJ+kIGcgQQARh/EhsKCGRldmljZUlkGAMgASgJQgn6QgZyBBABGH8SHQoJ",
            "bW9kZWxOYW1lGAQgASgJQgr6QgdyBRABGP8BEh0KC2Rlc2NyaXB0aW9uGAUg",
            "ASgJQgj6QgVyAxj/BxIZChFpc0xpdmVuZXNzRW5hYmxlZBgGIAEoCBIsChdl",
            "bnJvbGxtZW50TnVtVXR0ZXJhbmNlcxgHIAEoDUIJ+kIGKgQYCigASAASLQoS",
            "ZW5yb2xsbWVudER1cmF0aW9uGAggASgCQg/6QgwKCh0AAHBBLQAAAABIABIc",
            "CgtyZWZlcmVuY2VJZBgJIAEoCUIH+kIEcgIYfxIuCiZkaXNhYmxlU2VydmVy",
            "RW5yb2xsbWVudFRlbXBsYXRlU3RvcmFnZRgKIAEoCEIOCgxlbnJvbGxMZW5n",
            "dGgitQMKEkF1dGhlbnRpY2F0ZUNvbmZpZxI6CgVhdWRpbxgBIAEoCzIhLnNl",
            "bnNvcnkuYXBpLnYxLmF1ZGlvLkF1ZGlvQ29uZmlnQgj6QgWKAQIQARIgCgxl",
            "bnJvbGxtZW50SWQYAiABKAlCCPpCBXIDsAEBSAASGwoRZW5yb2xsbWVudEdy",
            "b3VwSWQYAyABKAlIABIWCg5kb0luY2x1ZGVUb2tlbhgEIAEoCBJJCgtzZW5z",
            "aXRpdml0eRgFIAEoDjIqLnNlbnNvcnkuYXBpLnYxLmF1ZGlvLlRocmVzaG9s",
            "ZFNlbnNpdGl2aXR5Qgj6QgWCAQIQARJWCghzZWN1cml0eRgGIAEoDjI6LnNl",
            "bnNvcnkuYXBpLnYxLmF1ZGlvLkF1dGhlbnRpY2F0ZUNvbmZpZy5UaHJlc2hv",
            "bGRTZWN1cml0eUII+kIFggECEAESGQoRaXNMaXZlbmVzc0VuYWJsZWQYByAB",
            "KAgSFwoPZW5yb2xsbWVudFRva2VuGAggASgMIiYKEVRocmVzaG9sZFNlY3Vy",
            "aXR5EggKBEhJR0gQABIHCgNMT1cQAUINCgZhdXRoSWQSA/hCASLkAQoTVmFs",
            "aWRhdGVFdmVudENvbmZpZxI6CgVhdWRpbxgBIAEoCzIhLnNlbnNvcnkuYXBp",
            "LnYxLmF1ZGlvLkF1ZGlvQ29uZmlnQgj6QgWKAQIQARIdCgltb2RlbE5hbWUY",
            "AiABKAlCCvpCB3IFEAEY/wESGQoGdXNlcklkGAMgASgJQgn6QgZyBBABGH8S",
            "SQoLc2Vuc2l0aXZpdHkYBCABKA4yKi5zZW5zb3J5LmFwaS52MS5hdWRpby5U",
            "aHJlc2hvbGRTZW5zaXRpdml0eUII+kIFggECEAESDAoEdG9wThgFIAEoBSK9",
            "AgobQ3JlYXRlRW5yb2xsbWVudEV2ZW50Q29uZmlnEjoKBWF1ZGlvGAEgASgL",
            "MiEuc2Vuc29yeS5hcGkudjEuYXVkaW8uQXVkaW9Db25maWdCCPpCBYoBAhAB",
            "EhkKBnVzZXJJZBgCIAEoCUIJ+kIGcgQQARh/Eh0KCW1vZGVsTmFtZRgDIAEo",
            "CUIK+kIHcgUQARj/ARIdCgtkZXNjcmlwdGlvbhgEIAEoCUII+kIFcgMY/wcS",
            "LAoXZW5yb2xsbWVudE51bVV0dGVyYW5jZXMYBSABKA1CCfpCBioEGAooAEgA",
            "Ei0KEmVucm9sbG1lbnREdXJhdGlvbhgGIAEoAkIP+kIMCgodAABwQS0AAAAA",
            "SAASHAoLcmVmZXJlbmNlSWQYByABKAlCB/pCBHICGH9CDgoMZW5yb2xsTGVu",
            "Z3RoIosCChtWYWxpZGF0ZUVucm9sbGVkRXZlbnRDb25maWcSOgoFYXVkaW8Y",
            "ASABKAsyIS5zZW5zb3J5LmFwaS52MS5hdWRpby5BdWRpb0NvbmZpZ0II+kIF",
            "igECEAESIAoMZW5yb2xsbWVudElkGAIgASgJQgj6QgVyA7ABAUgAEhsKEWVu",
            "cm9sbG1lbnRHcm91cElkGAMgASgJSAASSQoLc2Vuc2l0aXZpdHkYBCABKA4y",
            "Ki5zZW5zb3J5LmFwaS52MS5hdWRpby5UaHJlc2hvbGRTZW5zaXRpdml0eUII",
            "+kIFggECEAESFwoPZW5yb2xsbWVudFRva2VuGAUgASgMQg0KBmF1dGhJZBID",
            "+EIBIjIKFUN1c3RvbVZvY2FidWxhcnlXb3JkcxIZCgV3b3JkcxgBIAMoCUIK",
            "+kIHkgEECAEQZCKBAQoVVHJhbnNjcmliZUV2ZW50Q29uZmlnEh0KCW1vZGVs",
            "TmFtZRgBIAEoCUIK+kIHcgUQARj/ARJJCgtzZW5zaXRpdml0eRgCIAEoDjIq",
            "LnNlbnNvcnkuYXBpLnYxLmF1ZGlvLlRocmVzaG9sZFNlbnNpdGl2aXR5Qgj6",
            "QgWCAQIQASKyBAoQVHJhbnNjcmliZUNvbmZpZxI6CgVhdWRpbxgBIAEoCzIh",
            "LnNlbnNvcnkuYXBpLnYxLmF1ZGlvLkF1ZGlvQ29uZmlnQgj6QgWKAQIQARId",
            "Cgltb2RlbE5hbWUYAiABKAlCCvpCB3IFEAEY/wESGQoGdXNlcklkGAMgASgJ",
            "Qgn6QgZyBBABGH8SJwofZW5hYmxlUHVuY3R1YXRpb25DYXBpdGFsaXphdGlv",
            "bhgEIAEoCBIZChFkb1NpbmdsZVV0dGVyYW5jZRgFIAEoCBJCCg52YWRTZW5z",
            "aXRpdml0eRgGIAEoDjIqLnNlbnNvcnkuYXBpLnYxLmF1ZGlvLlRocmVzaG9s",
            "ZFNlbnNpdGl2aXR5EhMKC3ZhZER1cmF0aW9uGAcgASgCEk4KGmN1c3RvbVZv",
            "Y2FiUmV3YXJkVGhyZXNob2xkGAggASgOMiouc2Vuc29yeS5hcGkudjEuYXVk",
            "aW8uVGhyZXNob2xkU2Vuc2l0aXZpdHkSGgoSY3VzdG9tVm9jYWJ1bGFyeUlk",
            "GAkgASgJEkMKDmN1c3RvbVdvcmRMaXN0GAogASgLMisuc2Vuc29yeS5hcGku",
            "djEuYXVkaW8uQ3VzdG9tVm9jYWJ1bGFyeVdvcmRzEhUKDWRvT2ZmbGluZU1v",
            "ZGUYCyABKAgSQwoOd2FrZVdvcmRDb25maWcYDCABKAsyKy5zZW5zb3J5LmFw",
            "aS52MS5hdWRpby5UcmFuc2NyaWJlRXZlbnRDb25maWci6wEKC0F1ZGlvQ29u",
            "ZmlnEksKCGVuY29kaW5nGAEgASgOMi8uc2Vuc29yeS5hcGkudjEuYXVkaW8u",
            "QXVkaW9Db25maWcuQXVkaW9FbmNvZGluZ0II+kIFggECEAESIQoPc2FtcGxl",
            "UmF0ZUhlcnR6GAIgASgFQgj6QgUaAyjAPhIiChFhdWRpb0NoYW5uZWxDb3Vu",
            "dBgDIAEoBUIH+kIEGgIgABIUCgxsYW5ndWFnZUNvZGUYBCABKAkiMgoNQXVk",
            "aW9FbmNvZGluZxIMCghMSU5FQVIxNhAAEggKBEZMQUMQARIJCgVNVUxBVxAC",
            "ImIKFFZvaWNlU3ludGhlc2lzQ29uZmlnEh0KCW1vZGVsTmFtZRgCIAEoCUIK",
            "+kIHcgUQARj/ARIlCg9zYW1wbGVSYXRlSGVydHoYAyABKAVCDPpCCRoHGIDu",
            "BSjAPkoECAEQAipJChlBdWRpb1Bvc3RQcm9jZXNzaW5nQWN0aW9uEgsKB05P",
            "VF9TRVQQABIJCgVGTFVTSBABEgkKBVJFU0VUEAISCQoFRklOQUwQAyo3CglX",
            "b3JkU3RhdGUSFQoRV09SRFNUQVRFX1BFTkRJTkcQABITCg9XT1JEU1RBVEVf",
            "RklOQUwQASpOChRUaHJlc2hvbGRTZW5zaXRpdml0eRIKCgZMT1dFU1QQABIH",
            "CgNMT1cQARIKCgZNRURJVU0QAhIICgRISUdIEAMSCwoHSElHSEVTVBAEMm0K",
            "C0F1ZGlvTW9kZWxzEl4KCUdldE1vZGVscxImLnNlbnNvcnkuYXBpLnYxLmF1",
            "ZGlvLkdldE1vZGVsc1JlcXVlc3QaJy5zZW5zb3J5LmFwaS52MS5hdWRpby5H",
            "ZXRNb2RlbHNSZXNwb25zZSIAMvcBCg9BdWRpb0Jpb21ldHJpY3MSdwoQQ3Jl",
            "YXRlRW5yb2xsbWVudBItLnNlbnNvcnkuYXBpLnYxLmF1ZGlvLkNyZWF0ZUVu",
            "cm9sbG1lbnRSZXF1ZXN0Gi4uc2Vuc29yeS5hcGkudjEuYXVkaW8uQ3JlYXRl",
            "RW5yb2xsbWVudFJlc3BvbnNlIgAoATABEmsKDEF1dGhlbnRpY2F0ZRIpLnNl",
            "bnNvcnkuYXBpLnYxLmF1ZGlvLkF1dGhlbnRpY2F0ZVJlcXVlc3QaKi5zZW5z",
            "b3J5LmFwaS52MS5hdWRpby5BdXRoZW50aWNhdGVSZXNwb25zZSIAKAEwATKF",
            "AwoLQXVkaW9FdmVudHMSbgoNVmFsaWRhdGVFdmVudBIqLnNlbnNvcnkuYXBp",
            "LnYxLmF1ZGlvLlZhbGlkYXRlRXZlbnRSZXF1ZXN0Gisuc2Vuc29yeS5hcGku",
            "djEuYXVkaW8uVmFsaWRhdGVFdmVudFJlc3BvbnNlIgAoATABEn0KE0NyZWF0",
            "ZUVucm9sbGVkRXZlbnQSMC5zZW5zb3J5LmFwaS52MS5hdWRpby5DcmVhdGVF",
            "bnJvbGxlZEV2ZW50UmVxdWVzdBouLnNlbnNvcnkuYXBpLnYxLmF1ZGlvLkNy",
            "ZWF0ZUVucm9sbG1lbnRSZXNwb25zZSIAKAEwARKGAQoVVmFsaWRhdGVFbnJv",
            "bGxlZEV2ZW50EjIuc2Vuc29yeS5hcGkudjEuYXVkaW8uVmFsaWRhdGVFbnJv",
            "bGxlZEV2ZW50UmVxdWVzdBozLnNlbnNvcnkuYXBpLnYxLmF1ZGlvLlZhbGlk",
            "YXRlRW5yb2xsZWRFdmVudFJlc3BvbnNlIgAoATABMnwKE0F1ZGlvVHJhbnNj",
            "cmlwdGlvbnMSZQoKVHJhbnNjcmliZRInLnNlbnNvcnkuYXBpLnYxLmF1ZGlv",
            "LlRyYW5zY3JpYmVSZXF1ZXN0Giguc2Vuc29yeS5hcGkudjEuYXVkaW8uVHJh",
            "bnNjcmliZVJlc3BvbnNlIgAoATABMocBCg5BdWRpb1N5bnRoZXNpcxJ1ChBT",
            "eW50aGVzaXplU3BlZWNoEi0uc2Vuc29yeS5hcGkudjEuYXVkaW8uU3ludGhl",
            "c2l6ZVNwZWVjaFJlcXVlc3QaLi5zZW5zb3J5LmFwaS52MS5hdWRpby5TeW50",
            "aGVzaXplU3BlZWNoUmVzcG9uc2UiADABQnwKHGFpLnNlbnNvcnljbG91ZC5h",
            "cGkudjEuYXVkaW9CFlNlbnNvcnlBcGlWMUF1ZGlvUHJvdG9QAVo6Z2l0bGFi",
            "LmNvbS9zZW5zb3J5LWNsb3VkL3NlcnZlci90aXRhbi5naXQvcGtnL2FwaS92",
            "MS9hdWRpb6ICBVNFTkdBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Validate.ValidateReflection.Descriptor, global::Sensory.Api.Common.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Sensory.Api.V1.Audio.AudioPostProcessingAction), typeof(global::Sensory.Api.V1.Audio.WordState), typeof(global::Sensory.Api.V1.Audio.ThresholdSensitivity), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.GetModelsRequest), global::Sensory.Api.V1.Audio.GetModelsRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.AudioModel), global::Sensory.Api.V1.Audio.AudioModel.Parser, new[]{ "Name", "IsEnrollable", "ModelType", "FixedPhrase", "SampleRate", "Versions", "Technology", "IsLivenessSupported" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction), global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction.Parser, new[]{ "ActionId", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction), global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction.Parser, new[]{ "ActionId", "Action" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.GetModelsResponse), global::Sensory.Api.V1.Audio.GetModelsResponse.Parser, new[]{ "Models" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.CreateEnrollmentRequest), global::Sensory.Api.V1.Audio.CreateEnrollmentRequest.Parser, new[]{ "Config", "AudioContent" }, new[]{ "StreamingRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.AuthenticateRequest), global::Sensory.Api.V1.Audio.AuthenticateRequest.Parser, new[]{ "Config", "AudioContent" }, new[]{ "StreamingRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.ValidateEventRequest), global::Sensory.Api.V1.Audio.ValidateEventRequest.Parser, new[]{ "Config", "AudioContent", "PostProcessingAction" }, new[]{ "StreamingRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.CreateEnrolledEventRequest), global::Sensory.Api.V1.Audio.CreateEnrolledEventRequest.Parser, new[]{ "Config", "AudioContent" }, new[]{ "StreamingRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.ValidateEnrolledEventRequest), global::Sensory.Api.V1.Audio.ValidateEnrolledEventRequest.Parser, new[]{ "Config", "AudioContent" }, new[]{ "StreamingRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.TranscribeRequest), global::Sensory.Api.V1.Audio.TranscribeRequest.Parser, new[]{ "Config", "AudioContent", "PostProcessingAction" }, new[]{ "StreamingRequest" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.SynthesizeSpeechRequest), global::Sensory.Api.V1.Audio.SynthesizeSpeechRequest.Parser, new[]{ "Phrase", "Config" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.CreateEnrollmentResponse), global::Sensory.Api.V1.Audio.CreateEnrollmentResponse.Parser, new[]{ "PercentComplete", "AudioEnergy", "EnrollmentId", "ModelName", "ModelVersion", "ModelPrompt", "PercentSegmentComplete", "EnrollmentToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.AuthenticateResponse), global::Sensory.Api.V1.Audio.AuthenticateResponse.Parser, new[]{ "AudioEnergy", "Success", "Token", "UserId", "EnrollmentId", "ModelPrompt", "PercentSegmentComplete" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.SoundIdTopNResponse), global::Sensory.Api.V1.Audio.SoundIdTopNResponse.Parser, new[]{ "ResultId", "LogitScore", "ProbabilityScore" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.ValidateEventResponse), global::Sensory.Api.V1.Audio.ValidateEventResponse.Parser, new[]{ "AudioEnergy", "Success", "ResultId", "Score", "TopNResponse", "ResultStartTime", "ResultEndTime", "PostProcessingAction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.ValidateEnrolledEventResponse), global::Sensory.Api.V1.Audio.ValidateEnrolledEventResponse.Parser, new[]{ "AudioEnergy", "Success", "EnrollmentId", "UserId", "ModelPrompt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.TranscribeWord), global::Sensory.Api.V1.Audio.TranscribeWord.Parser, new[]{ "BegintimeMs", "EndtimeMs", "Confidence", "WordState", "WordIndex", "Word" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.TranscribeWordResponse), global::Sensory.Api.V1.Audio.TranscribeWordResponse.Parser, new[]{ "Words", "FirstWordIndex", "LastWordIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.TranscribeResponse), global::Sensory.Api.V1.Audio.TranscribeResponse.Parser, new[]{ "AudioEnergy", "WordList", "HasVoiceActivity", "PostProcessingAction" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.SynthesizeSpeechResponse), global::Sensory.Api.V1.Audio.SynthesizeSpeechResponse.Parser, new[]{ "Config", "AudioContent" }, new[]{ "StreamingResponse" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.CreateEnrollmentConfig), global::Sensory.Api.V1.Audio.CreateEnrollmentConfig.Parser, new[]{ "Audio", "UserId", "DeviceId", "ModelName", "Description", "IsLivenessEnabled", "EnrollmentNumUtterances", "EnrollmentDuration", "ReferenceId", "DisableServerEnrollmentTemplateStorage" }, new[]{ "EnrollLength" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.AuthenticateConfig), global::Sensory.Api.V1.Audio.AuthenticateConfig.Parser, new[]{ "Audio", "EnrollmentId", "EnrollmentGroupId", "DoIncludeToken", "Sensitivity", "Security", "IsLivenessEnabled", "EnrollmentToken" }, new[]{ "AuthId" }, new[]{ typeof(global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.ValidateEventConfig), global::Sensory.Api.V1.Audio.ValidateEventConfig.Parser, new[]{ "Audio", "ModelName", "UserId", "Sensitivity", "TopN" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.CreateEnrollmentEventConfig), global::Sensory.Api.V1.Audio.CreateEnrollmentEventConfig.Parser, new[]{ "Audio", "UserId", "ModelName", "Description", "EnrollmentNumUtterances", "EnrollmentDuration", "ReferenceId" }, new[]{ "EnrollLength" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.ValidateEnrolledEventConfig), global::Sensory.Api.V1.Audio.ValidateEnrolledEventConfig.Parser, new[]{ "Audio", "EnrollmentId", "EnrollmentGroupId", "Sensitivity", "EnrollmentToken" }, new[]{ "AuthId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.CustomVocabularyWords), global::Sensory.Api.V1.Audio.CustomVocabularyWords.Parser, new[]{ "Words" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.TranscribeEventConfig), global::Sensory.Api.V1.Audio.TranscribeEventConfig.Parser, new[]{ "ModelName", "Sensitivity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.TranscribeConfig), global::Sensory.Api.V1.Audio.TranscribeConfig.Parser, new[]{ "Audio", "ModelName", "UserId", "EnablePunctuationCapitalization", "DoSingleUtterance", "VadSensitivity", "VadDuration", "CustomVocabRewardThreshold", "CustomVocabularyId", "CustomWordList", "DoOfflineMode", "WakeWordConfig" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.AudioConfig), global::Sensory.Api.V1.Audio.AudioConfig.Parser, new[]{ "Encoding", "SampleRateHertz", "AudioChannelCount", "LanguageCode" }, null, new[]{ typeof(global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.V1.Audio.VoiceSynthesisConfig), global::Sensory.Api.V1.Audio.VoiceSynthesisConfig.Parser, new[]{ "ModelName", "SampleRateHertz" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum AudioPostProcessingAction {
    /// <summary>
    /// Default value to perform no action
    /// </summary>
    [pbr::OriginalName("NOT_SET")] NotSet = 0,
    /// <summary>
    /// Request the audio engine to flush its buffers.
    /// </summary>
    [pbr::OriginalName("FLUSH")] Flush = 1,
    /// <summary>
    /// Request the audio engine reset itself.
    /// </summary>
    [pbr::OriginalName("RESET")] Reset = 2,
    /// <summary>
    /// Indicates this message is the final message. The audio engine will create a final result, return it to the client, and close the stream.
    /// </summary>
    [pbr::OriginalName("FINAL")] Final = 3,
  }

  public enum WordState {
    /// <summary>
    ///Default state is PENDING which indicates that the speech system may decide to change the word in the future given additional audio data
    /// </summary>
    [pbr::OriginalName("WORDSTATE_PENDING")] Pending = 0,
    /// <summary>
    ///Final state FINAL indicates that the word has moved out of the active logit buffer and can no longer be updated given additional information
    /// </summary>
    [pbr::OriginalName("WORDSTATE_FINAL")] Final = 1,
  }

  /// <summary>
  /// Specifies how sensitive the event threshold of the model should be
  /// </summary>
  public enum ThresholdSensitivity {
    /// <summary>
    /// Expects about 32 False Accepts per day for Fixed-Trigger models,
    /// and about 10 False Accepts per day for SoundID models
    /// </summary>
    [pbr::OriginalName("LOWEST")] Lowest = 0,
    /// <summary>
    /// Expects about 16 False Accepts per day for Fixed-Trigger models,
    /// and about 5 False Accepts per day for SoundID models
    /// </summary>
    [pbr::OriginalName("LOW")] Low = 1,
    /// <summary>
    /// Expects about 8 False Accepts per day for Fixed-Trigger models,
    /// and about 3 False Accepts per day for SoundID models
    /// </summary>
    [pbr::OriginalName("MEDIUM")] Medium = 2,
    /// <summary>
    /// Expects about 3 False Accepts per day for Fixed-Trigger models,
    /// and about 2 False Accepts per day for SoundID models
    /// </summary>
    [pbr::OriginalName("HIGH")] High = 3,
    /// <summary>
    /// Expects about 2 False Accepts per day for Fixed-Trigger models,
    /// and about 1 False Accept per day for SoundID models
    /// </summary>
    [pbr::OriginalName("HIGHEST")] Highest = 4,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Request to get a list of the available models
  /// </summary>
  public sealed partial class GetModelsRequest : pb::IMessage<GetModelsRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetModelsRequest> _parser = new pb::MessageParser<GetModelsRequest>(() => new GetModelsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetModelsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetModelsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetModelsRequest(GetModelsRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetModelsRequest Clone() {
      return new GetModelsRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetModelsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetModelsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetModelsRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A model that is available for use
  /// </summary>
  public sealed partial class AudioModel : pb::IMessage<AudioModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioModel> _parser = new pb::MessageParser<AudioModel>(() => new AudioModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioModel(AudioModel other) : this() {
      name_ = other.name_;
      isEnrollable_ = other.isEnrollable_;
      modelType_ = other.modelType_;
      fixedPhrase_ = other.fixedPhrase_;
      sampleRate_ = other.sampleRate_;
      versions_ = other.versions_.Clone();
      technology_ = other.technology_;
      isLivenessSupported_ = other.isLivenessSupported_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioModel Clone() {
      return new AudioModel(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name of the model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isEnrollable" field.</summary>
    public const int IsEnrollableFieldNumber = 2;
    private bool isEnrollable_;
    /// <summary>
    /// Boolean representing if a model can be used in enrollment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsEnrollable {
      get { return isEnrollable_; }
      set {
        isEnrollable_ = value;
      }
    }

    /// <summary>Field number for the "modelType" field.</summary>
    public const int ModelTypeFieldNumber = 3;
    private global::Sensory.Api.Common.ModelType modelType_ = global::Sensory.Api.Common.ModelType.Unknown;
    /// <summary>
    /// Model type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.ModelType ModelType {
      get { return modelType_; }
      set {
        modelType_ = value;
      }
    }

    /// <summary>Field number for the "fixedPhrase" field.</summary>
    public const int FixedPhraseFieldNumber = 4;
    private string fixedPhrase_ = "";
    /// <summary>
    /// Specific phrase used for enrollment (if applicable)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string FixedPhrase {
      get { return fixedPhrase_; }
      set {
        fixedPhrase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sampleRate" field.</summary>
    public const int SampleRateFieldNumber = 5;
    private int sampleRate_;
    /// <summary>
    /// Required sampling rate for the data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SampleRate {
      get { return sampleRate_; }
      set {
        sampleRate_ = value;
      }
    }

    /// <summary>Field number for the "versions" field.</summary>
    public const int VersionsFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_versions_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> versions_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of versions available for this model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Versions {
      get { return versions_; }
    }

    /// <summary>Field number for the "technology" field.</summary>
    public const int TechnologyFieldNumber = 7;
    private global::Sensory.Api.Common.TechnologyType technology_ = global::Sensory.Api.Common.TechnologyType.NotSet;
    /// <summary>
    /// The technology backing this model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.TechnologyType Technology {
      get { return technology_; }
      set {
        technology_ = value;
      }
    }

    /// <summary>Field number for the "isLivenessSupported" field.</summary>
    public const int IsLivenessSupportedFieldNumber = 8;
    private bool isLivenessSupported_;
    /// <summary>
    /// Indicates if liveness is supported by this model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLivenessSupported {
      get { return isLivenessSupported_; }
      set {
        isLivenessSupported_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (IsEnrollable != other.IsEnrollable) return false;
      if (ModelType != other.ModelType) return false;
      if (FixedPhrase != other.FixedPhrase) return false;
      if (SampleRate != other.SampleRate) return false;
      if(!versions_.Equals(other.versions_)) return false;
      if (Technology != other.Technology) return false;
      if (IsLivenessSupported != other.IsLivenessSupported) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (IsEnrollable != false) hash ^= IsEnrollable.GetHashCode();
      if (ModelType != global::Sensory.Api.Common.ModelType.Unknown) hash ^= ModelType.GetHashCode();
      if (FixedPhrase.Length != 0) hash ^= FixedPhrase.GetHashCode();
      if (SampleRate != 0) hash ^= SampleRate.GetHashCode();
      hash ^= versions_.GetHashCode();
      if (Technology != global::Sensory.Api.Common.TechnologyType.NotSet) hash ^= Technology.GetHashCode();
      if (IsLivenessSupported != false) hash ^= IsLivenessSupported.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (IsEnrollable != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEnrollable);
      }
      if (ModelType != global::Sensory.Api.Common.ModelType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ModelType);
      }
      if (FixedPhrase.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FixedPhrase);
      }
      if (SampleRate != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SampleRate);
      }
      versions_.WriteTo(output, _repeated_versions_codec);
      if (Technology != global::Sensory.Api.Common.TechnologyType.NotSet) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Technology);
      }
      if (IsLivenessSupported != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsLivenessSupported);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (IsEnrollable != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsEnrollable);
      }
      if (ModelType != global::Sensory.Api.Common.ModelType.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ModelType);
      }
      if (FixedPhrase.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FixedPhrase);
      }
      if (SampleRate != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(SampleRate);
      }
      versions_.WriteTo(ref output, _repeated_versions_codec);
      if (Technology != global::Sensory.Api.Common.TechnologyType.NotSet) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Technology);
      }
      if (IsLivenessSupported != false) {
        output.WriteRawTag(64);
        output.WriteBool(IsLivenessSupported);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (IsEnrollable != false) {
        size += 1 + 1;
      }
      if (ModelType != global::Sensory.Api.Common.ModelType.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ModelType);
      }
      if (FixedPhrase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FixedPhrase);
      }
      if (SampleRate != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SampleRate);
      }
      size += versions_.CalculateSize(_repeated_versions_codec);
      if (Technology != global::Sensory.Api.Common.TechnologyType.NotSet) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Technology);
      }
      if (IsLivenessSupported != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioModel other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.IsEnrollable != false) {
        IsEnrollable = other.IsEnrollable;
      }
      if (other.ModelType != global::Sensory.Api.Common.ModelType.Unknown) {
        ModelType = other.ModelType;
      }
      if (other.FixedPhrase.Length != 0) {
        FixedPhrase = other.FixedPhrase;
      }
      if (other.SampleRate != 0) {
        SampleRate = other.SampleRate;
      }
      versions_.Add(other.versions_);
      if (other.Technology != global::Sensory.Api.Common.TechnologyType.NotSet) {
        Technology = other.Technology;
      }
      if (other.IsLivenessSupported != false) {
        IsLivenessSupported = other.IsLivenessSupported;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            IsEnrollable = input.ReadBool();
            break;
          }
          case 24: {
            ModelType = (global::Sensory.Api.Common.ModelType) input.ReadEnum();
            break;
          }
          case 34: {
            FixedPhrase = input.ReadString();
            break;
          }
          case 40: {
            SampleRate = input.ReadInt32();
            break;
          }
          case 50: {
            versions_.AddEntriesFrom(input, _repeated_versions_codec);
            break;
          }
          case 56: {
            Technology = (global::Sensory.Api.Common.TechnologyType) input.ReadEnum();
            break;
          }
          case 64: {
            IsLivenessSupported = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            IsEnrollable = input.ReadBool();
            break;
          }
          case 24: {
            ModelType = (global::Sensory.Api.Common.ModelType) input.ReadEnum();
            break;
          }
          case 34: {
            FixedPhrase = input.ReadString();
            break;
          }
          case 40: {
            SampleRate = input.ReadInt32();
            break;
          }
          case 50: {
            versions_.AddEntriesFrom(ref input, _repeated_versions_codec);
            break;
          }
          case 56: {
            Technology = (global::Sensory.Api.Common.TechnologyType) input.ReadEnum();
            break;
          }
          case 64: {
            IsLivenessSupported = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Action that can be passed along with any audio data. This message instructs the audio engine to
  /// perfrom some kind of action after the data is processed.
  /// </summary>
  public sealed partial class AudioRequestPostProcessingAction : pb::IMessage<AudioRequestPostProcessingAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioRequestPostProcessingAction> _parser = new pb::MessageParser<AudioRequestPostProcessingAction>(() => new AudioRequestPostProcessingAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioRequestPostProcessingAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioRequestPostProcessingAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioRequestPostProcessingAction(AudioRequestPostProcessingAction other) : this() {
      actionId_ = other.actionId_;
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioRequestPostProcessingAction Clone() {
      return new AudioRequestPostProcessingAction(this);
    }

    /// <summary>Field number for the "actionId" field.</summary>
    public const int ActionIdFieldNumber = 1;
    private string actionId_ = "";
    /// <summary>
    /// ID that can be set by the client. If a flush or reset is requested,
    /// this ID will be returned to the client upon a successful flush or reset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActionId {
      get { return actionId_; }
      set {
        actionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private global::Sensory.Api.V1.Audio.AudioPostProcessingAction action_ = global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet;
    /// <summary>
    /// The specific action that is being requested.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioPostProcessingAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioRequestPostProcessingAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioRequestPostProcessingAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionId != other.ActionId) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionId.Length != 0) hash ^= ActionId.GetHashCode();
      if (Action != global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActionId);
      }
      if (Action != global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActionId);
      }
      if (Action != global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ActionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionId);
      }
      if (Action != global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioRequestPostProcessingAction other) {
      if (other == null) {
        return;
      }
      if (other.ActionId.Length != 0) {
        ActionId = other.ActionId;
      }
      if (other.Action != global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActionId = input.ReadString();
            break;
          }
          case 16: {
            Action = (global::Sensory.Api.V1.Audio.AudioPostProcessingAction) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ActionId = input.ReadString();
            break;
          }
          case 16: {
            Action = (global::Sensory.Api.V1.Audio.AudioPostProcessingAction) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Metadata that can be passed along with any audio response indicating
  /// </summary>
  public sealed partial class AudioResponsePostProcessingAction : pb::IMessage<AudioResponsePostProcessingAction>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioResponsePostProcessingAction> _parser = new pb::MessageParser<AudioResponsePostProcessingAction>(() => new AudioResponsePostProcessingAction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioResponsePostProcessingAction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioResponsePostProcessingAction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioResponsePostProcessingAction(AudioResponsePostProcessingAction other) : this() {
      actionId_ = other.actionId_;
      action_ = other.action_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioResponsePostProcessingAction Clone() {
      return new AudioResponsePostProcessingAction(this);
    }

    /// <summary>Field number for the "actionId" field.</summary>
    public const int ActionIdFieldNumber = 1;
    private string actionId_ = "";
    /// <summary>
    /// ID that was optionally set by the client with the metadata request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ActionId {
      get { return actionId_; }
      set {
        actionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 2;
    private global::Sensory.Api.V1.Audio.AudioPostProcessingAction action_ = global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet;
    /// <summary>
    /// The specific action that was completed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioPostProcessingAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioResponsePostProcessingAction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioResponsePostProcessingAction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ActionId != other.ActionId) return false;
      if (Action != other.Action) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ActionId.Length != 0) hash ^= ActionId.GetHashCode();
      if (Action != global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet) hash ^= Action.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ActionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActionId);
      }
      if (Action != global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ActionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ActionId);
      }
      if (Action != global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Action);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ActionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ActionId);
      }
      if (Action != global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioResponsePostProcessingAction other) {
      if (other == null) {
        return;
      }
      if (other.ActionId.Length != 0) {
        ActionId = other.ActionId;
      }
      if (other.Action != global::Sensory.Api.V1.Audio.AudioPostProcessingAction.NotSet) {
        Action = other.Action;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ActionId = input.ReadString();
            break;
          }
          case 16: {
            Action = (global::Sensory.Api.V1.Audio.AudioPostProcessingAction) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ActionId = input.ReadString();
            break;
          }
          case 16: {
            Action = (global::Sensory.Api.V1.Audio.AudioPostProcessingAction) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response containing the models currently available
  /// </summary>
  public sealed partial class GetModelsResponse : pb::IMessage<GetModelsResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetModelsResponse> _parser = new pb::MessageParser<GetModelsResponse>(() => new GetModelsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetModelsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetModelsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetModelsResponse(GetModelsResponse other) : this() {
      models_ = other.models_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetModelsResponse Clone() {
      return new GetModelsResponse(this);
    }

    /// <summary>Field number for the "models" field.</summary>
    public const int ModelsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Sensory.Api.V1.Audio.AudioModel> _repeated_models_codec
        = pb::FieldCodec.ForMessage(10, global::Sensory.Api.V1.Audio.AudioModel.Parser);
    private readonly pbc::RepeatedField<global::Sensory.Api.V1.Audio.AudioModel> models_ = new pbc::RepeatedField<global::Sensory.Api.V1.Audio.AudioModel>();
    /// <summary>
    /// List of supported models
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Sensory.Api.V1.Audio.AudioModel> Models {
      get { return models_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetModelsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetModelsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!models_.Equals(other.models_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= models_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      models_.WriteTo(output, _repeated_models_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      models_.WriteTo(ref output, _repeated_models_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += models_.CalculateSize(_repeated_models_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetModelsResponse other) {
      if (other == null) {
        return;
      }
      models_.Add(other.models_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            models_.AddEntriesFrom(input, _repeated_models_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            models_.AddEntriesFrom(ref input, _repeated_models_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The top-level message sent by the client for the `CreateEnrollment` method.
  /// Multiple `CreateEnrollmentRequest` messages are sent in a stream. The first message
  /// must contain a `config` message and must not contain `audioContent`.
  /// All subsequent messages must contain `audioContent` and
  /// must not contain a `config` message.
  /// </summary>
  public sealed partial class CreateEnrollmentRequest : pb::IMessage<CreateEnrollmentRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateEnrollmentRequest> _parser = new pb::MessageParser<CreateEnrollmentRequest>(() => new CreateEnrollmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateEnrollmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentRequest(CreateEnrollmentRequest other) : this() {
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          Config = other.Config.Clone();
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentRequest Clone() {
      return new CreateEnrollmentRequest(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    /// <summary>
    /// Provides information that specifies how to process the
    /// request. The first `CreateEnrollmentRequest` message must contain a
    /// `config`  message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.CreateEnrollmentConfig Config {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.Config ? (global::Sensory.Api.V1.Audio.CreateEnrollmentConfig) streamingRequest_ : null; }
      set {
        streamingRequest_ = value;
        streamingRequestCase_ = value == null ? StreamingRequestOneofCase.None : StreamingRequestOneofCase.Config;
      }
    }

    /// <summary>Field number for the "audioContent" field.</summary>
    public const int AudioContentFieldNumber = 2;
    /// <summary>
    /// The audio data to be recognized. Sequential chunks of audio data are sent
    /// in sequential `CreateEnrollmentRequest` messages. The first
    /// `CreateEnrollmentRequest` message must not contain `audioContent` data
    /// and all subsequent `CreateEnrollmentRequest` messages must contain
    /// `audioContent` data. The audio bytes must be encoded as specified in
    /// `AudioConfig`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AudioContent {
      get { return HasAudioContent ? (pb::ByteString) streamingRequest_ : pb::ByteString.Empty; }
      set {
        streamingRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        streamingRequestCase_ = StreamingRequestOneofCase.AudioContent;
      }
    }
    /// <summary>Gets whether the "audioContent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioContent {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.AudioContent; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "audioContent" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioContent() {
      if (HasAudioContent) {
        ClearStreamingRequest();
      }
    }

    private object streamingRequest_;
    /// <summary>Enum of possible cases for the "streamingRequest" oneof.</summary>
    public enum StreamingRequestOneofCase {
      None = 0,
      Config = 1,
      AudioContent = 2,
    }
    private StreamingRequestOneofCase streamingRequestCase_ = StreamingRequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingRequestOneofCase StreamingRequestCase {
      get { return streamingRequestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingRequest() {
      streamingRequestCase_ = StreamingRequestOneofCase.None;
      streamingRequest_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateEnrollmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateEnrollmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (AudioContent != other.AudioContent) return false;
      if (StreamingRequestCase != other.StreamingRequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) hash ^= Config.GetHashCode();
      if (HasAudioContent) hash ^= AudioContent.GetHashCode();
      hash ^= (int) streamingRequestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasAudioContent) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateEnrollmentRequest other) {
      if (other == null) {
        return;
      }
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          if (Config == null) {
            Config = new global::Sensory.Api.V1.Audio.CreateEnrollmentConfig();
          }
          Config.MergeFrom(other.Config);
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.CreateEnrollmentConfig subBuilder = new global::Sensory.Api.V1.Audio.CreateEnrollmentConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.CreateEnrollmentConfig subBuilder = new global::Sensory.Api.V1.Audio.CreateEnrollmentConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The top-level message sent by the client for the `Authenticate` method.
  /// Multiple `AuthenticateRequest` messages are sent in a stream. The first message
  /// must contain a `config` message and must not contain `audioContent`.
  /// All subsequent messages must contain `audioContent` and
  /// must not contain a `config` message.
  /// </summary>
  public sealed partial class AuthenticateRequest : pb::IMessage<AuthenticateRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthenticateRequest> _parser = new pb::MessageParser<AuthenticateRequest>(() => new AuthenticateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthenticateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateRequest(AuthenticateRequest other) : this() {
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          Config = other.Config.Clone();
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateRequest Clone() {
      return new AuthenticateRequest(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    /// <summary>
    /// Provides information that specifies how to process the
    /// request. The first `AuthenticateRequest` message must contain a
    /// `config`  message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AuthenticateConfig Config {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.Config ? (global::Sensory.Api.V1.Audio.AuthenticateConfig) streamingRequest_ : null; }
      set {
        streamingRequest_ = value;
        streamingRequestCase_ = value == null ? StreamingRequestOneofCase.None : StreamingRequestOneofCase.Config;
      }
    }

    /// <summary>Field number for the "audioContent" field.</summary>
    public const int AudioContentFieldNumber = 2;
    /// <summary>
    /// The audio data to be recognized. Sequential chunks of audio data are sent
    /// in sequential `AuthenticateRequest` messages. The first
    /// `AuthenticateRequest` message must not contain `audioContent` data
    /// and all subsequent `AuthenticateRequest` messages must contain
    /// `audioContent` data. The audio bytes must be encoded as specified in
    /// `AuthenticateConfig`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AudioContent {
      get { return HasAudioContent ? (pb::ByteString) streamingRequest_ : pb::ByteString.Empty; }
      set {
        streamingRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        streamingRequestCase_ = StreamingRequestOneofCase.AudioContent;
      }
    }
    /// <summary>Gets whether the "audioContent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioContent {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.AudioContent; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "audioContent" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioContent() {
      if (HasAudioContent) {
        ClearStreamingRequest();
      }
    }

    private object streamingRequest_;
    /// <summary>Enum of possible cases for the "streamingRequest" oneof.</summary>
    public enum StreamingRequestOneofCase {
      None = 0,
      Config = 1,
      AudioContent = 2,
    }
    private StreamingRequestOneofCase streamingRequestCase_ = StreamingRequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingRequestOneofCase StreamingRequestCase {
      get { return streamingRequestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingRequest() {
      streamingRequestCase_ = StreamingRequestOneofCase.None;
      streamingRequest_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthenticateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthenticateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (AudioContent != other.AudioContent) return false;
      if (StreamingRequestCase != other.StreamingRequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) hash ^= Config.GetHashCode();
      if (HasAudioContent) hash ^= AudioContent.GetHashCode();
      hash ^= (int) streamingRequestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasAudioContent) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthenticateRequest other) {
      if (other == null) {
        return;
      }
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          if (Config == null) {
            Config = new global::Sensory.Api.V1.Audio.AuthenticateConfig();
          }
          Config.MergeFrom(other.Config);
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.AuthenticateConfig subBuilder = new global::Sensory.Api.V1.Audio.AuthenticateConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.AuthenticateConfig subBuilder = new global::Sensory.Api.V1.Audio.AuthenticateConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The top-level message sent by the client for the `ValidateEvent` method.
  /// Multiple `ValidateEventRequest` messages are sent in a stream. The first message
  /// must contain a `config` message and must not contain `audioContent`.
  /// All subsequent messages must contain `audioContent` and
  /// must not contain a `config` message.
  /// </summary>
  public sealed partial class ValidateEventRequest : pb::IMessage<ValidateEventRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValidateEventRequest> _parser = new pb::MessageParser<ValidateEventRequest>(() => new ValidateEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ValidateEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEventRequest(ValidateEventRequest other) : this() {
      postProcessingAction_ = other.postProcessingAction_ != null ? other.postProcessingAction_.Clone() : null;
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          Config = other.Config.Clone();
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEventRequest Clone() {
      return new ValidateEventRequest(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    /// <summary>
    /// Provides information that specifies how to process the
    /// request. The first `ValidateEventRequest` message must contain a
    /// `config`  message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.ValidateEventConfig Config {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.Config ? (global::Sensory.Api.V1.Audio.ValidateEventConfig) streamingRequest_ : null; }
      set {
        streamingRequest_ = value;
        streamingRequestCase_ = value == null ? StreamingRequestOneofCase.None : StreamingRequestOneofCase.Config;
      }
    }

    /// <summary>Field number for the "audioContent" field.</summary>
    public const int AudioContentFieldNumber = 2;
    /// <summary>
    /// The audio data to be recognized. Sequential chunks of audio data are sent
    /// in sequential `ValidateEventRequest` messages. The first
    /// `ValidateEventRequest` message must not contain `audioContent` data
    /// and all subsequent `ValidateEventRequest` messages must contain
    /// `audioContent` data. The audio bytes must be encoded as specified in
    /// `ValidateEventConfig`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AudioContent {
      get { return HasAudioContent ? (pb::ByteString) streamingRequest_ : pb::ByteString.Empty; }
      set {
        streamingRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        streamingRequestCase_ = StreamingRequestOneofCase.AudioContent;
      }
    }
    /// <summary>Gets whether the "audioContent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioContent {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.AudioContent; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "audioContent" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioContent() {
      if (HasAudioContent) {
        ClearStreamingRequest();
      }
    }

    /// <summary>Field number for the "postProcessingAction" field.</summary>
    public const int PostProcessingActionFieldNumber = 10;
    private global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction postProcessingAction_;
    /// <summary>
    /// Message used to instruct the audio recognition engine to flush or reset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction PostProcessingAction {
      get { return postProcessingAction_; }
      set {
        postProcessingAction_ = value;
      }
    }

    private object streamingRequest_;
    /// <summary>Enum of possible cases for the "streamingRequest" oneof.</summary>
    public enum StreamingRequestOneofCase {
      None = 0,
      Config = 1,
      AudioContent = 2,
    }
    private StreamingRequestOneofCase streamingRequestCase_ = StreamingRequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingRequestOneofCase StreamingRequestCase {
      get { return streamingRequestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingRequest() {
      streamingRequestCase_ = StreamingRequestOneofCase.None;
      streamingRequest_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ValidateEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ValidateEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (AudioContent != other.AudioContent) return false;
      if (!object.Equals(PostProcessingAction, other.PostProcessingAction)) return false;
      if (StreamingRequestCase != other.StreamingRequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) hash ^= Config.GetHashCode();
      if (HasAudioContent) hash ^= AudioContent.GetHashCode();
      if (postProcessingAction_ != null) hash ^= PostProcessingAction.GetHashCode();
      hash ^= (int) streamingRequestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (postProcessingAction_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PostProcessingAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (postProcessingAction_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PostProcessingAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasAudioContent) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioContent);
      }
      if (postProcessingAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostProcessingAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ValidateEventRequest other) {
      if (other == null) {
        return;
      }
      if (other.postProcessingAction_ != null) {
        if (postProcessingAction_ == null) {
          PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction();
        }
        PostProcessingAction.MergeFrom(other.PostProcessingAction);
      }
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          if (Config == null) {
            Config = new global::Sensory.Api.V1.Audio.ValidateEventConfig();
          }
          Config.MergeFrom(other.Config);
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.ValidateEventConfig subBuilder = new global::Sensory.Api.V1.Audio.ValidateEventConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
          case 82: {
            if (postProcessingAction_ == null) {
              PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction();
            }
            input.ReadMessage(PostProcessingAction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.ValidateEventConfig subBuilder = new global::Sensory.Api.V1.Audio.ValidateEventConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
          case 82: {
            if (postProcessingAction_ == null) {
              PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction();
            }
            input.ReadMessage(PostProcessingAction);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The top-level message sent by the client for the `CreateEnrolledEvent` method.
  /// Multiple `CreateEnrolledEventRequest` messages are sent in a stream. The first message
  /// must contain a `config` message and must not contain `audioContent`.
  /// All subsequent messages must contain `audioContent` and
  /// must not contain a `config` message.
  /// </summary>
  public sealed partial class CreateEnrolledEventRequest : pb::IMessage<CreateEnrolledEventRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateEnrolledEventRequest> _parser = new pb::MessageParser<CreateEnrolledEventRequest>(() => new CreateEnrolledEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateEnrolledEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrolledEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrolledEventRequest(CreateEnrolledEventRequest other) : this() {
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          Config = other.Config.Clone();
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrolledEventRequest Clone() {
      return new CreateEnrolledEventRequest(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    /// <summary>
    /// Provides information that specifies how to process the
    /// request. The first `CreateEnrolledEventRequest` message must contain a
    /// `config`  message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.CreateEnrollmentEventConfig Config {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.Config ? (global::Sensory.Api.V1.Audio.CreateEnrollmentEventConfig) streamingRequest_ : null; }
      set {
        streamingRequest_ = value;
        streamingRequestCase_ = value == null ? StreamingRequestOneofCase.None : StreamingRequestOneofCase.Config;
      }
    }

    /// <summary>Field number for the "audioContent" field.</summary>
    public const int AudioContentFieldNumber = 2;
    /// <summary>
    /// The audio data to be recognized. Sequential chunks of audio data are sent
    /// in sequential `CreateEnrolledEventRequest` messages. The first
    /// `CreateEnrolledEventRequest` message must not contain `audioContent` data
    /// and all subsequent `CreateEnrolledEventRequest` messages must contain
    /// `audioContent` data. The audio bytes must be encoded as specified in
    /// `AudioConfig`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AudioContent {
      get { return HasAudioContent ? (pb::ByteString) streamingRequest_ : pb::ByteString.Empty; }
      set {
        streamingRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        streamingRequestCase_ = StreamingRequestOneofCase.AudioContent;
      }
    }
    /// <summary>Gets whether the "audioContent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioContent {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.AudioContent; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "audioContent" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioContent() {
      if (HasAudioContent) {
        ClearStreamingRequest();
      }
    }

    private object streamingRequest_;
    /// <summary>Enum of possible cases for the "streamingRequest" oneof.</summary>
    public enum StreamingRequestOneofCase {
      None = 0,
      Config = 1,
      AudioContent = 2,
    }
    private StreamingRequestOneofCase streamingRequestCase_ = StreamingRequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingRequestOneofCase StreamingRequestCase {
      get { return streamingRequestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingRequest() {
      streamingRequestCase_ = StreamingRequestOneofCase.None;
      streamingRequest_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateEnrolledEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateEnrolledEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (AudioContent != other.AudioContent) return false;
      if (StreamingRequestCase != other.StreamingRequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) hash ^= Config.GetHashCode();
      if (HasAudioContent) hash ^= AudioContent.GetHashCode();
      hash ^= (int) streamingRequestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasAudioContent) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateEnrolledEventRequest other) {
      if (other == null) {
        return;
      }
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          if (Config == null) {
            Config = new global::Sensory.Api.V1.Audio.CreateEnrollmentEventConfig();
          }
          Config.MergeFrom(other.Config);
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.CreateEnrollmentEventConfig subBuilder = new global::Sensory.Api.V1.Audio.CreateEnrollmentEventConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.CreateEnrollmentEventConfig subBuilder = new global::Sensory.Api.V1.Audio.CreateEnrollmentEventConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The top-level message sent by the client for the `ValidateEnrolledEvent` method.
  /// Multiple `ValidateEnrolledEventRequest` messages are sent in a stream. The first message
  /// must contain a `config` message and must not contain `audioContent`.
  /// All subsequent messages must contain `audioContent` and
  /// must not contain a `config` message.
  /// </summary>
  public sealed partial class ValidateEnrolledEventRequest : pb::IMessage<ValidateEnrolledEventRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValidateEnrolledEventRequest> _parser = new pb::MessageParser<ValidateEnrolledEventRequest>(() => new ValidateEnrolledEventRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ValidateEnrolledEventRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEnrolledEventRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEnrolledEventRequest(ValidateEnrolledEventRequest other) : this() {
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          Config = other.Config.Clone();
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEnrolledEventRequest Clone() {
      return new ValidateEnrolledEventRequest(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    /// <summary>
    /// Provides information that specifies how to process the
    /// request. The first `ValidateEnrolledEventRequest` message must contain a
    /// `config`  message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.ValidateEnrolledEventConfig Config {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.Config ? (global::Sensory.Api.V1.Audio.ValidateEnrolledEventConfig) streamingRequest_ : null; }
      set {
        streamingRequest_ = value;
        streamingRequestCase_ = value == null ? StreamingRequestOneofCase.None : StreamingRequestOneofCase.Config;
      }
    }

    /// <summary>Field number for the "audioContent" field.</summary>
    public const int AudioContentFieldNumber = 2;
    /// <summary>
    /// The audio data to be recognized. Sequential chunks of audio data are sent
    /// in sequential `ValidateEnrolledEventRequest` messages. The first
    /// `ValidateEnrolledEventRequest` message must not contain `audioContent` data
    /// and all subsequent `ValidateEnrolledEventRequest` messages must contain
    /// `audioContent` data. The audio bytes must be encoded as specified in
    /// `ValidateEnrolledEventConfig`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AudioContent {
      get { return HasAudioContent ? (pb::ByteString) streamingRequest_ : pb::ByteString.Empty; }
      set {
        streamingRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        streamingRequestCase_ = StreamingRequestOneofCase.AudioContent;
      }
    }
    /// <summary>Gets whether the "audioContent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioContent {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.AudioContent; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "audioContent" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioContent() {
      if (HasAudioContent) {
        ClearStreamingRequest();
      }
    }

    private object streamingRequest_;
    /// <summary>Enum of possible cases for the "streamingRequest" oneof.</summary>
    public enum StreamingRequestOneofCase {
      None = 0,
      Config = 1,
      AudioContent = 2,
    }
    private StreamingRequestOneofCase streamingRequestCase_ = StreamingRequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingRequestOneofCase StreamingRequestCase {
      get { return streamingRequestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingRequest() {
      streamingRequestCase_ = StreamingRequestOneofCase.None;
      streamingRequest_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ValidateEnrolledEventRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ValidateEnrolledEventRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (AudioContent != other.AudioContent) return false;
      if (StreamingRequestCase != other.StreamingRequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) hash ^= Config.GetHashCode();
      if (HasAudioContent) hash ^= AudioContent.GetHashCode();
      hash ^= (int) streamingRequestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasAudioContent) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ValidateEnrolledEventRequest other) {
      if (other == null) {
        return;
      }
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          if (Config == null) {
            Config = new global::Sensory.Api.V1.Audio.ValidateEnrolledEventConfig();
          }
          Config.MergeFrom(other.Config);
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.ValidateEnrolledEventConfig subBuilder = new global::Sensory.Api.V1.Audio.ValidateEnrolledEventConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.ValidateEnrolledEventConfig subBuilder = new global::Sensory.Api.V1.Audio.ValidateEnrolledEventConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The top-level message sent by the client for the `Transcribe` method.
  /// Multiple `TranscribeRequest` messages are sent in a stream. The first message
  /// must contain a `config` message and must not contain `audioContent`.
  /// All subsequent messages must contain `audioContent` and
  /// must not contain a `config` message.
  /// </summary>
  public sealed partial class TranscribeRequest : pb::IMessage<TranscribeRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranscribeRequest> _parser = new pb::MessageParser<TranscribeRequest>(() => new TranscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TranscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeRequest(TranscribeRequest other) : this() {
      postProcessingAction_ = other.postProcessingAction_ != null ? other.postProcessingAction_.Clone() : null;
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          Config = other.Config.Clone();
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeRequest Clone() {
      return new TranscribeRequest(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    /// <summary>
    /// Provides information that specifies how to process the
    /// request. The first `TranscribeRequest` message must contain a
    /// `config`  message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.TranscribeConfig Config {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.Config ? (global::Sensory.Api.V1.Audio.TranscribeConfig) streamingRequest_ : null; }
      set {
        streamingRequest_ = value;
        streamingRequestCase_ = value == null ? StreamingRequestOneofCase.None : StreamingRequestOneofCase.Config;
      }
    }

    /// <summary>Field number for the "audioContent" field.</summary>
    public const int AudioContentFieldNumber = 2;
    /// <summary>
    /// The audio data to be recognized. Sequential chunks of audio data are sent
    /// in sequential `TranscribeRequest` messages. The first
    /// `TranscribeRequest` message must not contain `audioContent` data
    /// and all subsequent `TranscribeRequest` messages must contain
    /// `audioContent` data. The audio bytes must be encoded as specified in
    /// `TranscribeConfig`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AudioContent {
      get { return HasAudioContent ? (pb::ByteString) streamingRequest_ : pb::ByteString.Empty; }
      set {
        streamingRequest_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        streamingRequestCase_ = StreamingRequestOneofCase.AudioContent;
      }
    }
    /// <summary>Gets whether the "audioContent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioContent {
      get { return streamingRequestCase_ == StreamingRequestOneofCase.AudioContent; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "audioContent" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioContent() {
      if (HasAudioContent) {
        ClearStreamingRequest();
      }
    }

    /// <summary>Field number for the "postProcessingAction" field.</summary>
    public const int PostProcessingActionFieldNumber = 10;
    private global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction postProcessingAction_;
    /// <summary>
    /// Message used to instruct the audio recognition engine to flush or reset.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction PostProcessingAction {
      get { return postProcessingAction_; }
      set {
        postProcessingAction_ = value;
      }
    }

    private object streamingRequest_;
    /// <summary>Enum of possible cases for the "streamingRequest" oneof.</summary>
    public enum StreamingRequestOneofCase {
      None = 0,
      Config = 1,
      AudioContent = 2,
    }
    private StreamingRequestOneofCase streamingRequestCase_ = StreamingRequestOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingRequestOneofCase StreamingRequestCase {
      get { return streamingRequestCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingRequest() {
      streamingRequestCase_ = StreamingRequestOneofCase.None;
      streamingRequest_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TranscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TranscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (AudioContent != other.AudioContent) return false;
      if (!object.Equals(PostProcessingAction, other.PostProcessingAction)) return false;
      if (StreamingRequestCase != other.StreamingRequestCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) hash ^= Config.GetHashCode();
      if (HasAudioContent) hash ^= AudioContent.GetHashCode();
      if (postProcessingAction_ != null) hash ^= PostProcessingAction.GetHashCode();
      hash ^= (int) streamingRequestCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (postProcessingAction_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PostProcessingAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (postProcessingAction_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PostProcessingAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasAudioContent) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioContent);
      }
      if (postProcessingAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostProcessingAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TranscribeRequest other) {
      if (other == null) {
        return;
      }
      if (other.postProcessingAction_ != null) {
        if (postProcessingAction_ == null) {
          PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction();
        }
        PostProcessingAction.MergeFrom(other.PostProcessingAction);
      }
      switch (other.StreamingRequestCase) {
        case StreamingRequestOneofCase.Config:
          if (Config == null) {
            Config = new global::Sensory.Api.V1.Audio.TranscribeConfig();
          }
          Config.MergeFrom(other.Config);
          break;
        case StreamingRequestOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.TranscribeConfig subBuilder = new global::Sensory.Api.V1.Audio.TranscribeConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
          case 82: {
            if (postProcessingAction_ == null) {
              PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction();
            }
            input.ReadMessage(PostProcessingAction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.TranscribeConfig subBuilder = new global::Sensory.Api.V1.Audio.TranscribeConfig();
            if (streamingRequestCase_ == StreamingRequestOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
          case 82: {
            if (postProcessingAction_ == null) {
              PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioRequestPostProcessingAction();
            }
            input.ReadMessage(PostProcessingAction);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The top-level message sent by the client for the `SynthesizeSpeech` method.
  /// </summary>
  public sealed partial class SynthesizeSpeechRequest : pb::IMessage<SynthesizeSpeechRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SynthesizeSpeechRequest> _parser = new pb::MessageParser<SynthesizeSpeechRequest>(() => new SynthesizeSpeechRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SynthesizeSpeechRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SynthesizeSpeechRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SynthesizeSpeechRequest(SynthesizeSpeechRequest other) : this() {
      phrase_ = other.phrase_;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SynthesizeSpeechRequest Clone() {
      return new SynthesizeSpeechRequest(this);
    }

    /// <summary>Field number for the "phrase" field.</summary>
    public const int PhraseFieldNumber = 1;
    private string phrase_ = "";
    /// <summary>
    /// The raw text to create voice synthesis for
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Phrase {
      get { return phrase_; }
      set {
        phrase_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 2;
    private global::Sensory.Api.V1.Audio.VoiceSynthesisConfig config_;
    /// <summary>
    /// Configurations for the synthesized voice
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.VoiceSynthesisConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SynthesizeSpeechRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SynthesizeSpeechRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Phrase != other.Phrase) return false;
      if (!object.Equals(Config, other.Config)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Phrase.Length != 0) hash ^= Phrase.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Phrase.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Phrase);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Phrase.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Phrase);
      }
      if (config_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Config);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Phrase.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Phrase);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SynthesizeSpeechRequest other) {
      if (other == null) {
        return;
      }
      if (other.Phrase.Length != 0) {
        Phrase = other.Phrase;
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Sensory.Api.V1.Audio.VoiceSynthesisConfig();
        }
        Config.MergeFrom(other.Config);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Phrase = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Sensory.Api.V1.Audio.VoiceSynthesisConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Phrase = input.ReadString();
            break;
          }
          case 18: {
            if (config_ == null) {
              Config = new global::Sensory.Api.V1.Audio.VoiceSynthesisConfig();
            }
            input.ReadMessage(Config);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to an enrollment request
  /// </summary>
  public sealed partial class CreateEnrollmentResponse : pb::IMessage<CreateEnrollmentResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateEnrollmentResponse> _parser = new pb::MessageParser<CreateEnrollmentResponse>(() => new CreateEnrollmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateEnrollmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentResponse(CreateEnrollmentResponse other) : this() {
      percentComplete_ = other.percentComplete_;
      audioEnergy_ = other.audioEnergy_;
      enrollmentId_ = other.enrollmentId_;
      modelName_ = other.modelName_;
      modelVersion_ = other.modelVersion_;
      modelPrompt_ = other.modelPrompt_;
      percentSegmentComplete_ = other.percentSegmentComplete_;
      enrollmentToken_ = other.enrollmentToken_ != null ? other.enrollmentToken_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentResponse Clone() {
      return new CreateEnrollmentResponse(this);
    }

    /// <summary>Field number for the "percentComplete" field.</summary>
    public const int PercentCompleteFieldNumber = 1;
    private long percentComplete_;
    /// <summary>
    /// Percent Complete as values between 0 and 100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PercentComplete {
      get { return percentComplete_; }
      set {
        percentComplete_ = value;
      }
    }

    /// <summary>Field number for the "audioEnergy" field.</summary>
    public const int AudioEnergyFieldNumber = 2;
    private float audioEnergy_;
    /// <summary>
    /// Relative energy of the processed audio as a value between 0 and 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AudioEnergy {
      get { return audioEnergy_; }
      set {
        audioEnergy_ = value;
      }
    }

    /// <summary>Field number for the "enrollmentId" field.</summary>
    public const int EnrollmentIdFieldNumber = 3;
    private string enrollmentId_ = "";
    /// <summary>
    /// If enrollment is successful, this value will be the unique Enrollment ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EnrollmentId {
      get { return enrollmentId_; }
      set {
        enrollmentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modelName" field.</summary>
    public const int ModelNameFieldNumber = 4;
    private string modelName_ = "";
    /// <summary>
    /// Model used for enrollment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modelVersion" field.</summary>
    public const int ModelVersionFieldNumber = 5;
    private string modelVersion_ = "";
    /// <summary>
    /// Model version used for enrollment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelVersion {
      get { return modelVersion_; }
      set {
        modelVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modelPrompt" field.</summary>
    public const int ModelPromptFieldNumber = 6;
    private string modelPrompt_ = "";
    /// <summary>
    /// Model prompt instructs the user to say something during enrollment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelPrompt {
      get { return modelPrompt_; }
      set {
        modelPrompt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "percentSegmentComplete" field.</summary>
    public const int PercentSegmentCompleteFieldNumber = 7;
    private long percentSegmentComplete_;
    /// <summary>
    /// Percent complete as values between 0 and 100 indicating the progress of the current enrollment segment.
    /// This is relevent in liveness enrollment where multiple groups of numbers must be spoken.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PercentSegmentComplete {
      get { return percentSegmentComplete_; }
      set {
        percentSegmentComplete_ = value;
      }
    }

    /// <summary>Field number for the "enrollmentToken" field.</summary>
    public const int EnrollmentTokenFieldNumber = 8;
    private global::Sensory.Api.Common.EnrollmentToken enrollmentToken_;
    /// <summary>
    /// Encrypted enrollment token, this token should be included in authentication requests
    /// If the server is configured to store enrollments server side, this will be left empty
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.EnrollmentToken EnrollmentToken {
      get { return enrollmentToken_; }
      set {
        enrollmentToken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateEnrollmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateEnrollmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PercentComplete != other.PercentComplete) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AudioEnergy, other.AudioEnergy)) return false;
      if (EnrollmentId != other.EnrollmentId) return false;
      if (ModelName != other.ModelName) return false;
      if (ModelVersion != other.ModelVersion) return false;
      if (ModelPrompt != other.ModelPrompt) return false;
      if (PercentSegmentComplete != other.PercentSegmentComplete) return false;
      if (!object.Equals(EnrollmentToken, other.EnrollmentToken)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (PercentComplete != 0L) hash ^= PercentComplete.GetHashCode();
      if (AudioEnergy != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AudioEnergy);
      if (EnrollmentId.Length != 0) hash ^= EnrollmentId.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (ModelVersion.Length != 0) hash ^= ModelVersion.GetHashCode();
      if (ModelPrompt.Length != 0) hash ^= ModelPrompt.GetHashCode();
      if (PercentSegmentComplete != 0L) hash ^= PercentSegmentComplete.GetHashCode();
      if (enrollmentToken_ != null) hash ^= EnrollmentToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (PercentComplete != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PercentComplete);
      }
      if (AudioEnergy != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(AudioEnergy);
      }
      if (EnrollmentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EnrollmentId);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ModelName);
      }
      if (ModelVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModelVersion);
      }
      if (ModelPrompt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModelPrompt);
      }
      if (PercentSegmentComplete != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(PercentSegmentComplete);
      }
      if (enrollmentToken_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EnrollmentToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (PercentComplete != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PercentComplete);
      }
      if (AudioEnergy != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(AudioEnergy);
      }
      if (EnrollmentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EnrollmentId);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ModelName);
      }
      if (ModelVersion.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModelVersion);
      }
      if (ModelPrompt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModelPrompt);
      }
      if (PercentSegmentComplete != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(PercentSegmentComplete);
      }
      if (enrollmentToken_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(EnrollmentToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (PercentComplete != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PercentComplete);
      }
      if (AudioEnergy != 0F) {
        size += 1 + 4;
      }
      if (EnrollmentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnrollmentId);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (ModelVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelVersion);
      }
      if (ModelPrompt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelPrompt);
      }
      if (PercentSegmentComplete != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PercentSegmentComplete);
      }
      if (enrollmentToken_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EnrollmentToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateEnrollmentResponse other) {
      if (other == null) {
        return;
      }
      if (other.PercentComplete != 0L) {
        PercentComplete = other.PercentComplete;
      }
      if (other.AudioEnergy != 0F) {
        AudioEnergy = other.AudioEnergy;
      }
      if (other.EnrollmentId.Length != 0) {
        EnrollmentId = other.EnrollmentId;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.ModelVersion.Length != 0) {
        ModelVersion = other.ModelVersion;
      }
      if (other.ModelPrompt.Length != 0) {
        ModelPrompt = other.ModelPrompt;
      }
      if (other.PercentSegmentComplete != 0L) {
        PercentSegmentComplete = other.PercentSegmentComplete;
      }
      if (other.enrollmentToken_ != null) {
        if (enrollmentToken_ == null) {
          EnrollmentToken = new global::Sensory.Api.Common.EnrollmentToken();
        }
        EnrollmentToken.MergeFrom(other.EnrollmentToken);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PercentComplete = input.ReadInt64();
            break;
          }
          case 21: {
            AudioEnergy = input.ReadFloat();
            break;
          }
          case 26: {
            EnrollmentId = input.ReadString();
            break;
          }
          case 34: {
            ModelName = input.ReadString();
            break;
          }
          case 42: {
            ModelVersion = input.ReadString();
            break;
          }
          case 50: {
            ModelPrompt = input.ReadString();
            break;
          }
          case 56: {
            PercentSegmentComplete = input.ReadInt64();
            break;
          }
          case 66: {
            if (enrollmentToken_ == null) {
              EnrollmentToken = new global::Sensory.Api.Common.EnrollmentToken();
            }
            input.ReadMessage(EnrollmentToken);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            PercentComplete = input.ReadInt64();
            break;
          }
          case 21: {
            AudioEnergy = input.ReadFloat();
            break;
          }
          case 26: {
            EnrollmentId = input.ReadString();
            break;
          }
          case 34: {
            ModelName = input.ReadString();
            break;
          }
          case 42: {
            ModelVersion = input.ReadString();
            break;
          }
          case 50: {
            ModelPrompt = input.ReadString();
            break;
          }
          case 56: {
            PercentSegmentComplete = input.ReadInt64();
            break;
          }
          case 66: {
            if (enrollmentToken_ == null) {
              EnrollmentToken = new global::Sensory.Api.Common.EnrollmentToken();
            }
            input.ReadMessage(EnrollmentToken);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to an authentication request
  /// </summary>
  public sealed partial class AuthenticateResponse : pb::IMessage<AuthenticateResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthenticateResponse> _parser = new pb::MessageParser<AuthenticateResponse>(() => new AuthenticateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthenticateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateResponse(AuthenticateResponse other) : this() {
      audioEnergy_ = other.audioEnergy_;
      success_ = other.success_;
      token_ = other.token_ != null ? other.token_.Clone() : null;
      userId_ = other.userId_;
      enrollmentId_ = other.enrollmentId_;
      modelPrompt_ = other.modelPrompt_;
      percentSegmentComplete_ = other.percentSegmentComplete_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateResponse Clone() {
      return new AuthenticateResponse(this);
    }

    /// <summary>Field number for the "audioEnergy" field.</summary>
    public const int AudioEnergyFieldNumber = 1;
    private float audioEnergy_;
    /// <summary>
    /// Relative energy of the processed audio as a value between 0 and 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AudioEnergy {
      get { return audioEnergy_; }
      set {
        audioEnergy_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    /// <summary>
    /// Success / Failure bit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 3;
    private global::Sensory.Api.Common.TokenResponse token_;
    /// <summary>
    /// Optional token that will be returned upon a successful authentication if doIncludeToken is set to true in the AuthenticateConfig
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.TokenResponse Token {
      get { return token_; }
      set {
        token_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 4;
    private string userId_ = "";
    /// <summary>
    /// The userID of the authenticated user
    /// Useful when evaluating enrollment groups
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enrollmentId" field.</summary>
    public const int EnrollmentIdFieldNumber = 5;
    private string enrollmentId_ = "";
    /// <summary>
    /// The enrollmentID of the authenticated enrollment
    /// Useful when evaluating enrollment groups
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EnrollmentId {
      get { return enrollmentId_; }
      set {
        enrollmentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modelPrompt" field.</summary>
    public const int ModelPromptFieldNumber = 6;
    private string modelPrompt_ = "";
    /// <summary>
    /// Model prompt instructs the user to say something during authentication
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelPrompt {
      get { return modelPrompt_; }
      set {
        modelPrompt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "percentSegmentComplete" field.</summary>
    public const int PercentSegmentCompleteFieldNumber = 7;
    private long percentSegmentComplete_;
    /// <summary>
    /// Percent complete as values between 0 and 100 indicating the progress of the current authentication segment.
    /// This is relevent in liveness enrollment where multiple numbers must be spoken.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long PercentSegmentComplete {
      get { return percentSegmentComplete_; }
      set {
        percentSegmentComplete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthenticateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthenticateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AudioEnergy, other.AudioEnergy)) return false;
      if (Success != other.Success) return false;
      if (!object.Equals(Token, other.Token)) return false;
      if (UserId != other.UserId) return false;
      if (EnrollmentId != other.EnrollmentId) return false;
      if (ModelPrompt != other.ModelPrompt) return false;
      if (PercentSegmentComplete != other.PercentSegmentComplete) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AudioEnergy != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AudioEnergy);
      if (Success != false) hash ^= Success.GetHashCode();
      if (token_ != null) hash ^= Token.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (EnrollmentId.Length != 0) hash ^= EnrollmentId.GetHashCode();
      if (ModelPrompt.Length != 0) hash ^= ModelPrompt.GetHashCode();
      if (PercentSegmentComplete != 0L) hash ^= PercentSegmentComplete.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AudioEnergy != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AudioEnergy);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (token_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Token);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (EnrollmentId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EnrollmentId);
      }
      if (ModelPrompt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModelPrompt);
      }
      if (PercentSegmentComplete != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(PercentSegmentComplete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AudioEnergy != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AudioEnergy);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (token_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Token);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (EnrollmentId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(EnrollmentId);
      }
      if (ModelPrompt.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(ModelPrompt);
      }
      if (PercentSegmentComplete != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(PercentSegmentComplete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AudioEnergy != 0F) {
        size += 1 + 4;
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (token_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Token);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (EnrollmentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnrollmentId);
      }
      if (ModelPrompt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelPrompt);
      }
      if (PercentSegmentComplete != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PercentSegmentComplete);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthenticateResponse other) {
      if (other == null) {
        return;
      }
      if (other.AudioEnergy != 0F) {
        AudioEnergy = other.AudioEnergy;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.token_ != null) {
        if (token_ == null) {
          Token = new global::Sensory.Api.Common.TokenResponse();
        }
        Token.MergeFrom(other.Token);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.EnrollmentId.Length != 0) {
        EnrollmentId = other.EnrollmentId;
      }
      if (other.ModelPrompt.Length != 0) {
        ModelPrompt = other.ModelPrompt;
      }
      if (other.PercentSegmentComplete != 0L) {
        PercentSegmentComplete = other.PercentSegmentComplete;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            AudioEnergy = input.ReadFloat();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 26: {
            if (token_ == null) {
              Token = new global::Sensory.Api.Common.TokenResponse();
            }
            input.ReadMessage(Token);
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
          case 42: {
            EnrollmentId = input.ReadString();
            break;
          }
          case 50: {
            ModelPrompt = input.ReadString();
            break;
          }
          case 56: {
            PercentSegmentComplete = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            AudioEnergy = input.ReadFloat();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 26: {
            if (token_ == null) {
              Token = new global::Sensory.Api.Common.TokenResponse();
            }
            input.ReadMessage(Token);
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
          case 42: {
            EnrollmentId = input.ReadString();
            break;
          }
          case 50: {
            ModelPrompt = input.ReadString();
            break;
          }
          case 56: {
            PercentSegmentComplete = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SoundIdTopNResponse : pb::IMessage<SoundIdTopNResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SoundIdTopNResponse> _parser = new pb::MessageParser<SoundIdTopNResponse>(() => new SoundIdTopNResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SoundIdTopNResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundIdTopNResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundIdTopNResponse(SoundIdTopNResponse other) : this() {
      resultId_ = other.resultId_;
      logitScore_ = other.logitScore_;
      probabilityScore_ = other.probabilityScore_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SoundIdTopNResponse Clone() {
      return new SoundIdTopNResponse(this);
    }

    /// <summary>Field number for the "resultId" field.</summary>
    public const int ResultIdFieldNumber = 1;
    private string resultId_ = "";
    /// <summary>
    /// Indicates the id of the particular sound that was recognized.
    /// Useful for combined models where multiple sound events can be recognized by the same model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultId {
      get { return resultId_; }
      set {
        resultId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "logitScore" field.</summary>
    public const int LogitScoreFieldNumber = 2;
    private float logitScore_;
    /// <summary>
    /// Logit value for the given result
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LogitScore {
      get { return logitScore_; }
      set {
        logitScore_ = value;
      }
    }

    /// <summary>Field number for the "probabilityScore" field.</summary>
    public const int ProbabilityScoreFieldNumber = 3;
    private float probabilityScore_;
    /// <summary>
    /// Probability value for the given result
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ProbabilityScore {
      get { return probabilityScore_; }
      set {
        probabilityScore_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SoundIdTopNResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SoundIdTopNResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResultId != other.ResultId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LogitScore, other.LogitScore)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ProbabilityScore, other.ProbabilityScore)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ResultId.Length != 0) hash ^= ResultId.GetHashCode();
      if (LogitScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LogitScore);
      if (ProbabilityScore != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ProbabilityScore);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ResultId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResultId);
      }
      if (LogitScore != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(LogitScore);
      }
      if (ProbabilityScore != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ProbabilityScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ResultId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResultId);
      }
      if (LogitScore != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(LogitScore);
      }
      if (ProbabilityScore != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(ProbabilityScore);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ResultId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultId);
      }
      if (LogitScore != 0F) {
        size += 1 + 4;
      }
      if (ProbabilityScore != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SoundIdTopNResponse other) {
      if (other == null) {
        return;
      }
      if (other.ResultId.Length != 0) {
        ResultId = other.ResultId;
      }
      if (other.LogitScore != 0F) {
        LogitScore = other.LogitScore;
      }
      if (other.ProbabilityScore != 0F) {
        ProbabilityScore = other.ProbabilityScore;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResultId = input.ReadString();
            break;
          }
          case 21: {
            LogitScore = input.ReadFloat();
            break;
          }
          case 29: {
            ProbabilityScore = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ResultId = input.ReadString();
            break;
          }
          case 21: {
            LogitScore = input.ReadFloat();
            break;
          }
          case 29: {
            ProbabilityScore = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response from a ValidateEventRequest
  /// </summary>
  public sealed partial class ValidateEventResponse : pb::IMessage<ValidateEventResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValidateEventResponse> _parser = new pb::MessageParser<ValidateEventResponse>(() => new ValidateEventResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ValidateEventResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEventResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEventResponse(ValidateEventResponse other) : this() {
      audioEnergy_ = other.audioEnergy_;
      success_ = other.success_;
      resultId_ = other.resultId_;
      score_ = other.score_;
      topNResponse_ = other.topNResponse_.Clone();
      resultStartTime_ = other.resultStartTime_;
      resultEndTime_ = other.resultEndTime_;
      postProcessingAction_ = other.postProcessingAction_ != null ? other.postProcessingAction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEventResponse Clone() {
      return new ValidateEventResponse(this);
    }

    /// <summary>Field number for the "audioEnergy" field.</summary>
    public const int AudioEnergyFieldNumber = 1;
    private float audioEnergy_;
    /// <summary>
    /// Relative energy of the processed audio as a value between 0 and 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AudioEnergy {
      get { return audioEnergy_; }
      set {
        audioEnergy_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    /// <summary>
    /// Success / Failure bit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "resultId" field.</summary>
    public const int ResultIdFieldNumber = 3;
    private string resultId_ = "";
    /// <summary>
    /// Indicates the id of the particular sound that was recognized.
    /// Useful for combined models where multiple sound events can be recognized by the same model.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ResultId {
      get { return resultId_; }
      set {
        resultId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "score" field.</summary>
    public const int ScoreFieldNumber = 4;
    private float score_;
    /// <summary>
    /// The score of the event between -100 to +100. Smaller values typically indicate an invalid sound while larger values would generally indicate a detected sound.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "topNResponse" field.</summary>
    public const int TopNResponseFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Sensory.Api.V1.Audio.SoundIdTopNResponse> _repeated_topNResponse_codec
        = pb::FieldCodec.ForMessage(42, global::Sensory.Api.V1.Audio.SoundIdTopNResponse.Parser);
    private readonly pbc::RepeatedField<global::Sensory.Api.V1.Audio.SoundIdTopNResponse> topNResponse_ = new pbc::RepeatedField<global::Sensory.Api.V1.Audio.SoundIdTopNResponse>();
    /// <summary>
    /// Array of the top N most likely results
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Sensory.Api.V1.Audio.SoundIdTopNResponse> TopNResponse {
      get { return topNResponse_; }
    }

    /// <summary>Field number for the "ResultStartTime" field.</summary>
    public const int ResultStartTimeFieldNumber = 6;
    private float resultStartTime_;
    /// <summary>
    /// If a post processing audio action was requested, this will be populated with the specific
    /// action that was completed along with the actionId optionally set by the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ResultStartTime {
      get { return resultStartTime_; }
      set {
        resultStartTime_ = value;
      }
    }

    /// <summary>Field number for the "ResultEndTime" field.</summary>
    public const int ResultEndTimeFieldNumber = 7;
    private float resultEndTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ResultEndTime {
      get { return resultEndTime_; }
      set {
        resultEndTime_ = value;
      }
    }

    /// <summary>Field number for the "postProcessingAction" field.</summary>
    public const int PostProcessingActionFieldNumber = 10;
    private global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction postProcessingAction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction PostProcessingAction {
      get { return postProcessingAction_; }
      set {
        postProcessingAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ValidateEventResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ValidateEventResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AudioEnergy, other.AudioEnergy)) return false;
      if (Success != other.Success) return false;
      if (ResultId != other.ResultId) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Score, other.Score)) return false;
      if(!topNResponse_.Equals(other.topNResponse_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ResultStartTime, other.ResultStartTime)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ResultEndTime, other.ResultEndTime)) return false;
      if (!object.Equals(PostProcessingAction, other.PostProcessingAction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AudioEnergy != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AudioEnergy);
      if (Success != false) hash ^= Success.GetHashCode();
      if (ResultId.Length != 0) hash ^= ResultId.GetHashCode();
      if (Score != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Score);
      hash ^= topNResponse_.GetHashCode();
      if (ResultStartTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ResultStartTime);
      if (ResultEndTime != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ResultEndTime);
      if (postProcessingAction_ != null) hash ^= PostProcessingAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AudioEnergy != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AudioEnergy);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (ResultId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultId);
      }
      if (Score != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Score);
      }
      topNResponse_.WriteTo(output, _repeated_topNResponse_codec);
      if (ResultStartTime != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ResultStartTime);
      }
      if (ResultEndTime != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(ResultEndTime);
      }
      if (postProcessingAction_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PostProcessingAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AudioEnergy != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AudioEnergy);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (ResultId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ResultId);
      }
      if (Score != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(Score);
      }
      topNResponse_.WriteTo(ref output, _repeated_topNResponse_codec);
      if (ResultStartTime != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(ResultStartTime);
      }
      if (ResultEndTime != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(ResultEndTime);
      }
      if (postProcessingAction_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PostProcessingAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AudioEnergy != 0F) {
        size += 1 + 4;
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (ResultId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResultId);
      }
      if (Score != 0F) {
        size += 1 + 4;
      }
      size += topNResponse_.CalculateSize(_repeated_topNResponse_codec);
      if (ResultStartTime != 0F) {
        size += 1 + 4;
      }
      if (ResultEndTime != 0F) {
        size += 1 + 4;
      }
      if (postProcessingAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostProcessingAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ValidateEventResponse other) {
      if (other == null) {
        return;
      }
      if (other.AudioEnergy != 0F) {
        AudioEnergy = other.AudioEnergy;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.ResultId.Length != 0) {
        ResultId = other.ResultId;
      }
      if (other.Score != 0F) {
        Score = other.Score;
      }
      topNResponse_.Add(other.topNResponse_);
      if (other.ResultStartTime != 0F) {
        ResultStartTime = other.ResultStartTime;
      }
      if (other.ResultEndTime != 0F) {
        ResultEndTime = other.ResultEndTime;
      }
      if (other.postProcessingAction_ != null) {
        if (postProcessingAction_ == null) {
          PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction();
        }
        PostProcessingAction.MergeFrom(other.PostProcessingAction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            AudioEnergy = input.ReadFloat();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 26: {
            ResultId = input.ReadString();
            break;
          }
          case 37: {
            Score = input.ReadFloat();
            break;
          }
          case 42: {
            topNResponse_.AddEntriesFrom(input, _repeated_topNResponse_codec);
            break;
          }
          case 53: {
            ResultStartTime = input.ReadFloat();
            break;
          }
          case 61: {
            ResultEndTime = input.ReadFloat();
            break;
          }
          case 82: {
            if (postProcessingAction_ == null) {
              PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction();
            }
            input.ReadMessage(PostProcessingAction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            AudioEnergy = input.ReadFloat();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 26: {
            ResultId = input.ReadString();
            break;
          }
          case 37: {
            Score = input.ReadFloat();
            break;
          }
          case 42: {
            topNResponse_.AddEntriesFrom(ref input, _repeated_topNResponse_codec);
            break;
          }
          case 53: {
            ResultStartTime = input.ReadFloat();
            break;
          }
          case 61: {
            ResultEndTime = input.ReadFloat();
            break;
          }
          case 82: {
            if (postProcessingAction_ == null) {
              PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction();
            }
            input.ReadMessage(PostProcessingAction);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response from a ValidateEventRequest
  /// </summary>
  public sealed partial class ValidateEnrolledEventResponse : pb::IMessage<ValidateEnrolledEventResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValidateEnrolledEventResponse> _parser = new pb::MessageParser<ValidateEnrolledEventResponse>(() => new ValidateEnrolledEventResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ValidateEnrolledEventResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEnrolledEventResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEnrolledEventResponse(ValidateEnrolledEventResponse other) : this() {
      audioEnergy_ = other.audioEnergy_;
      success_ = other.success_;
      enrollmentId_ = other.enrollmentId_;
      userId_ = other.userId_;
      modelPrompt_ = other.modelPrompt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEnrolledEventResponse Clone() {
      return new ValidateEnrolledEventResponse(this);
    }

    /// <summary>Field number for the "audioEnergy" field.</summary>
    public const int AudioEnergyFieldNumber = 1;
    private float audioEnergy_;
    /// <summary>
    /// Relative energy of the processed audio as a value between 0 and 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AudioEnergy {
      get { return audioEnergy_; }
      set {
        audioEnergy_ = value;
      }
    }

    /// <summary>Field number for the "success" field.</summary>
    public const int SuccessFieldNumber = 2;
    private bool success_;
    /// <summary>
    /// Success / Failure bit
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Success {
      get { return success_; }
      set {
        success_ = value;
      }
    }

    /// <summary>Field number for the "enrollmentId" field.</summary>
    public const int EnrollmentIdFieldNumber = 3;
    private string enrollmentId_ = "";
    /// <summary>
    /// The enrollmentID of the authenticated user
    /// Useful when evaluating enrollment groups
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EnrollmentId {
      get { return enrollmentId_; }
      set {
        enrollmentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 4;
    private string userId_ = "";
    /// <summary>
    /// The userID of the authenticated user
    /// Useful when evaluating enrollment groups
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modelPrompt" field.</summary>
    public const int ModelPromptFieldNumber = 5;
    private string modelPrompt_ = "";
    /// <summary>
    /// Model prompt instructs the user to say something during authentication
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelPrompt {
      get { return modelPrompt_; }
      set {
        modelPrompt_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ValidateEnrolledEventResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ValidateEnrolledEventResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AudioEnergy, other.AudioEnergy)) return false;
      if (Success != other.Success) return false;
      if (EnrollmentId != other.EnrollmentId) return false;
      if (UserId != other.UserId) return false;
      if (ModelPrompt != other.ModelPrompt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AudioEnergy != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AudioEnergy);
      if (Success != false) hash ^= Success.GetHashCode();
      if (EnrollmentId.Length != 0) hash ^= EnrollmentId.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ModelPrompt.Length != 0) hash ^= ModelPrompt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AudioEnergy != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AudioEnergy);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (EnrollmentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EnrollmentId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (ModelPrompt.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModelPrompt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AudioEnergy != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AudioEnergy);
      }
      if (Success != false) {
        output.WriteRawTag(16);
        output.WriteBool(Success);
      }
      if (EnrollmentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(EnrollmentId);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(UserId);
      }
      if (ModelPrompt.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ModelPrompt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AudioEnergy != 0F) {
        size += 1 + 4;
      }
      if (Success != false) {
        size += 1 + 1;
      }
      if (EnrollmentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnrollmentId);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ModelPrompt.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelPrompt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ValidateEnrolledEventResponse other) {
      if (other == null) {
        return;
      }
      if (other.AudioEnergy != 0F) {
        AudioEnergy = other.AudioEnergy;
      }
      if (other.Success != false) {
        Success = other.Success;
      }
      if (other.EnrollmentId.Length != 0) {
        EnrollmentId = other.EnrollmentId;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ModelPrompt.Length != 0) {
        ModelPrompt = other.ModelPrompt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            AudioEnergy = input.ReadFloat();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 26: {
            EnrollmentId = input.ReadString();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
          case 42: {
            ModelPrompt = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            AudioEnergy = input.ReadFloat();
            break;
          }
          case 16: {
            Success = input.ReadBool();
            break;
          }
          case 26: {
            EnrollmentId = input.ReadString();
            break;
          }
          case 34: {
            UserId = input.ReadString();
            break;
          }
          case 42: {
            ModelPrompt = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class TranscribeWord : pb::IMessage<TranscribeWord>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranscribeWord> _parser = new pb::MessageParser<TranscribeWord>(() => new TranscribeWord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TranscribeWord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeWord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeWord(TranscribeWord other) : this() {
      begintimeMs_ = other.begintimeMs_;
      endtimeMs_ = other.endtimeMs_;
      confidence_ = other.confidence_;
      wordState_ = other.wordState_;
      wordIndex_ = other.wordIndex_;
      word_ = other.word_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeWord Clone() {
      return new TranscribeWord(this);
    }

    /// <summary>Field number for the "begintimeMs" field.</summary>
    public const int BegintimeMsFieldNumber = 1;
    private ulong begintimeMs_;
    /// <summary>
    /// The time in the transcript where the word begins
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong BegintimeMs {
      get { return begintimeMs_; }
      set {
        begintimeMs_ = value;
      }
    }

    /// <summary>Field number for the "endtimeMs" field.</summary>
    public const int EndtimeMsFieldNumber = 2;
    private ulong endtimeMs_;
    /// <summary>
    /// The time in the transcript where the word ends
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong EndtimeMs {
      get { return endtimeMs_; }
      set {
        endtimeMs_ = value;
      }
    }

    /// <summary>Field number for the "confidence" field.</summary>
    public const int ConfidenceFieldNumber = 3;
    private float confidence_;
    /// <summary>
    /// The confidence score [0.0,1.0] that this word is correctly predicted
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Confidence {
      get { return confidence_; }
      set {
        confidence_ = value;
      }
    }

    /// <summary>Field number for the "wordState" field.</summary>
    public const int WordStateFieldNumber = 4;
    private global::Sensory.Api.V1.Audio.WordState wordState_ = global::Sensory.Api.V1.Audio.WordState.Pending;
    /// <summary>
    /// indicates the state of the word with respect to additional updates -- FINAL indicate the word will no longer change
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.WordState WordState {
      get { return wordState_; }
      set {
        wordState_ = value;
      }
    }

    /// <summary>Field number for the "wordIndex" field.</summary>
    public const int WordIndexFieldNumber = 5;
    private ulong wordIndex_;
    /// <summary>
    /// The Positional index within the session where this word appeared
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong WordIndex {
      get { return wordIndex_; }
      set {
        wordIndex_ = value;
      }
    }

    /// <summary>Field number for the "word" field.</summary>
    public const int WordFieldNumber = 6;
    private string word_ = "";
    /// <summary>
    /// The actual word that was predicted
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Word {
      get { return word_; }
      set {
        word_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TranscribeWord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TranscribeWord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BegintimeMs != other.BegintimeMs) return false;
      if (EndtimeMs != other.EndtimeMs) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Confidence, other.Confidence)) return false;
      if (WordState != other.WordState) return false;
      if (WordIndex != other.WordIndex) return false;
      if (Word != other.Word) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (BegintimeMs != 0UL) hash ^= BegintimeMs.GetHashCode();
      if (EndtimeMs != 0UL) hash ^= EndtimeMs.GetHashCode();
      if (Confidence != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Confidence);
      if (WordState != global::Sensory.Api.V1.Audio.WordState.Pending) hash ^= WordState.GetHashCode();
      if (WordIndex != 0UL) hash ^= WordIndex.GetHashCode();
      if (Word.Length != 0) hash ^= Word.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (BegintimeMs != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BegintimeMs);
      }
      if (EndtimeMs != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(EndtimeMs);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Confidence);
      }
      if (WordState != global::Sensory.Api.V1.Audio.WordState.Pending) {
        output.WriteRawTag(32);
        output.WriteEnum((int) WordState);
      }
      if (WordIndex != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(WordIndex);
      }
      if (Word.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Word);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (BegintimeMs != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(BegintimeMs);
      }
      if (EndtimeMs != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(EndtimeMs);
      }
      if (Confidence != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Confidence);
      }
      if (WordState != global::Sensory.Api.V1.Audio.WordState.Pending) {
        output.WriteRawTag(32);
        output.WriteEnum((int) WordState);
      }
      if (WordIndex != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(WordIndex);
      }
      if (Word.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Word);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (BegintimeMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(BegintimeMs);
      }
      if (EndtimeMs != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(EndtimeMs);
      }
      if (Confidence != 0F) {
        size += 1 + 4;
      }
      if (WordState != global::Sensory.Api.V1.Audio.WordState.Pending) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) WordState);
      }
      if (WordIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(WordIndex);
      }
      if (Word.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Word);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TranscribeWord other) {
      if (other == null) {
        return;
      }
      if (other.BegintimeMs != 0UL) {
        BegintimeMs = other.BegintimeMs;
      }
      if (other.EndtimeMs != 0UL) {
        EndtimeMs = other.EndtimeMs;
      }
      if (other.Confidence != 0F) {
        Confidence = other.Confidence;
      }
      if (other.WordState != global::Sensory.Api.V1.Audio.WordState.Pending) {
        WordState = other.WordState;
      }
      if (other.WordIndex != 0UL) {
        WordIndex = other.WordIndex;
      }
      if (other.Word.Length != 0) {
        Word = other.Word;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            BegintimeMs = input.ReadUInt64();
            break;
          }
          case 16: {
            EndtimeMs = input.ReadUInt64();
            break;
          }
          case 29: {
            Confidence = input.ReadFloat();
            break;
          }
          case 32: {
            WordState = (global::Sensory.Api.V1.Audio.WordState) input.ReadEnum();
            break;
          }
          case 40: {
            WordIndex = input.ReadUInt64();
            break;
          }
          case 50: {
            Word = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            BegintimeMs = input.ReadUInt64();
            break;
          }
          case 16: {
            EndtimeMs = input.ReadUInt64();
            break;
          }
          case 29: {
            Confidence = input.ReadFloat();
            break;
          }
          case 32: {
            WordState = (global::Sensory.Api.V1.Audio.WordState) input.ReadEnum();
            break;
          }
          case 40: {
            WordIndex = input.ReadUInt64();
            break;
          }
          case 50: {
            Word = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Word Level Transcription Data
  /// </summary>
  public sealed partial class TranscribeWordResponse : pb::IMessage<TranscribeWordResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranscribeWordResponse> _parser = new pb::MessageParser<TranscribeWordResponse>(() => new TranscribeWordResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TranscribeWordResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeWordResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeWordResponse(TranscribeWordResponse other) : this() {
      words_ = other.words_.Clone();
      firstWordIndex_ = other.firstWordIndex_;
      lastWordIndex_ = other.lastWordIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeWordResponse Clone() {
      return new TranscribeWordResponse(this);
    }

    /// <summary>Field number for the "words" field.</summary>
    public const int WordsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Sensory.Api.V1.Audio.TranscribeWord> _repeated_words_codec
        = pb::FieldCodec.ForMessage(10, global::Sensory.Api.V1.Audio.TranscribeWord.Parser);
    private readonly pbc::RepeatedField<global::Sensory.Api.V1.Audio.TranscribeWord> words_ = new pbc::RepeatedField<global::Sensory.Api.V1.Audio.TranscribeWord>();
    /// <summary>
    /// An array of TranscribeWords
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Sensory.Api.V1.Audio.TranscribeWord> Words {
      get { return words_; }
    }

    /// <summary>Field number for the "firstWordIndex" field.</summary>
    public const int FirstWordIndexFieldNumber = 2;
    private ulong firstWordIndex_;
    /// <summary>
    /// Lowest index of the words in wordList
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong FirstWordIndex {
      get { return firstWordIndex_; }
      set {
        firstWordIndex_ = value;
      }
    }

    /// <summary>Field number for the "lastWordIndex" field.</summary>
    public const int LastWordIndexFieldNumber = 3;
    private ulong lastWordIndex_;
    /// <summary>
    /// Highest index of the words in wordList
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong LastWordIndex {
      get { return lastWordIndex_; }
      set {
        lastWordIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TranscribeWordResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TranscribeWordResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!words_.Equals(other.words_)) return false;
      if (FirstWordIndex != other.FirstWordIndex) return false;
      if (LastWordIndex != other.LastWordIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= words_.GetHashCode();
      if (FirstWordIndex != 0UL) hash ^= FirstWordIndex.GetHashCode();
      if (LastWordIndex != 0UL) hash ^= LastWordIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      words_.WriteTo(output, _repeated_words_codec);
      if (FirstWordIndex != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(FirstWordIndex);
      }
      if (LastWordIndex != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LastWordIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      words_.WriteTo(ref output, _repeated_words_codec);
      if (FirstWordIndex != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(FirstWordIndex);
      }
      if (LastWordIndex != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(LastWordIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += words_.CalculateSize(_repeated_words_codec);
      if (FirstWordIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(FirstWordIndex);
      }
      if (LastWordIndex != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(LastWordIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TranscribeWordResponse other) {
      if (other == null) {
        return;
      }
      words_.Add(other.words_);
      if (other.FirstWordIndex != 0UL) {
        FirstWordIndex = other.FirstWordIndex;
      }
      if (other.LastWordIndex != 0UL) {
        LastWordIndex = other.LastWordIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            words_.AddEntriesFrom(input, _repeated_words_codec);
            break;
          }
          case 16: {
            FirstWordIndex = input.ReadUInt64();
            break;
          }
          case 24: {
            LastWordIndex = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            words_.AddEntriesFrom(ref input, _repeated_words_codec);
            break;
          }
          case 16: {
            FirstWordIndex = input.ReadUInt64();
            break;
          }
          case 24: {
            LastWordIndex = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response from a TranscribeRequest
  /// </summary>
  public sealed partial class TranscribeResponse : pb::IMessage<TranscribeResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranscribeResponse> _parser = new pb::MessageParser<TranscribeResponse>(() => new TranscribeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TranscribeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeResponse(TranscribeResponse other) : this() {
      audioEnergy_ = other.audioEnergy_;
      wordList_ = other.wordList_ != null ? other.wordList_.Clone() : null;
      hasVoiceActivity_ = other.hasVoiceActivity_;
      postProcessingAction_ = other.postProcessingAction_ != null ? other.postProcessingAction_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeResponse Clone() {
      return new TranscribeResponse(this);
    }

    /// <summary>Field number for the "audioEnergy" field.</summary>
    public const int AudioEnergyFieldNumber = 1;
    private float audioEnergy_;
    /// <summary>
    /// Relative energy of the processed audio as a value between 0 and 1
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float AudioEnergy {
      get { return audioEnergy_; }
      set {
        audioEnergy_ = value;
      }
    }

    /// <summary>Field number for the "wordList" field.</summary>
    public const int WordListFieldNumber = 4;
    private global::Sensory.Api.V1.Audio.TranscribeWordResponse wordList_;
    /// <summary>
    /// A response including word metadata
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.TranscribeWordResponse WordList {
      get { return wordList_; }
      set {
        wordList_ = value;
      }
    }

    /// <summary>Field number for the "hasVoiceActivity" field.</summary>
    public const int HasVoiceActivityFieldNumber = 5;
    private bool hasVoiceActivity_;
    /// <summary>
    /// Tells if any voice activity was detected for the most recently proccessed audio segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasVoiceActivity {
      get { return hasVoiceActivity_; }
      set {
        hasVoiceActivity_ = value;
      }
    }

    /// <summary>Field number for the "postProcessingAction" field.</summary>
    public const int PostProcessingActionFieldNumber = 10;
    private global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction postProcessingAction_;
    /// <summary>
    /// If a post processing audio action was requested, this will be populated with the specific
    /// action that was completed along with the actionId optionally set by the client.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction PostProcessingAction {
      get { return postProcessingAction_; }
      set {
        postProcessingAction_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TranscribeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TranscribeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AudioEnergy, other.AudioEnergy)) return false;
      if (!object.Equals(WordList, other.WordList)) return false;
      if (HasVoiceActivity != other.HasVoiceActivity) return false;
      if (!object.Equals(PostProcessingAction, other.PostProcessingAction)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AudioEnergy != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AudioEnergy);
      if (wordList_ != null) hash ^= WordList.GetHashCode();
      if (HasVoiceActivity != false) hash ^= HasVoiceActivity.GetHashCode();
      if (postProcessingAction_ != null) hash ^= PostProcessingAction.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AudioEnergy != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AudioEnergy);
      }
      if (wordList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(WordList);
      }
      if (HasVoiceActivity != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasVoiceActivity);
      }
      if (postProcessingAction_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PostProcessingAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AudioEnergy != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(AudioEnergy);
      }
      if (wordList_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(WordList);
      }
      if (HasVoiceActivity != false) {
        output.WriteRawTag(40);
        output.WriteBool(HasVoiceActivity);
      }
      if (postProcessingAction_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(PostProcessingAction);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AudioEnergy != 0F) {
        size += 1 + 4;
      }
      if (wordList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WordList);
      }
      if (HasVoiceActivity != false) {
        size += 1 + 1;
      }
      if (postProcessingAction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostProcessingAction);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TranscribeResponse other) {
      if (other == null) {
        return;
      }
      if (other.AudioEnergy != 0F) {
        AudioEnergy = other.AudioEnergy;
      }
      if (other.wordList_ != null) {
        if (wordList_ == null) {
          WordList = new global::Sensory.Api.V1.Audio.TranscribeWordResponse();
        }
        WordList.MergeFrom(other.WordList);
      }
      if (other.HasVoiceActivity != false) {
        HasVoiceActivity = other.HasVoiceActivity;
      }
      if (other.postProcessingAction_ != null) {
        if (postProcessingAction_ == null) {
          PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction();
        }
        PostProcessingAction.MergeFrom(other.PostProcessingAction);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            AudioEnergy = input.ReadFloat();
            break;
          }
          case 34: {
            if (wordList_ == null) {
              WordList = new global::Sensory.Api.V1.Audio.TranscribeWordResponse();
            }
            input.ReadMessage(WordList);
            break;
          }
          case 40: {
            HasVoiceActivity = input.ReadBool();
            break;
          }
          case 82: {
            if (postProcessingAction_ == null) {
              PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction();
            }
            input.ReadMessage(PostProcessingAction);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            AudioEnergy = input.ReadFloat();
            break;
          }
          case 34: {
            if (wordList_ == null) {
              WordList = new global::Sensory.Api.V1.Audio.TranscribeWordResponse();
            }
            input.ReadMessage(WordList);
            break;
          }
          case 40: {
            HasVoiceActivity = input.ReadBool();
            break;
          }
          case 82: {
            if (postProcessingAction_ == null) {
              PostProcessingAction = new global::Sensory.Api.V1.Audio.AudioResponsePostProcessingAction();
            }
            input.ReadMessage(PostProcessingAction);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response to a speech synthesis request
  /// </summary>
  public sealed partial class SynthesizeSpeechResponse : pb::IMessage<SynthesizeSpeechResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SynthesizeSpeechResponse> _parser = new pb::MessageParser<SynthesizeSpeechResponse>(() => new SynthesizeSpeechResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SynthesizeSpeechResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SynthesizeSpeechResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SynthesizeSpeechResponse(SynthesizeSpeechResponse other) : this() {
      switch (other.StreamingResponseCase) {
        case StreamingResponseOneofCase.Config:
          Config = other.Config.Clone();
          break;
        case StreamingResponseOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SynthesizeSpeechResponse Clone() {
      return new SynthesizeSpeechResponse(this);
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 1;
    /// <summary>
    /// Provides information that specifies how the audio has been formatted.
    /// The first `SpeechSynthesisResponse` message will contain a `config` message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioConfig Config {
      get { return streamingResponseCase_ == StreamingResponseOneofCase.Config ? (global::Sensory.Api.V1.Audio.AudioConfig) streamingResponse_ : null; }
      set {
        streamingResponse_ = value;
        streamingResponseCase_ = value == null ? StreamingResponseOneofCase.None : StreamingResponseOneofCase.Config;
      }
    }

    /// <summary>Field number for the "audioContent" field.</summary>
    public const int AudioContentFieldNumber = 2;
    /// <summary>
    /// The synthesized audio data. Sequential chunks of audio data are sent in
    /// sequential `SpeechSynthesisResponse` messages. The first `SpeechSynthesisResponse`
    /// message will only contain `config` data and all supsequent `SpeechSynthesisResponse`
    /// messages will contain `audioContent` data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString AudioContent {
      get { return HasAudioContent ? (pb::ByteString) streamingResponse_ : pb::ByteString.Empty; }
      set {
        streamingResponse_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        streamingResponseCase_ = StreamingResponseOneofCase.AudioContent;
      }
    }
    /// <summary>Gets whether the "audioContent" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAudioContent {
      get { return streamingResponseCase_ == StreamingResponseOneofCase.AudioContent; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "audioContent" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAudioContent() {
      if (HasAudioContent) {
        ClearStreamingResponse();
      }
    }

    private object streamingResponse_;
    /// <summary>Enum of possible cases for the "streamingResponse" oneof.</summary>
    public enum StreamingResponseOneofCase {
      None = 0,
      Config = 1,
      AudioContent = 2,
    }
    private StreamingResponseOneofCase streamingResponseCase_ = StreamingResponseOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public StreamingResponseOneofCase StreamingResponseCase {
      get { return streamingResponseCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearStreamingResponse() {
      streamingResponseCase_ = StreamingResponseOneofCase.None;
      streamingResponse_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SynthesizeSpeechResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SynthesizeSpeechResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Config, other.Config)) return false;
      if (AudioContent != other.AudioContent) return false;
      if (StreamingResponseCase != other.StreamingResponseCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (streamingResponseCase_ == StreamingResponseOneofCase.Config) hash ^= Config.GetHashCode();
      if (HasAudioContent) hash ^= AudioContent.GetHashCode();
      hash ^= (int) streamingResponseCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (streamingResponseCase_ == StreamingResponseOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (streamingResponseCase_ == StreamingResponseOneofCase.Config) {
        output.WriteRawTag(10);
        output.WriteMessage(Config);
      }
      if (HasAudioContent) {
        output.WriteRawTag(18);
        output.WriteBytes(AudioContent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (streamingResponseCase_ == StreamingResponseOneofCase.Config) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (HasAudioContent) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AudioContent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SynthesizeSpeechResponse other) {
      if (other == null) {
        return;
      }
      switch (other.StreamingResponseCase) {
        case StreamingResponseOneofCase.Config:
          if (Config == null) {
            Config = new global::Sensory.Api.V1.Audio.AudioConfig();
          }
          Config.MergeFrom(other.Config);
          break;
        case StreamingResponseOneofCase.AudioContent:
          AudioContent = other.AudioContent;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.AudioConfig subBuilder = new global::Sensory.Api.V1.Audio.AudioConfig();
            if (streamingResponseCase_ == StreamingResponseOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Sensory.Api.V1.Audio.AudioConfig subBuilder = new global::Sensory.Api.V1.Audio.AudioConfig();
            if (streamingResponseCase_ == StreamingResponseOneofCase.Config) {
              subBuilder.MergeFrom(Config);
            }
            input.ReadMessage(subBuilder);
            Config = subBuilder;
            break;
          }
          case 18: {
            AudioContent = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Provides information for an audio-based enrollment
  /// </summary>
  public sealed partial class CreateEnrollmentConfig : pb::IMessage<CreateEnrollmentConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateEnrollmentConfig> _parser = new pb::MessageParser<CreateEnrollmentConfig>(() => new CreateEnrollmentConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateEnrollmentConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentConfig(CreateEnrollmentConfig other) : this() {
      audio_ = other.audio_ != null ? other.audio_.Clone() : null;
      userId_ = other.userId_;
      deviceId_ = other.deviceId_;
      modelName_ = other.modelName_;
      description_ = other.description_;
      isLivenessEnabled_ = other.isLivenessEnabled_;
      referenceId_ = other.referenceId_;
      disableServerEnrollmentTemplateStorage_ = other.disableServerEnrollmentTemplateStorage_;
      switch (other.EnrollLengthCase) {
        case EnrollLengthOneofCase.EnrollmentNumUtterances:
          EnrollmentNumUtterances = other.EnrollmentNumUtterances;
          break;
        case EnrollLengthOneofCase.EnrollmentDuration:
          EnrollmentDuration = other.EnrollmentDuration;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentConfig Clone() {
      return new CreateEnrollmentConfig(this);
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 1;
    private global::Sensory.Api.V1.Audio.AudioConfig audio_;
    /// <summary>
    /// Required. Provides information that specifies how to
    /// process the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioConfig Audio {
      get { return audio_; }
      set {
        audio_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    /// <summary>
    /// The unique user Identifer. This value should be a unique email address or username known by the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "deviceId" field.</summary>
    public const int DeviceIdFieldNumber = 3;
    private string deviceId_ = "";
    /// <summary>
    /// The unique device Identifer. This value should be something retrieved by the devie prior to enrollment (like MAC Address)
    /// this value is used to identify a device uniquely across multiple enrollments
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string DeviceId {
      get { return deviceId_; }
      set {
        deviceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modelName" field.</summary>
    public const int ModelNameFieldNumber = 4;
    private string modelName_ = "";
    /// <summary>
    /// Name of background model to be enrolled in
    /// Background models can be retrieved from the GetModels() gRPC call
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// Description of the enrollment as entered by the user.
    /// Max length is 1023 characters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isLivenessEnabled" field.</summary>
    public const int IsLivenessEnabledFieldNumber = 6;
    private bool isLivenessEnabled_;
    /// <summary>
    /// Enable liveness if supported by the audio model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLivenessEnabled {
      get { return isLivenessEnabled_; }
      set {
        isLivenessEnabled_ = value;
      }
    }

    /// <summary>Field number for the "enrollmentNumUtterances" field.</summary>
    public const int EnrollmentNumUtterancesFieldNumber = 7;
    /// <summary>
    /// The number of times a specific phrase should be uttered during an enrollment.
    /// The default value is 4.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EnrollmentNumUtterances {
      get { return HasEnrollmentNumUtterances ? (uint) enrollLength_ : 0; }
      set {
        enrollLength_ = value;
        enrollLengthCase_ = EnrollLengthOneofCase.EnrollmentNumUtterances;
      }
    }
    /// <summary>Gets whether the "enrollmentNumUtterances" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnrollmentNumUtterances {
      get { return enrollLengthCase_ == EnrollLengthOneofCase.EnrollmentNumUtterances; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "enrollmentNumUtterances" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnrollmentNumUtterances() {
      if (HasEnrollmentNumUtterances) {
        ClearEnrollLength();
      }
    }

    /// <summary>Field number for the "enrollmentDuration" field.</summary>
    public const int EnrollmentDurationFieldNumber = 8;
    /// <summary>
    /// The allowed length of text-independent enrollments (such as digit liveness)
    /// The default value is 12.5 seconds without liveness and 8 seconds with liveness.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EnrollmentDuration {
      get { return HasEnrollmentDuration ? (float) enrollLength_ : 0F; }
      set {
        enrollLength_ = value;
        enrollLengthCase_ = EnrollLengthOneofCase.EnrollmentDuration;
      }
    }
    /// <summary>Gets whether the "enrollmentDuration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnrollmentDuration {
      get { return enrollLengthCase_ == EnrollLengthOneofCase.EnrollmentDuration; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "enrollmentDuration" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnrollmentDuration() {
      if (HasEnrollmentDuration) {
        ClearEnrollLength();
      }
    }

    /// <summary>Field number for the "referenceId" field.</summary>
    public const int ReferenceIdFieldNumber = 9;
    private string referenceId_ = "";
    /// <summary>
    /// Reference Id allows clients to assign their own identifier to enrollments for various purposes
    /// such as tying an audio and video enrollment together.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReferenceId {
      get { return referenceId_; }
      set {
        referenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disableServerEnrollmentTemplateStorage" field.</summary>
    public const int DisableServerEnrollmentTemplateStorageFieldNumber = 10;
    private bool disableServerEnrollmentTemplateStorage_;
    /// <summary>
    /// Prevent the server from storing the enrollment template. The template will be returned to the client for storage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DisableServerEnrollmentTemplateStorage {
      get { return disableServerEnrollmentTemplateStorage_; }
      set {
        disableServerEnrollmentTemplateStorage_ = value;
      }
    }

    private object enrollLength_;
    /// <summary>Enum of possible cases for the "enrollLength" oneof.</summary>
    public enum EnrollLengthOneofCase {
      None = 0,
      EnrollmentNumUtterances = 7,
      EnrollmentDuration = 8,
    }
    private EnrollLengthOneofCase enrollLengthCase_ = EnrollLengthOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnrollLengthOneofCase EnrollLengthCase {
      get { return enrollLengthCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnrollLength() {
      enrollLengthCase_ = EnrollLengthOneofCase.None;
      enrollLength_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateEnrollmentConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateEnrollmentConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audio, other.Audio)) return false;
      if (UserId != other.UserId) return false;
      if (DeviceId != other.DeviceId) return false;
      if (ModelName != other.ModelName) return false;
      if (Description != other.Description) return false;
      if (IsLivenessEnabled != other.IsLivenessEnabled) return false;
      if (EnrollmentNumUtterances != other.EnrollmentNumUtterances) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EnrollmentDuration, other.EnrollmentDuration)) return false;
      if (ReferenceId != other.ReferenceId) return false;
      if (DisableServerEnrollmentTemplateStorage != other.DisableServerEnrollmentTemplateStorage) return false;
      if (EnrollLengthCase != other.EnrollLengthCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (audio_ != null) hash ^= Audio.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (DeviceId.Length != 0) hash ^= DeviceId.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (IsLivenessEnabled != false) hash ^= IsLivenessEnabled.GetHashCode();
      if (HasEnrollmentNumUtterances) hash ^= EnrollmentNumUtterances.GetHashCode();
      if (HasEnrollmentDuration) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EnrollmentDuration);
      if (ReferenceId.Length != 0) hash ^= ReferenceId.GetHashCode();
      if (DisableServerEnrollmentTemplateStorage != false) hash ^= DisableServerEnrollmentTemplateStorage.GetHashCode();
      hash ^= (int) enrollLengthCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceId);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ModelName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (IsLivenessEnabled != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsLivenessEnabled);
      }
      if (HasEnrollmentNumUtterances) {
        output.WriteRawTag(56);
        output.WriteUInt32(EnrollmentNumUtterances);
      }
      if (HasEnrollmentDuration) {
        output.WriteRawTag(69);
        output.WriteFloat(EnrollmentDuration);
      }
      if (ReferenceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ReferenceId);
      }
      if (DisableServerEnrollmentTemplateStorage != false) {
        output.WriteRawTag(80);
        output.WriteBool(DisableServerEnrollmentTemplateStorage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (DeviceId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DeviceId);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ModelName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      if (IsLivenessEnabled != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsLivenessEnabled);
      }
      if (HasEnrollmentNumUtterances) {
        output.WriteRawTag(56);
        output.WriteUInt32(EnrollmentNumUtterances);
      }
      if (HasEnrollmentDuration) {
        output.WriteRawTag(69);
        output.WriteFloat(EnrollmentDuration);
      }
      if (ReferenceId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ReferenceId);
      }
      if (DisableServerEnrollmentTemplateStorage != false) {
        output.WriteRawTag(80);
        output.WriteBool(DisableServerEnrollmentTemplateStorage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (audio_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (DeviceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceId);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (IsLivenessEnabled != false) {
        size += 1 + 1;
      }
      if (HasEnrollmentNumUtterances) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnrollmentNumUtterances);
      }
      if (HasEnrollmentDuration) {
        size += 1 + 4;
      }
      if (ReferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferenceId);
      }
      if (DisableServerEnrollmentTemplateStorage != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateEnrollmentConfig other) {
      if (other == null) {
        return;
      }
      if (other.audio_ != null) {
        if (audio_ == null) {
          Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
        }
        Audio.MergeFrom(other.Audio);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.DeviceId.Length != 0) {
        DeviceId = other.DeviceId;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.IsLivenessEnabled != false) {
        IsLivenessEnabled = other.IsLivenessEnabled;
      }
      if (other.ReferenceId.Length != 0) {
        ReferenceId = other.ReferenceId;
      }
      if (other.DisableServerEnrollmentTemplateStorage != false) {
        DisableServerEnrollmentTemplateStorage = other.DisableServerEnrollmentTemplateStorage;
      }
      switch (other.EnrollLengthCase) {
        case EnrollLengthOneofCase.EnrollmentNumUtterances:
          EnrollmentNumUtterances = other.EnrollmentNumUtterances;
          break;
        case EnrollLengthOneofCase.EnrollmentDuration:
          EnrollmentDuration = other.EnrollmentDuration;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            DeviceId = input.ReadString();
            break;
          }
          case 34: {
            ModelName = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            IsLivenessEnabled = input.ReadBool();
            break;
          }
          case 56: {
            EnrollmentNumUtterances = input.ReadUInt32();
            break;
          }
          case 69: {
            EnrollmentDuration = input.ReadFloat();
            break;
          }
          case 74: {
            ReferenceId = input.ReadString();
            break;
          }
          case 80: {
            DisableServerEnrollmentTemplateStorage = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            DeviceId = input.ReadString();
            break;
          }
          case 34: {
            ModelName = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 48: {
            IsLivenessEnabled = input.ReadBool();
            break;
          }
          case 56: {
            EnrollmentNumUtterances = input.ReadUInt32();
            break;
          }
          case 69: {
            EnrollmentDuration = input.ReadFloat();
            break;
          }
          case 74: {
            ReferenceId = input.ReadString();
            break;
          }
          case 80: {
            DisableServerEnrollmentTemplateStorage = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Provides information for an audio-based authentication
  /// </summary>
  public sealed partial class AuthenticateConfig : pb::IMessage<AuthenticateConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AuthenticateConfig> _parser = new pb::MessageParser<AuthenticateConfig>(() => new AuthenticateConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AuthenticateConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateConfig(AuthenticateConfig other) : this() {
      audio_ = other.audio_ != null ? other.audio_.Clone() : null;
      doIncludeToken_ = other.doIncludeToken_;
      sensitivity_ = other.sensitivity_;
      security_ = other.security_;
      isLivenessEnabled_ = other.isLivenessEnabled_;
      enrollmentToken_ = other.enrollmentToken_;
      switch (other.AuthIdCase) {
        case AuthIdOneofCase.EnrollmentId:
          EnrollmentId = other.EnrollmentId;
          break;
        case AuthIdOneofCase.EnrollmentGroupId:
          EnrollmentGroupId = other.EnrollmentGroupId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthenticateConfig Clone() {
      return new AuthenticateConfig(this);
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 1;
    private global::Sensory.Api.V1.Audio.AudioConfig audio_;
    /// <summary>
    /// Required. Provides information that specifies how to
    /// process the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioConfig Audio {
      get { return audio_; }
      set {
        audio_ = value;
      }
    }

    /// <summary>Field number for the "enrollmentId" field.</summary>
    public const int EnrollmentIdFieldNumber = 2;
    /// <summary>
    /// Unique identifier created at enrollment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EnrollmentId {
      get { return HasEnrollmentId ? (string) authId_ : ""; }
      set {
        authId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        authIdCase_ = AuthIdOneofCase.EnrollmentId;
      }
    }
    /// <summary>Gets whether the "enrollmentId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnrollmentId {
      get { return authIdCase_ == AuthIdOneofCase.EnrollmentId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "enrollmentId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnrollmentId() {
      if (HasEnrollmentId) {
        ClearAuthId();
      }
    }

    /// <summary>Field number for the "enrollmentGroupId" field.</summary>
    public const int EnrollmentGroupIdFieldNumber = 3;
    /// <summary>
    /// Unique identifier for an enrollment group
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EnrollmentGroupId {
      get { return HasEnrollmentGroupId ? (string) authId_ : ""; }
      set {
        authId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        authIdCase_ = AuthIdOneofCase.EnrollmentGroupId;
      }
    }
    /// <summary>Gets whether the "enrollmentGroupId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnrollmentGroupId {
      get { return authIdCase_ == AuthIdOneofCase.EnrollmentGroupId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "enrollmentGroupId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnrollmentGroupId() {
      if (HasEnrollmentGroupId) {
        ClearAuthId();
      }
    }

    /// <summary>Field number for the "doIncludeToken" field.</summary>
    public const int DoIncludeTokenFieldNumber = 4;
    private bool doIncludeToken_;
    /// <summary>
    /// A boolean indicating if the response should include an OAuth token for the user associated with the enrollmentId
    /// The OAuth token will only be returned if the authentication is successful.
    /// It's important to note there will be a minor performance hit to authentication, as OAuth token generation is a semi-expensive operation.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DoIncludeToken {
      get { return doIncludeToken_; }
      set {
        doIncludeToken_ = value;
      }
    }

    /// <summary>Field number for the "sensitivity" field.</summary>
    public const int SensitivityFieldNumber = 5;
    private global::Sensory.Api.V1.Audio.ThresholdSensitivity sensitivity_ = global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest;
    /// <summary>
    /// The model sensitivity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.ThresholdSensitivity Sensitivity {
      get { return sensitivity_; }
      set {
        sensitivity_ = value;
      }
    }

    /// <summary>Field number for the "security" field.</summary>
    public const int SecurityFieldNumber = 6;
    private global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity security_ = global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity.High;
    /// <summary>
    /// The model security
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity Security {
      get { return security_; }
      set {
        security_ = value;
      }
    }

    /// <summary>Field number for the "isLivenessEnabled" field.</summary>
    public const int IsLivenessEnabledFieldNumber = 7;
    private bool isLivenessEnabled_;
    /// <summary>
    /// Enable liveness if supported by the audio model
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLivenessEnabled {
      get { return isLivenessEnabled_; }
      set {
        isLivenessEnabled_ = value;
      }
    }

    /// <summary>Field number for the "enrollmentToken" field.</summary>
    public const int EnrollmentTokenFieldNumber = 8;
    private pb::ByteString enrollmentToken_ = pb::ByteString.Empty;
    /// <summary>
    /// Encrypted enrollment token that was provided on enrollment creation
    /// If the server is configured to store enrollments server side, this may be left blank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EnrollmentToken {
      get { return enrollmentToken_; }
      set {
        enrollmentToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object authId_;
    /// <summary>Enum of possible cases for the "authId" oneof.</summary>
    public enum AuthIdOneofCase {
      None = 0,
      EnrollmentId = 2,
      EnrollmentGroupId = 3,
    }
    private AuthIdOneofCase authIdCase_ = AuthIdOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthIdOneofCase AuthIdCase {
      get { return authIdCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthId() {
      authIdCase_ = AuthIdOneofCase.None;
      authId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AuthenticateConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AuthenticateConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audio, other.Audio)) return false;
      if (EnrollmentId != other.EnrollmentId) return false;
      if (EnrollmentGroupId != other.EnrollmentGroupId) return false;
      if (DoIncludeToken != other.DoIncludeToken) return false;
      if (Sensitivity != other.Sensitivity) return false;
      if (Security != other.Security) return false;
      if (IsLivenessEnabled != other.IsLivenessEnabled) return false;
      if (EnrollmentToken != other.EnrollmentToken) return false;
      if (AuthIdCase != other.AuthIdCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (audio_ != null) hash ^= Audio.GetHashCode();
      if (HasEnrollmentId) hash ^= EnrollmentId.GetHashCode();
      if (HasEnrollmentGroupId) hash ^= EnrollmentGroupId.GetHashCode();
      if (DoIncludeToken != false) hash ^= DoIncludeToken.GetHashCode();
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) hash ^= Sensitivity.GetHashCode();
      if (Security != global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity.High) hash ^= Security.GetHashCode();
      if (IsLivenessEnabled != false) hash ^= IsLivenessEnabled.GetHashCode();
      if (EnrollmentToken.Length != 0) hash ^= EnrollmentToken.GetHashCode();
      hash ^= (int) authIdCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (HasEnrollmentId) {
        output.WriteRawTag(18);
        output.WriteString(EnrollmentId);
      }
      if (HasEnrollmentGroupId) {
        output.WriteRawTag(26);
        output.WriteString(EnrollmentGroupId);
      }
      if (DoIncludeToken != false) {
        output.WriteRawTag(32);
        output.WriteBool(DoIncludeToken);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Sensitivity);
      }
      if (Security != global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity.High) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Security);
      }
      if (IsLivenessEnabled != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsLivenessEnabled);
      }
      if (EnrollmentToken.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(EnrollmentToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (HasEnrollmentId) {
        output.WriteRawTag(18);
        output.WriteString(EnrollmentId);
      }
      if (HasEnrollmentGroupId) {
        output.WriteRawTag(26);
        output.WriteString(EnrollmentGroupId);
      }
      if (DoIncludeToken != false) {
        output.WriteRawTag(32);
        output.WriteBool(DoIncludeToken);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Sensitivity);
      }
      if (Security != global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity.High) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Security);
      }
      if (IsLivenessEnabled != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsLivenessEnabled);
      }
      if (EnrollmentToken.Length != 0) {
        output.WriteRawTag(66);
        output.WriteBytes(EnrollmentToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (audio_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
      }
      if (HasEnrollmentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnrollmentId);
      }
      if (HasEnrollmentGroupId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnrollmentGroupId);
      }
      if (DoIncludeToken != false) {
        size += 1 + 1;
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Sensitivity);
      }
      if (Security != global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity.High) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Security);
      }
      if (IsLivenessEnabled != false) {
        size += 1 + 1;
      }
      if (EnrollmentToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EnrollmentToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AuthenticateConfig other) {
      if (other == null) {
        return;
      }
      if (other.audio_ != null) {
        if (audio_ == null) {
          Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
        }
        Audio.MergeFrom(other.Audio);
      }
      if (other.DoIncludeToken != false) {
        DoIncludeToken = other.DoIncludeToken;
      }
      if (other.Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        Sensitivity = other.Sensitivity;
      }
      if (other.Security != global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity.High) {
        Security = other.Security;
      }
      if (other.IsLivenessEnabled != false) {
        IsLivenessEnabled = other.IsLivenessEnabled;
      }
      if (other.EnrollmentToken.Length != 0) {
        EnrollmentToken = other.EnrollmentToken;
      }
      switch (other.AuthIdCase) {
        case AuthIdOneofCase.EnrollmentId:
          EnrollmentId = other.EnrollmentId;
          break;
        case AuthIdOneofCase.EnrollmentGroupId:
          EnrollmentGroupId = other.EnrollmentGroupId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            EnrollmentId = input.ReadString();
            break;
          }
          case 26: {
            EnrollmentGroupId = input.ReadString();
            break;
          }
          case 32: {
            DoIncludeToken = input.ReadBool();
            break;
          }
          case 40: {
            Sensitivity = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
          case 48: {
            Security = (global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity) input.ReadEnum();
            break;
          }
          case 56: {
            IsLivenessEnabled = input.ReadBool();
            break;
          }
          case 66: {
            EnrollmentToken = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            EnrollmentId = input.ReadString();
            break;
          }
          case 26: {
            EnrollmentGroupId = input.ReadString();
            break;
          }
          case 32: {
            DoIncludeToken = input.ReadBool();
            break;
          }
          case 40: {
            Sensitivity = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
          case 48: {
            Security = (global::Sensory.Api.V1.Audio.AuthenticateConfig.Types.ThresholdSecurity) input.ReadEnum();
            break;
          }
          case 56: {
            IsLivenessEnabled = input.ReadBool();
            break;
          }
          case 66: {
            EnrollmentToken = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AuthenticateConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// Specifies the authentication security mode
      /// </summary>
      public enum ThresholdSecurity {
        /// <summary>
        /// Default  Setting.  Targets  low  Imposter  Accept  (IA).  Recommended  when  TSSV  is  used  solely  for
        /// biometric authentication. Generally this mode assumes the user will produce the voice password in
        /// isolation (rather than part of a voice-query) and over short listening windows (e.g., 7 seconds or
        /// less).  This  provides  the  ultimate  rejection  of  imposter  voices  at  the  expense  of  false-rejects,
        /// particularly in high-noise environments 5 dB SNR and below.
        /// </summary>
        [pbr::OriginalName("HIGH")] High = 0,
        /// <summary>
        /// Targets low False Reject (FR). Recommended to achieve low false reject or for applications where
        /// errors in imposter accept are not considered severe. Provides reduced rejection in extremely noisy
        /// environments. This mode is typically selected when TSSV is used in conjunction with a front-end
        /// fixed-trigger or part of a combined solution for voice-triggering in which the goal may be to gently
        /// reduce  voice-trigger  false  accepts  in  the  presence  of  noise,  or  to  reduce  the  chances  that  non-
        /// enrollees who say the wake word might accidentally cause an always-listening device to false-fire.
        /// </summary>
        [pbr::OriginalName("LOW")] Low = 1,
      }

    }
    #endregion

  }

  /// <summary>
  /// Provides information for an audio-based event recognition
  /// </summary>
  public sealed partial class ValidateEventConfig : pb::IMessage<ValidateEventConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValidateEventConfig> _parser = new pb::MessageParser<ValidateEventConfig>(() => new ValidateEventConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ValidateEventConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEventConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEventConfig(ValidateEventConfig other) : this() {
      audio_ = other.audio_ != null ? other.audio_.Clone() : null;
      modelName_ = other.modelName_;
      userId_ = other.userId_;
      sensitivity_ = other.sensitivity_;
      topN_ = other.topN_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEventConfig Clone() {
      return new ValidateEventConfig(this);
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 1;
    private global::Sensory.Api.V1.Audio.AudioConfig audio_;
    /// <summary>
    /// Required. Provides information that specifies how to
    /// process the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioConfig Audio {
      get { return audio_; }
      set {
        audio_ = value;
      }
    }

    /// <summary>Field number for the "modelName" field.</summary>
    public const int ModelNameFieldNumber = 2;
    private string modelName_ = "";
    /// <summary>
    /// Name of model to validate against
    /// Models can be retrieved from the GetModels() gRPC call
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 3;
    private string userId_ = "";
    /// <summary>
    /// The unique user Identifer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sensitivity" field.</summary>
    public const int SensitivityFieldNumber = 4;
    private global::Sensory.Api.V1.Audio.ThresholdSensitivity sensitivity_ = global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest;
    /// <summary>
    /// The model sensitivity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.ThresholdSensitivity Sensitivity {
      get { return sensitivity_; }
      set {
        sensitivity_ = value;
      }
    }

    /// <summary>Field number for the "topN" field.</summary>
    public const int TopNFieldNumber = 5;
    private int topN_;
    /// <summary>
    /// TopN is for the sound_id_topn model and dictates the top N most likely
    /// results to return
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int TopN {
      get { return topN_; }
      set {
        topN_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ValidateEventConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ValidateEventConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audio, other.Audio)) return false;
      if (ModelName != other.ModelName) return false;
      if (UserId != other.UserId) return false;
      if (Sensitivity != other.Sensitivity) return false;
      if (TopN != other.TopN) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (audio_ != null) hash ^= Audio.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) hash ^= Sensitivity.GetHashCode();
      if (TopN != 0) hash ^= TopN.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelName);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Sensitivity);
      }
      if (TopN != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TopN);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelName);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Sensitivity);
      }
      if (TopN != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(TopN);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (audio_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Sensitivity);
      }
      if (TopN != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TopN);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ValidateEventConfig other) {
      if (other == null) {
        return;
      }
      if (other.audio_ != null) {
        if (audio_ == null) {
          Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
        }
        Audio.MergeFrom(other.Audio);
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        Sensitivity = other.Sensitivity;
      }
      if (other.TopN != 0) {
        TopN = other.TopN;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            ModelName = input.ReadString();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 32: {
            Sensitivity = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
          case 40: {
            TopN = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            ModelName = input.ReadString();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 32: {
            Sensitivity = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
          case 40: {
            TopN = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CreateEnrollmentEventConfig : pb::IMessage<CreateEnrollmentEventConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateEnrollmentEventConfig> _parser = new pb::MessageParser<CreateEnrollmentEventConfig>(() => new CreateEnrollmentEventConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateEnrollmentEventConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentEventConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentEventConfig(CreateEnrollmentEventConfig other) : this() {
      audio_ = other.audio_ != null ? other.audio_.Clone() : null;
      userId_ = other.userId_;
      modelName_ = other.modelName_;
      description_ = other.description_;
      referenceId_ = other.referenceId_;
      switch (other.EnrollLengthCase) {
        case EnrollLengthOneofCase.EnrollmentNumUtterances:
          EnrollmentNumUtterances = other.EnrollmentNumUtterances;
          break;
        case EnrollLengthOneofCase.EnrollmentDuration:
          EnrollmentDuration = other.EnrollmentDuration;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateEnrollmentEventConfig Clone() {
      return new CreateEnrollmentEventConfig(this);
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 1;
    private global::Sensory.Api.V1.Audio.AudioConfig audio_;
    /// <summary>
    /// Required. Provides information that specifies how to
    /// process the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioConfig Audio {
      get { return audio_; }
      set {
        audio_ = value;
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 2;
    private string userId_ = "";
    /// <summary>
    /// The unique user Identifer. This value should be a unique email address or username known by the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "modelName" field.</summary>
    public const int ModelNameFieldNumber = 3;
    private string modelName_ = "";
    /// <summary>
    /// Name of background model to be enrolled in
    /// Background models can be retrieved from the GetModels() gRPC call
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the enrollment as entered by the user.
    /// Max length is 1023 characters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enrollmentNumUtterances" field.</summary>
    public const int EnrollmentNumUtterancesFieldNumber = 5;
    /// <summary>
    /// The number of times a specific phrase should be uttered during an enrollment.
    /// The default value is 4.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EnrollmentNumUtterances {
      get { return HasEnrollmentNumUtterances ? (uint) enrollLength_ : 0; }
      set {
        enrollLength_ = value;
        enrollLengthCase_ = EnrollLengthOneofCase.EnrollmentNumUtterances;
      }
    }
    /// <summary>Gets whether the "enrollmentNumUtterances" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnrollmentNumUtterances {
      get { return enrollLengthCase_ == EnrollLengthOneofCase.EnrollmentNumUtterances; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "enrollmentNumUtterances" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnrollmentNumUtterances() {
      if (HasEnrollmentNumUtterances) {
        ClearEnrollLength();
      }
    }

    /// <summary>Field number for the "enrollmentDuration" field.</summary>
    public const int EnrollmentDurationFieldNumber = 6;
    /// <summary>
    /// The allowed length of text-independent enrollments (such as digit liveness)
    /// The default value is 12.5 seconds without liveness and 8 seconds with liveness.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EnrollmentDuration {
      get { return HasEnrollmentDuration ? (float) enrollLength_ : 0F; }
      set {
        enrollLength_ = value;
        enrollLengthCase_ = EnrollLengthOneofCase.EnrollmentDuration;
      }
    }
    /// <summary>Gets whether the "enrollmentDuration" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnrollmentDuration {
      get { return enrollLengthCase_ == EnrollLengthOneofCase.EnrollmentDuration; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "enrollmentDuration" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnrollmentDuration() {
      if (HasEnrollmentDuration) {
        ClearEnrollLength();
      }
    }

    /// <summary>Field number for the "referenceId" field.</summary>
    public const int ReferenceIdFieldNumber = 7;
    private string referenceId_ = "";
    /// <summary>
    /// Reference Id allows clients to assign their own identifier to enrollments for various purposes
    /// such as tying an audio and video enrollment together.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ReferenceId {
      get { return referenceId_; }
      set {
        referenceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object enrollLength_;
    /// <summary>Enum of possible cases for the "enrollLength" oneof.</summary>
    public enum EnrollLengthOneofCase {
      None = 0,
      EnrollmentNumUtterances = 5,
      EnrollmentDuration = 6,
    }
    private EnrollLengthOneofCase enrollLengthCase_ = EnrollLengthOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnrollLengthOneofCase EnrollLengthCase {
      get { return enrollLengthCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnrollLength() {
      enrollLengthCase_ = EnrollLengthOneofCase.None;
      enrollLength_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateEnrollmentEventConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateEnrollmentEventConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audio, other.Audio)) return false;
      if (UserId != other.UserId) return false;
      if (ModelName != other.ModelName) return false;
      if (Description != other.Description) return false;
      if (EnrollmentNumUtterances != other.EnrollmentNumUtterances) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EnrollmentDuration, other.EnrollmentDuration)) return false;
      if (ReferenceId != other.ReferenceId) return false;
      if (EnrollLengthCase != other.EnrollLengthCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (audio_ != null) hash ^= Audio.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (HasEnrollmentNumUtterances) hash ^= EnrollmentNumUtterances.GetHashCode();
      if (HasEnrollmentDuration) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EnrollmentDuration);
      if (ReferenceId.Length != 0) hash ^= ReferenceId.GetHashCode();
      hash ^= (int) enrollLengthCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HasEnrollmentNumUtterances) {
        output.WriteRawTag(40);
        output.WriteUInt32(EnrollmentNumUtterances);
      }
      if (HasEnrollmentDuration) {
        output.WriteRawTag(53);
        output.WriteFloat(EnrollmentDuration);
      }
      if (ReferenceId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ReferenceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UserId);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ModelName);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (HasEnrollmentNumUtterances) {
        output.WriteRawTag(40);
        output.WriteUInt32(EnrollmentNumUtterances);
      }
      if (HasEnrollmentDuration) {
        output.WriteRawTag(53);
        output.WriteFloat(EnrollmentDuration);
      }
      if (ReferenceId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ReferenceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (audio_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (HasEnrollmentNumUtterances) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EnrollmentNumUtterances);
      }
      if (HasEnrollmentDuration) {
        size += 1 + 4;
      }
      if (ReferenceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferenceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateEnrollmentEventConfig other) {
      if (other == null) {
        return;
      }
      if (other.audio_ != null) {
        if (audio_ == null) {
          Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
        }
        Audio.MergeFrom(other.Audio);
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.ReferenceId.Length != 0) {
        ReferenceId = other.ReferenceId;
      }
      switch (other.EnrollLengthCase) {
        case EnrollLengthOneofCase.EnrollmentNumUtterances:
          EnrollmentNumUtterances = other.EnrollmentNumUtterances;
          break;
        case EnrollLengthOneofCase.EnrollmentDuration:
          EnrollmentDuration = other.EnrollmentDuration;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            ModelName = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            EnrollmentNumUtterances = input.ReadUInt32();
            break;
          }
          case 53: {
            EnrollmentDuration = input.ReadFloat();
            break;
          }
          case 58: {
            ReferenceId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            UserId = input.ReadString();
            break;
          }
          case 26: {
            ModelName = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            EnrollmentNumUtterances = input.ReadUInt32();
            break;
          }
          case 53: {
            EnrollmentDuration = input.ReadFloat();
            break;
          }
          case 58: {
            ReferenceId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Provides information for an audio-based event validation
  /// </summary>
  public sealed partial class ValidateEnrolledEventConfig : pb::IMessage<ValidateEnrolledEventConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ValidateEnrolledEventConfig> _parser = new pb::MessageParser<ValidateEnrolledEventConfig>(() => new ValidateEnrolledEventConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ValidateEnrolledEventConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEnrolledEventConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEnrolledEventConfig(ValidateEnrolledEventConfig other) : this() {
      audio_ = other.audio_ != null ? other.audio_.Clone() : null;
      sensitivity_ = other.sensitivity_;
      enrollmentToken_ = other.enrollmentToken_;
      switch (other.AuthIdCase) {
        case AuthIdOneofCase.EnrollmentId:
          EnrollmentId = other.EnrollmentId;
          break;
        case AuthIdOneofCase.EnrollmentGroupId:
          EnrollmentGroupId = other.EnrollmentGroupId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ValidateEnrolledEventConfig Clone() {
      return new ValidateEnrolledEventConfig(this);
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 1;
    private global::Sensory.Api.V1.Audio.AudioConfig audio_;
    /// <summary>
    /// Required. Provides information that specifies how to
    /// process the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioConfig Audio {
      get { return audio_; }
      set {
        audio_ = value;
      }
    }

    /// <summary>Field number for the "enrollmentId" field.</summary>
    public const int EnrollmentIdFieldNumber = 2;
    /// <summary>
    /// Unique identifier created at enrollment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EnrollmentId {
      get { return HasEnrollmentId ? (string) authId_ : ""; }
      set {
        authId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        authIdCase_ = AuthIdOneofCase.EnrollmentId;
      }
    }
    /// <summary>Gets whether the "enrollmentId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnrollmentId {
      get { return authIdCase_ == AuthIdOneofCase.EnrollmentId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "enrollmentId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnrollmentId() {
      if (HasEnrollmentId) {
        ClearAuthId();
      }
    }

    /// <summary>Field number for the "enrollmentGroupId" field.</summary>
    public const int EnrollmentGroupIdFieldNumber = 3;
    /// <summary>
    /// Unique identifier for an enrollment group
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string EnrollmentGroupId {
      get { return HasEnrollmentGroupId ? (string) authId_ : ""; }
      set {
        authId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        authIdCase_ = AuthIdOneofCase.EnrollmentGroupId;
      }
    }
    /// <summary>Gets whether the "enrollmentGroupId" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEnrollmentGroupId {
      get { return authIdCase_ == AuthIdOneofCase.EnrollmentGroupId; }
    }
    /// <summary> Clears the value of the oneof if it's currently set to "enrollmentGroupId" </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEnrollmentGroupId() {
      if (HasEnrollmentGroupId) {
        ClearAuthId();
      }
    }

    /// <summary>Field number for the "sensitivity" field.</summary>
    public const int SensitivityFieldNumber = 4;
    private global::Sensory.Api.V1.Audio.ThresholdSensitivity sensitivity_ = global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest;
    /// <summary>
    /// The model sensitivity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.ThresholdSensitivity Sensitivity {
      get { return sensitivity_; }
      set {
        sensitivity_ = value;
      }
    }

    /// <summary>Field number for the "enrollmentToken" field.</summary>
    public const int EnrollmentTokenFieldNumber = 5;
    private pb::ByteString enrollmentToken_ = pb::ByteString.Empty;
    /// <summary>
    /// Encrypted enrollment token that was provided on enrollment creation
    /// If the server is configured to store enrollments server side, this may be left blank
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString EnrollmentToken {
      get { return enrollmentToken_; }
      set {
        enrollmentToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object authId_;
    /// <summary>Enum of possible cases for the "authId" oneof.</summary>
    public enum AuthIdOneofCase {
      None = 0,
      EnrollmentId = 2,
      EnrollmentGroupId = 3,
    }
    private AuthIdOneofCase authIdCase_ = AuthIdOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AuthIdOneofCase AuthIdCase {
      get { return authIdCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAuthId() {
      authIdCase_ = AuthIdOneofCase.None;
      authId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ValidateEnrolledEventConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ValidateEnrolledEventConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audio, other.Audio)) return false;
      if (EnrollmentId != other.EnrollmentId) return false;
      if (EnrollmentGroupId != other.EnrollmentGroupId) return false;
      if (Sensitivity != other.Sensitivity) return false;
      if (EnrollmentToken != other.EnrollmentToken) return false;
      if (AuthIdCase != other.AuthIdCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (audio_ != null) hash ^= Audio.GetHashCode();
      if (HasEnrollmentId) hash ^= EnrollmentId.GetHashCode();
      if (HasEnrollmentGroupId) hash ^= EnrollmentGroupId.GetHashCode();
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) hash ^= Sensitivity.GetHashCode();
      if (EnrollmentToken.Length != 0) hash ^= EnrollmentToken.GetHashCode();
      hash ^= (int) authIdCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (HasEnrollmentId) {
        output.WriteRawTag(18);
        output.WriteString(EnrollmentId);
      }
      if (HasEnrollmentGroupId) {
        output.WriteRawTag(26);
        output.WriteString(EnrollmentGroupId);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Sensitivity);
      }
      if (EnrollmentToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(EnrollmentToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (HasEnrollmentId) {
        output.WriteRawTag(18);
        output.WriteString(EnrollmentId);
      }
      if (HasEnrollmentGroupId) {
        output.WriteRawTag(26);
        output.WriteString(EnrollmentGroupId);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Sensitivity);
      }
      if (EnrollmentToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteBytes(EnrollmentToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (audio_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
      }
      if (HasEnrollmentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnrollmentId);
      }
      if (HasEnrollmentGroupId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(EnrollmentGroupId);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Sensitivity);
      }
      if (EnrollmentToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(EnrollmentToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ValidateEnrolledEventConfig other) {
      if (other == null) {
        return;
      }
      if (other.audio_ != null) {
        if (audio_ == null) {
          Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
        }
        Audio.MergeFrom(other.Audio);
      }
      if (other.Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        Sensitivity = other.Sensitivity;
      }
      if (other.EnrollmentToken.Length != 0) {
        EnrollmentToken = other.EnrollmentToken;
      }
      switch (other.AuthIdCase) {
        case AuthIdOneofCase.EnrollmentId:
          EnrollmentId = other.EnrollmentId;
          break;
        case AuthIdOneofCase.EnrollmentGroupId:
          EnrollmentGroupId = other.EnrollmentGroupId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            EnrollmentId = input.ReadString();
            break;
          }
          case 26: {
            EnrollmentGroupId = input.ReadString();
            break;
          }
          case 32: {
            Sensitivity = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
          case 42: {
            EnrollmentToken = input.ReadBytes();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            EnrollmentId = input.ReadString();
            break;
          }
          case 26: {
            EnrollmentGroupId = input.ReadString();
            break;
          }
          case 32: {
            Sensitivity = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
          case 42: {
            EnrollmentToken = input.ReadBytes();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CustomVocabularyWords : pb::IMessage<CustomVocabularyWords>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CustomVocabularyWords> _parser = new pb::MessageParser<CustomVocabularyWords>(() => new CustomVocabularyWords());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CustomVocabularyWords> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomVocabularyWords() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomVocabularyWords(CustomVocabularyWords other) : this() {
      words_ = other.words_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CustomVocabularyWords Clone() {
      return new CustomVocabularyWords(this);
    }

    /// <summary>Field number for the "words" field.</summary>
    public const int WordsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_words_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> words_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Words {
      get { return words_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CustomVocabularyWords);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CustomVocabularyWords other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!words_.Equals(other.words_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= words_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      words_.WriteTo(output, _repeated_words_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      words_.WriteTo(ref output, _repeated_words_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += words_.CalculateSize(_repeated_words_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CustomVocabularyWords other) {
      if (other == null) {
        return;
      }
      words_.Add(other.words_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            words_.AddEntriesFrom(input, _repeated_words_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            words_.AddEntriesFrom(ref input, _repeated_words_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Provides information for an audio-based event recognition
  /// </summary>
  public sealed partial class TranscribeEventConfig : pb::IMessage<TranscribeEventConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranscribeEventConfig> _parser = new pb::MessageParser<TranscribeEventConfig>(() => new TranscribeEventConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TranscribeEventConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeEventConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeEventConfig(TranscribeEventConfig other) : this() {
      modelName_ = other.modelName_;
      sensitivity_ = other.sensitivity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeEventConfig Clone() {
      return new TranscribeEventConfig(this);
    }

    /// <summary>Field number for the "modelName" field.</summary>
    public const int ModelNameFieldNumber = 1;
    private string modelName_ = "";
    /// <summary>
    /// Name of model to validate against
    /// Models can be retrieved from the GetModels() gRPC call
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sensitivity" field.</summary>
    public const int SensitivityFieldNumber = 2;
    private global::Sensory.Api.V1.Audio.ThresholdSensitivity sensitivity_ = global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest;
    /// <summary>
    /// The model sensitivity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.ThresholdSensitivity Sensitivity {
      get { return sensitivity_; }
      set {
        sensitivity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TranscribeEventConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TranscribeEventConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelName != other.ModelName) return false;
      if (Sensitivity != other.Sensitivity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) hash ^= Sensitivity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ModelName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ModelName);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Sensitivity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ModelName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ModelName);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Sensitivity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Sensitivity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TranscribeEventConfig other) {
      if (other == null) {
        return;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.Sensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        Sensitivity = other.Sensitivity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ModelName = input.ReadString();
            break;
          }
          case 16: {
            Sensitivity = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ModelName = input.ReadString();
            break;
          }
          case 16: {
            Sensitivity = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Provides information for an audio-based transcription
  /// </summary>
  public sealed partial class TranscribeConfig : pb::IMessage<TranscribeConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TranscribeConfig> _parser = new pb::MessageParser<TranscribeConfig>(() => new TranscribeConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TranscribeConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeConfig(TranscribeConfig other) : this() {
      audio_ = other.audio_ != null ? other.audio_.Clone() : null;
      modelName_ = other.modelName_;
      userId_ = other.userId_;
      enablePunctuationCapitalization_ = other.enablePunctuationCapitalization_;
      doSingleUtterance_ = other.doSingleUtterance_;
      vadSensitivity_ = other.vadSensitivity_;
      vadDuration_ = other.vadDuration_;
      customVocabRewardThreshold_ = other.customVocabRewardThreshold_;
      customVocabularyId_ = other.customVocabularyId_;
      customWordList_ = other.customWordList_ != null ? other.customWordList_.Clone() : null;
      doOfflineMode_ = other.doOfflineMode_;
      wakeWordConfig_ = other.wakeWordConfig_ != null ? other.wakeWordConfig_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TranscribeConfig Clone() {
      return new TranscribeConfig(this);
    }

    /// <summary>Field number for the "audio" field.</summary>
    public const int AudioFieldNumber = 1;
    private global::Sensory.Api.V1.Audio.AudioConfig audio_;
    /// <summary>
    /// Required. Provides information that specifies how to
    /// process the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioConfig Audio {
      get { return audio_; }
      set {
        audio_ = value;
      }
    }

    /// <summary>Field number for the "modelName" field.</summary>
    public const int ModelNameFieldNumber = 2;
    private string modelName_ = "";
    /// <summary>
    /// Name of model to validate against
    /// Models can be retrieved from the GetModels() gRPC call
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "userId" field.</summary>
    public const int UserIdFieldNumber = 3;
    private string userId_ = "";
    /// <summary>
    /// The unique user Identifer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "enablePunctuationCapitalization" field.</summary>
    public const int EnablePunctuationCapitalizationFieldNumber = 4;
    private bool enablePunctuationCapitalization_;
    /// <summary>
    /// A flag indicating if the transcription session should use punctuation and capitalization support
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EnablePunctuationCapitalization {
      get { return enablePunctuationCapitalization_; }
      set {
        enablePunctuationCapitalization_ = value;
      }
    }

    /// <summary>Field number for the "doSingleUtterance" field.</summary>
    public const int DoSingleUtteranceFieldNumber = 5;
    private bool doSingleUtterance_;
    /// <summary>
    /// If enabled, the server will automatically close the stream once the user has stopped speaking
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DoSingleUtterance {
      get { return doSingleUtterance_; }
      set {
        doSingleUtterance_ = value;
      }
    }

    /// <summary>Field number for the "vadSensitivity" field.</summary>
    public const int VadSensitivityFieldNumber = 6;
    private global::Sensory.Api.V1.Audio.ThresholdSensitivity vadSensitivity_ = global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest;
    /// <summary>
    /// How sensitive the voice activiy detector should be when single utterance mode is enabled
    /// LOW is the recommended sensitivity to use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.ThresholdSensitivity VadSensitivity {
      get { return vadSensitivity_; }
      set {
        vadSensitivity_ = value;
      }
    }

    /// <summary>Field number for the "vadDuration" field.</summary>
    public const int VadDurationFieldNumber = 7;
    private float vadDuration_;
    /// <summary>
    /// The number of seconds of silence to detect before automatically ending the stream when single utterance mode is enabled
    /// If not specified, 1 second is used by default
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VadDuration {
      get { return vadDuration_; }
      set {
        vadDuration_ = value;
      }
    }

    /// <summary>Field number for the "customVocabRewardThreshold" field.</summary>
    public const int CustomVocabRewardThresholdFieldNumber = 8;
    private global::Sensory.Api.V1.Audio.ThresholdSensitivity customVocabRewardThreshold_ = global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest;
    /// <summary>
    /// Custom vocabulary reward threshold
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.ThresholdSensitivity CustomVocabRewardThreshold {
      get { return customVocabRewardThreshold_; }
      set {
        customVocabRewardThreshold_ = value;
      }
    }

    /// <summary>Field number for the "customVocabularyId" field.</summary>
    public const int CustomVocabularyIdFieldNumber = 9;
    private string customVocabularyId_ = "";
    /// <summary>
    /// the name of a custom vocabulary list stored on the server to use for this session
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string CustomVocabularyId {
      get { return customVocabularyId_; }
      set {
        customVocabularyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "customWordList" field.</summary>
    public const int CustomWordListFieldNumber = 10;
    private global::Sensory.Api.V1.Audio.CustomVocabularyWords customWordList_;
    /// <summary>
    /// A list of up to 100 custom vocabulary words in the form &lt;word>, &lt;pronunciation alternative 0>, &lt;alternative 1> etc...
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.CustomVocabularyWords CustomWordList {
      get { return customWordList_; }
      set {
        customWordList_ = value;
      }
    }

    /// <summary>Field number for the "doOfflineMode" field.</summary>
    public const int DoOfflineModeFieldNumber = 11;
    private bool doOfflineMode_;
    /// <summary>
    /// Offline mode is faster at processing large transcripts, but increases the latency in individual transcription responses.
    /// This mode is not recommended when streaming audio from a microphone, and should only be used for processing audio files.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool DoOfflineMode {
      get { return doOfflineMode_; }
      set {
        doOfflineMode_ = value;
      }
    }

    /// <summary>Field number for the "wakeWordConfig" field.</summary>
    public const int WakeWordConfigFieldNumber = 12;
    private global::Sensory.Api.V1.Audio.TranscribeEventConfig wakeWordConfig_;
    /// <summary>
    /// A wakeword that must be recognized before transcription will be returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.TranscribeEventConfig WakeWordConfig {
      get { return wakeWordConfig_; }
      set {
        wakeWordConfig_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TranscribeConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TranscribeConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Audio, other.Audio)) return false;
      if (ModelName != other.ModelName) return false;
      if (UserId != other.UserId) return false;
      if (EnablePunctuationCapitalization != other.EnablePunctuationCapitalization) return false;
      if (DoSingleUtterance != other.DoSingleUtterance) return false;
      if (VadSensitivity != other.VadSensitivity) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VadDuration, other.VadDuration)) return false;
      if (CustomVocabRewardThreshold != other.CustomVocabRewardThreshold) return false;
      if (CustomVocabularyId != other.CustomVocabularyId) return false;
      if (!object.Equals(CustomWordList, other.CustomWordList)) return false;
      if (DoOfflineMode != other.DoOfflineMode) return false;
      if (!object.Equals(WakeWordConfig, other.WakeWordConfig)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (audio_ != null) hash ^= Audio.GetHashCode();
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (EnablePunctuationCapitalization != false) hash ^= EnablePunctuationCapitalization.GetHashCode();
      if (DoSingleUtterance != false) hash ^= DoSingleUtterance.GetHashCode();
      if (VadSensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) hash ^= VadSensitivity.GetHashCode();
      if (VadDuration != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VadDuration);
      if (CustomVocabRewardThreshold != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) hash ^= CustomVocabRewardThreshold.GetHashCode();
      if (CustomVocabularyId.Length != 0) hash ^= CustomVocabularyId.GetHashCode();
      if (customWordList_ != null) hash ^= CustomWordList.GetHashCode();
      if (DoOfflineMode != false) hash ^= DoOfflineMode.GetHashCode();
      if (wakeWordConfig_ != null) hash ^= WakeWordConfig.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelName);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (EnablePunctuationCapitalization != false) {
        output.WriteRawTag(32);
        output.WriteBool(EnablePunctuationCapitalization);
      }
      if (DoSingleUtterance != false) {
        output.WriteRawTag(40);
        output.WriteBool(DoSingleUtterance);
      }
      if (VadSensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(48);
        output.WriteEnum((int) VadSensitivity);
      }
      if (VadDuration != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(VadDuration);
      }
      if (CustomVocabRewardThreshold != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(64);
        output.WriteEnum((int) CustomVocabRewardThreshold);
      }
      if (CustomVocabularyId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CustomVocabularyId);
      }
      if (customWordList_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CustomWordList);
      }
      if (DoOfflineMode != false) {
        output.WriteRawTag(88);
        output.WriteBool(DoOfflineMode);
      }
      if (wakeWordConfig_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(WakeWordConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (audio_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Audio);
      }
      if (ModelName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelName);
      }
      if (UserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserId);
      }
      if (EnablePunctuationCapitalization != false) {
        output.WriteRawTag(32);
        output.WriteBool(EnablePunctuationCapitalization);
      }
      if (DoSingleUtterance != false) {
        output.WriteRawTag(40);
        output.WriteBool(DoSingleUtterance);
      }
      if (VadSensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(48);
        output.WriteEnum((int) VadSensitivity);
      }
      if (VadDuration != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(VadDuration);
      }
      if (CustomVocabRewardThreshold != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        output.WriteRawTag(64);
        output.WriteEnum((int) CustomVocabRewardThreshold);
      }
      if (CustomVocabularyId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(CustomVocabularyId);
      }
      if (customWordList_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(CustomWordList);
      }
      if (DoOfflineMode != false) {
        output.WriteRawTag(88);
        output.WriteBool(DoOfflineMode);
      }
      if (wakeWordConfig_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(WakeWordConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (audio_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Audio);
      }
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (EnablePunctuationCapitalization != false) {
        size += 1 + 1;
      }
      if (DoSingleUtterance != false) {
        size += 1 + 1;
      }
      if (VadSensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VadSensitivity);
      }
      if (VadDuration != 0F) {
        size += 1 + 4;
      }
      if (CustomVocabRewardThreshold != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) CustomVocabRewardThreshold);
      }
      if (CustomVocabularyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CustomVocabularyId);
      }
      if (customWordList_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CustomWordList);
      }
      if (DoOfflineMode != false) {
        size += 1 + 1;
      }
      if (wakeWordConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WakeWordConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TranscribeConfig other) {
      if (other == null) {
        return;
      }
      if (other.audio_ != null) {
        if (audio_ == null) {
          Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
        }
        Audio.MergeFrom(other.Audio);
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.EnablePunctuationCapitalization != false) {
        EnablePunctuationCapitalization = other.EnablePunctuationCapitalization;
      }
      if (other.DoSingleUtterance != false) {
        DoSingleUtterance = other.DoSingleUtterance;
      }
      if (other.VadSensitivity != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        VadSensitivity = other.VadSensitivity;
      }
      if (other.VadDuration != 0F) {
        VadDuration = other.VadDuration;
      }
      if (other.CustomVocabRewardThreshold != global::Sensory.Api.V1.Audio.ThresholdSensitivity.Lowest) {
        CustomVocabRewardThreshold = other.CustomVocabRewardThreshold;
      }
      if (other.CustomVocabularyId.Length != 0) {
        CustomVocabularyId = other.CustomVocabularyId;
      }
      if (other.customWordList_ != null) {
        if (customWordList_ == null) {
          CustomWordList = new global::Sensory.Api.V1.Audio.CustomVocabularyWords();
        }
        CustomWordList.MergeFrom(other.CustomWordList);
      }
      if (other.DoOfflineMode != false) {
        DoOfflineMode = other.DoOfflineMode;
      }
      if (other.wakeWordConfig_ != null) {
        if (wakeWordConfig_ == null) {
          WakeWordConfig = new global::Sensory.Api.V1.Audio.TranscribeEventConfig();
        }
        WakeWordConfig.MergeFrom(other.WakeWordConfig);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            ModelName = input.ReadString();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 32: {
            EnablePunctuationCapitalization = input.ReadBool();
            break;
          }
          case 40: {
            DoSingleUtterance = input.ReadBool();
            break;
          }
          case 48: {
            VadSensitivity = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
          case 61: {
            VadDuration = input.ReadFloat();
            break;
          }
          case 64: {
            CustomVocabRewardThreshold = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
          case 74: {
            CustomVocabularyId = input.ReadString();
            break;
          }
          case 82: {
            if (customWordList_ == null) {
              CustomWordList = new global::Sensory.Api.V1.Audio.CustomVocabularyWords();
            }
            input.ReadMessage(CustomWordList);
            break;
          }
          case 88: {
            DoOfflineMode = input.ReadBool();
            break;
          }
          case 98: {
            if (wakeWordConfig_ == null) {
              WakeWordConfig = new global::Sensory.Api.V1.Audio.TranscribeEventConfig();
            }
            input.ReadMessage(WakeWordConfig);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (audio_ == null) {
              Audio = new global::Sensory.Api.V1.Audio.AudioConfig();
            }
            input.ReadMessage(Audio);
            break;
          }
          case 18: {
            ModelName = input.ReadString();
            break;
          }
          case 26: {
            UserId = input.ReadString();
            break;
          }
          case 32: {
            EnablePunctuationCapitalization = input.ReadBool();
            break;
          }
          case 40: {
            DoSingleUtterance = input.ReadBool();
            break;
          }
          case 48: {
            VadSensitivity = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
          case 61: {
            VadDuration = input.ReadFloat();
            break;
          }
          case 64: {
            CustomVocabRewardThreshold = (global::Sensory.Api.V1.Audio.ThresholdSensitivity) input.ReadEnum();
            break;
          }
          case 74: {
            CustomVocabularyId = input.ReadString();
            break;
          }
          case 82: {
            if (customWordList_ == null) {
              CustomWordList = new global::Sensory.Api.V1.Audio.CustomVocabularyWords();
            }
            input.ReadMessage(CustomWordList);
            break;
          }
          case 88: {
            DoOfflineMode = input.ReadBool();
            break;
          }
          case 98: {
            if (wakeWordConfig_ == null) {
              WakeWordConfig = new global::Sensory.Api.V1.Audio.TranscribeEventConfig();
            }
            input.ReadMessage(WakeWordConfig);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Provides audio configuration information that specifies how to process the request.
  /// </summary>
  public sealed partial class AudioConfig : pb::IMessage<AudioConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AudioConfig> _parser = new pb::MessageParser<AudioConfig>(() => new AudioConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AudioConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioConfig(AudioConfig other) : this() {
      encoding_ = other.encoding_;
      sampleRateHertz_ = other.sampleRateHertz_;
      audioChannelCount_ = other.audioChannelCount_;
      languageCode_ = other.languageCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AudioConfig Clone() {
      return new AudioConfig(this);
    }

    /// <summary>Field number for the "encoding" field.</summary>
    public const int EncodingFieldNumber = 1;
    private global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding encoding_ = global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding.Linear16;
    /// <summary>
    /// Encoding of all sent audio data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding Encoding {
      get { return encoding_; }
      set {
        encoding_ = value;
      }
    }

    /// <summary>Field number for the "sampleRateHertz" field.</summary>
    public const int SampleRateHertzFieldNumber = 2;
    private int sampleRateHertz_;
    /// <summary>
    /// Sample rate in Hertz of the audio data sent in all messages. 16000Hz is optimal.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SampleRateHertz {
      get { return sampleRateHertz_; }
      set {
        sampleRateHertz_ = value;
      }
    }

    /// <summary>Field number for the "audioChannelCount" field.</summary>
    public const int AudioChannelCountFieldNumber = 3;
    private int audioChannelCount_;
    /// <summary>
    /// The number of channels in the input audio data.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int AudioChannelCount {
      get { return audioChannelCount_; }
      set {
        audioChannelCount_ = value;
      }
    }

    /// <summary>Field number for the "languageCode" field.</summary>
    public const int LanguageCodeFieldNumber = 4;
    private string languageCode_ = "";
    /// <summary>
    /// Required. The language of the supplied audio as a
    /// [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag.
    /// Example: "en-US".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string LanguageCode {
      get { return languageCode_; }
      set {
        languageCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AudioConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AudioConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Encoding != other.Encoding) return false;
      if (SampleRateHertz != other.SampleRateHertz) return false;
      if (AudioChannelCount != other.AudioChannelCount) return false;
      if (LanguageCode != other.LanguageCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Encoding != global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding.Linear16) hash ^= Encoding.GetHashCode();
      if (SampleRateHertz != 0) hash ^= SampleRateHertz.GetHashCode();
      if (AudioChannelCount != 0) hash ^= AudioChannelCount.GetHashCode();
      if (LanguageCode.Length != 0) hash ^= LanguageCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Encoding != global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding.Linear16) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Encoding);
      }
      if (SampleRateHertz != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SampleRateHertz);
      }
      if (AudioChannelCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AudioChannelCount);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Encoding != global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding.Linear16) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Encoding);
      }
      if (SampleRateHertz != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SampleRateHertz);
      }
      if (AudioChannelCount != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(AudioChannelCount);
      }
      if (LanguageCode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LanguageCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Encoding != global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding.Linear16) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Encoding);
      }
      if (SampleRateHertz != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SampleRateHertz);
      }
      if (AudioChannelCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AudioChannelCount);
      }
      if (LanguageCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LanguageCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AudioConfig other) {
      if (other == null) {
        return;
      }
      if (other.Encoding != global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding.Linear16) {
        Encoding = other.Encoding;
      }
      if (other.SampleRateHertz != 0) {
        SampleRateHertz = other.SampleRateHertz;
      }
      if (other.AudioChannelCount != 0) {
        AudioChannelCount = other.AudioChannelCount;
      }
      if (other.LanguageCode.Length != 0) {
        LanguageCode = other.LanguageCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Encoding = (global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding) input.ReadEnum();
            break;
          }
          case 16: {
            SampleRateHertz = input.ReadInt32();
            break;
          }
          case 24: {
            AudioChannelCount = input.ReadInt32();
            break;
          }
          case 34: {
            LanguageCode = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Encoding = (global::Sensory.Api.V1.Audio.AudioConfig.Types.AudioEncoding) input.ReadEnum();
            break;
          }
          case 16: {
            SampleRateHertz = input.ReadInt32();
            break;
          }
          case 24: {
            AudioChannelCount = input.ReadInt32();
            break;
          }
          case 34: {
            LanguageCode = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the AudioConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      /// The encoding of the audio data sent in the request.
      /// </summary>
      public enum AudioEncoding {
        /// <summary>
        /// Uncompressed 16-bit signed little-endian samples (Linear PCM).
        /// </summary>
        [pbr::OriginalName("LINEAR16")] Linear16 = 0,
        /// <summary>
        /// `FLAC` (Free Lossless Audio
        /// Codec) is the recommended encoding because it is
        /// lossless--therefore recognition is not compromised--and
        /// requires only about half the bandwidth of `LINEAR16`.
        /// </summary>
        [pbr::OriginalName("FLAC")] Flac = 1,
        /// <summary>
        /// 8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.
        /// </summary>
        [pbr::OriginalName("MULAW")] Mulaw = 2,
      }

    }
    #endregion

  }

  /// <summary>
  /// Configurations for the voice synthesis model
  /// </summary>
  public sealed partial class VoiceSynthesisConfig : pb::IMessage<VoiceSynthesisConfig>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<VoiceSynthesisConfig> _parser = new pb::MessageParser<VoiceSynthesisConfig>(() => new VoiceSynthesisConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<VoiceSynthesisConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.V1.Audio.AudioReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VoiceSynthesisConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VoiceSynthesisConfig(VoiceSynthesisConfig other) : this() {
      modelName_ = other.modelName_;
      sampleRateHertz_ = other.sampleRateHertz_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public VoiceSynthesisConfig Clone() {
      return new VoiceSynthesisConfig(this);
    }

    /// <summary>Field number for the "modelName" field.</summary>
    public const int ModelNameFieldNumber = 2;
    private string modelName_ = "";
    /// <summary>
    /// Name of model to use for voice synthesis
    /// Model can be retrieved from the GetModels() gRPC call
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ModelName {
      get { return modelName_; }
      set {
        modelName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "sampleRateHertz" field.</summary>
    public const int SampleRateHertzFieldNumber = 3;
    private int sampleRateHertz_;
    /// <summary>
    /// The sample rate of the output audio file. Value should be between 8000Hz and 96000Hz
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int SampleRateHertz {
      get { return sampleRateHertz_; }
      set {
        sampleRateHertz_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as VoiceSynthesisConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(VoiceSynthesisConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ModelName != other.ModelName) return false;
      if (SampleRateHertz != other.SampleRateHertz) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ModelName.Length != 0) hash ^= ModelName.GetHashCode();
      if (SampleRateHertz != 0) hash ^= SampleRateHertz.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ModelName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelName);
      }
      if (SampleRateHertz != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SampleRateHertz);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ModelName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ModelName);
      }
      if (SampleRateHertz != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(SampleRateHertz);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ModelName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ModelName);
      }
      if (SampleRateHertz != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SampleRateHertz);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(VoiceSynthesisConfig other) {
      if (other == null) {
        return;
      }
      if (other.ModelName.Length != 0) {
        ModelName = other.ModelName;
      }
      if (other.SampleRateHertz != 0) {
        SampleRateHertz = other.SampleRateHertz;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            ModelName = input.ReadString();
            break;
          }
          case 24: {
            SampleRateHertz = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 18: {
            ModelName = input.ReadString();
            break;
          }
          case 24: {
            SampleRateHertz = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
