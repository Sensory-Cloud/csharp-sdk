// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sensory.Api.Common {

  /// <summary>Holder for reflection information generated from common/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNjb21tb24vY29tbW9uLnByb3RvEhJzZW5zb3J5LmFwaS5jb21tb24aF3Zh",
            "bGlkYXRlL3ZhbGlkYXRlLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0",
            "YW1wLnByb3RvIlUKGENvbXByZXNzaW9uQ29uZmlndXJhdGlvbhI5Cgxjb21w",
            "cmVzc2lvbnMYASADKA4yIy5zZW5zb3J5LmFwaS5jb21tb24uQ29tcHJlc3Np",
            "b25UeXBlIlkKDVRva2VuUmVzcG9uc2USEwoLYWNjZXNzVG9rZW4YASABKAkS",
            "EQoJZXhwaXJlc0luGAIgASgFEg0KBWtleUlkGAMgASgJEhEKCXRva2VuVHlw",
            "ZRgEIAEoCSJBCg1TZXJ2aWNlSGVhbHRoEhEKCWlzSGVhbHRoeRgBIAEoCBIM",
            "CgRuYW1lGAIgASgJEg8KB21lc3NhZ2UYAyABKAkixwEKFFNlcnZlckhlYWx0",
            "aFJlc3BvbnNlEhEKCWlzSGVhbHRoeRgBIAEoCBIVCg1zZXJ2ZXJWZXJzaW9u",
            "GAIgASgJEgoKAmlkGAMgASgJEjMKCHNlcnZpY2VzGAQgAygLMiEuc2Vuc29y",
            "eS5hcGkuY29tbW9uLlNlcnZpY2VIZWFsdGgSMgoKc2VydmVyVHlwZRgFIAEo",
            "DjIeLnNlbnNvcnkuYXBpLmNvbW1vbi5TZXJ2ZXJUeXBlEhAKCGlzTGVhZGVy",
            "GAYgASgIIoMBCg1TeXN0ZW1TdW1tYXJ5EjUKA2NwdRgBIAEoCzIeLnNlbnNv",
            "cnkuYXBpLmNvbW1vbi5DcHVTdW1tYXJ5Qgj6QgWKAQIQARI7CgZtZW1vcnkY",
            "AiABKAsyIS5zZW5zb3J5LmFwaS5jb21tb24uTWVtb3J5U3VtbWFyeUII+kIF",
            "igECEAEipQEKCkNwdVN1bW1hcnkSDAoEdXNlchgBIAEoBBIMCgRuaWNlGAIg",
            "ASgEEg4KBnN5c3RlbRgDIAEoBBIMCgRpZGxlGAQgASgEEg4KBmlvV2FpdBgF",
            "IAEoBBILCgNpcnEYBiABKAQSDwoHc29mdElycRgHIAEoBBINCgVzdGVhbBgI",
            "IAEoBBINCgVndWVzdBgJIAEoBBIRCglndWVzdE5pY2UYCiABKAQiSAoNTWVt",
            "b3J5U3VtbWFyeRIQCghtZW1Ub3RhbBgBIAEoBBIPCgdtZW1GcmVlGAIgASgE",
            "EhQKDG1lbUF2YWlsYWJsZRgDIAEoBCJECg1HZW5lcmljQ2xpZW50EhoKCGNs",
            "aWVudElkGAEgASgJQgj6QgVyA7ABARIXCgZzZWNyZXQYAiABKAlCB/pCBHIC",
            "EAoiiAEKDlRlbmFudFJlc3BvbnNlEgoKAmlkGAEgASgJEgwKBG5hbWUYAiAB",
            "KAkSLQoJY3JlYXRlZEF0GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBItCgl1cGRhdGVkQXQYBCABKAsyGi5nb29nbGUucHJvdG9idWYuVGlt",
            "ZXN0YW1wIl0KEVBhZ2luYXRpb25PcHRpb25zEhAKCG9yZGVyaW5nGAEgASgJ",
            "EhEKCWRlY2VuZGluZxgCIAEoCBIRCglwYWdlSW5kZXgYAyABKAUSEAoIcGFn",
            "ZVNpemUYBCABKAUiwgEKElBhZ2luYXRpb25SZXNwb25zZRIQCghvcmRlcmlu",
            "ZxgBIAEoCRIRCglkZWNlbmRpbmcYAiABKAgSGQoRcG9zc2libGVPcmRlcmlu",
            "Z3MYAyADKAkSEgoKdG90YWxDb3VudBgEIAEoAxIQCghwYWdlU2l6ZRgFIAEo",
            "BRIVCg1wcmV2UGFnZUluZGV4GAYgASgFEhgKEGN1cnJlbnRQYWdlSW5kZXgY",
            "ByABKAUSFQoNbmV4dFBhZ2VJbmRleBgIIAEoBSI0Cg9FbnJvbGxtZW50VG9r",
            "ZW4SDQoFdG9rZW4YASABKAwSEgoKZXhwaXJhdGlvbhgCIAEoAyKGAQoQQ3Jl",
            "YXRlS2V5UmVxdWVzdBIXCgRuYW1lGAEgASgJQgn6QgZyBBABGH8SNgoHa2V5",
            "VHlwZRgCIAEoDjIbLnNlbnNvcnkuYXBpLmNvbW1vbi5LZXlUeXBlQgj6QgWC",
            "AQIQARINCgV2YWx1ZRgDIAEoCRISCgpleHBpcmF0aW9uGAQgASgDIo0BCgtL",
            "ZXlSZXNwb25zZRIKCgJpZBgBIAEoCRIMCgRuYW1lGAIgASgJEiwKB2tleVR5",
            "cGUYAyABKA4yGy5zZW5zb3J5LmFwaS5jb21tb24uS2V5VHlwZRISCgpleHBp",
            "cmF0aW9uGAQgASgDEhAKCHRlbmFudElkGAUgASgJEhAKCGRpc2FibGVkGAYg",
            "ASgIKhYKBFZvaWQSDgoKVk9JRF9WQUxVRRAAKlEKB0tleVR5cGUSDgoKUFVC",
            "TElDX0tFWRAAEhYKElBVQkxJQ19LRVlfRUQyNTUxORABEhEKDVNIQVJFRF9T",
            "RUNSRVQQAxILCgdBRVNfMjU2EAQqNAoLRmVhdHVyZUZsYWcSDAoIVFNTVl9B",
            "TEwQABIKCgZUU19BTEwQARILCgdUTkxfQUxMEAIqywQKCU1vZGVsVHlwZRIL",
            "CgdVTktOT1dOEAASJAogVk9JQ0VfQklPTUVUUklDX1RFWFRfSU5ERVBFTkRF",
            "TlQQARIcChhWT0lDRV9CSU9NRVRSSUNfV0FLRVdPUkQQAhIYChRWT0lDRV9F",
            "VkVOVF9XQUtFV09SRBADEhwKGFZPSUNFX1RSQU5TQ1JJQkVfR1JBTU1BUhAE",
            "EicKI1ZPSUNFX1RSQU5TQ1JJQkVfQ09NTUFORF9BTkRfU0VBUkNIEAUSKAok",
            "Vk9JQ0VfUkVDT0dOSVRJT05fQUNUSVZJVFlfREVURUNUSU9OEAYSGwoXVk9J",
            "Q0VfRkVBVFVSRV9FWFRSQUNUT1IQBxIiCh5WT0lDRV9CSU9NRVRSSUNfTElW",
            "RU5FU1NfRElHSVQQCBIiCh5WT0lDRV9CSU9NRVRSSUNfVEVYVF9ERVBFTkRF",
            "TlQQCRITCg9WT0lDRV9TWU5USEVTSVMQChIaChZTT1VORF9FVkVOVF9FTlJP",
            "TExBQkxFEGQSHAoYU09VTkRfRVZFTlRfUkVWQUxJREFUSU9OEGUSFQoRU09V",
            "TkRfRVZFTlRfRklYRUQQZhIVChFTT1VORF9TQ0VORV9GSVhFRBBnEhMKDkZB",
            "Q0VfQklPTUVUUklDEMkBEhUKEEZBQ0VfUkVDT0dOSVRJT04QygESFwoST0JK",
            "RUNUX1JFQ09HTklUSU9OEMsBEhQKD0lNQUdFX1RSQU5TRk9STRDMARITCg5G",
            "QUNFX0VNQkVERElORxDNARIQCgtMTE1fR1BUXzNfNRCtAipYCg5UZWNobm9s",
            "b2d5VHlwZRILCgdOT1RfU0VUEAASCAoEVFNTVhABEgYKAlRTEAISBwoDVE5M",
            "EAMSBwoDU1RUEAQSBwoDVFRTEAUSDAoIU09VTkRfSUQQBiomCg9Db21wcmVz",
            "c2lvblR5cGUSEwoPSU1BR0VfR1JBWVNDQUxFEAAqfAoKQ2xpZW50VHlwZRIL",
            "CgdJTlZBTElEEAASCgoGREVWSUNFEAESCwoHQ0xVU1RFUhACEggKBFVTRVIQ",
            "AxIOCgpTVVBFUl9VU0VSEAQSEAoMQklMTElOR19VU0VSEAUSEgoOUkVBRF9P",
            "TkxZX1VTRVIQBhIICgRST09UEGQqcAoOVXNhZ2VFdmVudFR5cGUSEgoOQVVU",
            "SEVOVElDQVRJT04QABIPCgtSRUNPR05JVElPThABEg4KCkVOUk9MTE1FTlQQ",
            "AhINCglTWU5USEVTSVMQAxIRCg1UUkFOU0NSSVBUSU9OEAQSBwoDTExNEAUq",
            "HwoKU2VydmVyVHlwZRIJCgVUSVRBThAAEgYKAklPEAFCdgoaYWkuc2Vuc29y",
            "eWNsb3VkLmFwaS5jb21tb25CFVNlbnNvcnlBcGlDb21tb25Qcm90b1ABWjhn",
            "aXRsYWIuY29tL3NlbnNvcnktY2xvdWQvc2VydmVyL3RpdGFuLmdpdC9wa2cv",
            "YXBpL2NvbW1vbqICBFNFTkdiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Validate.ValidateReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Sensory.Api.Common.Void), typeof(global::Sensory.Api.Common.KeyType), typeof(global::Sensory.Api.Common.FeatureFlag), typeof(global::Sensory.Api.Common.ModelType), typeof(global::Sensory.Api.Common.TechnologyType), typeof(global::Sensory.Api.Common.CompressionType), typeof(global::Sensory.Api.Common.ClientType), typeof(global::Sensory.Api.Common.UsageEventType), typeof(global::Sensory.Api.Common.ServerType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.CompressionConfiguration), global::Sensory.Api.Common.CompressionConfiguration.Parser, new[]{ "Compressions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.TokenResponse), global::Sensory.Api.Common.TokenResponse.Parser, new[]{ "AccessToken", "ExpiresIn", "KeyId", "TokenType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.ServiceHealth), global::Sensory.Api.Common.ServiceHealth.Parser, new[]{ "IsHealthy", "Name", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.ServerHealthResponse), global::Sensory.Api.Common.ServerHealthResponse.Parser, new[]{ "IsHealthy", "ServerVersion", "Id", "Services", "ServerType", "IsLeader" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.SystemSummary), global::Sensory.Api.Common.SystemSummary.Parser, new[]{ "Cpu", "Memory" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.CpuSummary), global::Sensory.Api.Common.CpuSummary.Parser, new[]{ "User", "Nice", "System", "Idle", "IoWait", "Irq", "SoftIrq", "Steal", "Guest", "GuestNice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.MemorySummary), global::Sensory.Api.Common.MemorySummary.Parser, new[]{ "MemTotal", "MemFree", "MemAvailable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.GenericClient), global::Sensory.Api.Common.GenericClient.Parser, new[]{ "ClientId", "Secret" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.TenantResponse), global::Sensory.Api.Common.TenantResponse.Parser, new[]{ "Id", "Name", "CreatedAt", "UpdatedAt" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.PaginationOptions), global::Sensory.Api.Common.PaginationOptions.Parser, new[]{ "Ordering", "Decending", "PageIndex", "PageSize" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.PaginationResponse), global::Sensory.Api.Common.PaginationResponse.Parser, new[]{ "Ordering", "Decending", "PossibleOrderings", "TotalCount", "PageSize", "PrevPageIndex", "CurrentPageIndex", "NextPageIndex" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.EnrollmentToken), global::Sensory.Api.Common.EnrollmentToken.Parser, new[]{ "Token", "Expiration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.CreateKeyRequest), global::Sensory.Api.Common.CreateKeyRequest.Parser, new[]{ "Name", "KeyType", "Value", "Expiration" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.KeyResponse), global::Sensory.Api.Common.KeyResponse.Parser, new[]{ "Id", "Name", "KeyType", "Expiration", "TenantId", "Disabled" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// Generic NULL value
  /// </summary>
  public enum Void {
    [pbr::OriginalName("VOID_VALUE")] Value = 0,
  }

  /// <summary>
  /// A type of key supported by the API
  /// Note: if you change this enum, ensure to update schema.prisma KeyType
  /// </summary>
  public enum KeyType {
    /// <summary>
    /// General Public key - kept for backwards compatability
    /// </summary>
    [pbr::OriginalName("PUBLIC_KEY")] PublicKey = 0,
    /// <summary>
    /// ED25519 Public key used for asymmetric cryptographic operations
    /// </summary>
    [pbr::OriginalName("PUBLIC_KEY_ED25519")] PublicKeyEd25519 = 1,
    /// <summary>
    /// Shared secret string
    /// </summary>
    [pbr::OriginalName("SHARED_SECRET")] SharedSecret = 3,
    /// <summary>
    /// AES-256 32 byte string
    /// </summary>
    [pbr::OriginalName("AES_256")] Aes256 = 4,
  }

  /// <summary>
  /// Example ideas of possible FFs
  /// Voice
  /// VoiceBiometricTextDependent   FeatureFlag = iota // Voice Auth Text Dependent (Enrollable)
  /// VoiceBiometricTextIndependent                    // Voice Auth Text Independent (Enrollable)
  /// VoiceBiometricWakeword                           // Voice Wakeword (Enrollable)
  /// VoiceEventWakeword                               // Voice Wakeword
  /// </summary>
  public enum FeatureFlag {
    /// <summary>
    /// TssvAll feature set
    /// </summary>
    [pbr::OriginalName("TSSV_ALL")] TssvAll = 0,
    /// <summary>
    /// TsAll feature set
    /// </summary>
    [pbr::OriginalName("TS_ALL")] TsAll = 1,
    /// <summary>
    /// TnlAll feature set
    /// </summary>
    [pbr::OriginalName("TNL_ALL")] TnlAll = 2,
  }

  /// <summary>
  /// A type of model supported by this API
  /// Note: if you change this enum, ensure to update schema.prisma ModelType
  /// </summary>
  public enum ModelType {
    /// <summary>
    /// Unknown Model Type
    /// </summary>
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    /// <summary>
    /// Voice Auth Text Independent (Enrollable)
    /// </summary>
    [pbr::OriginalName("VOICE_BIOMETRIC_TEXT_INDEPENDENT")] VoiceBiometricTextIndependent = 1,
    /// <summary>
    /// Voice Wakeword (Enrollable)
    /// </summary>
    [pbr::OriginalName("VOICE_BIOMETRIC_WAKEWORD")] VoiceBiometricWakeword = 2,
    /// <summary>
    /// Voice Wakeword
    /// </summary>
    [pbr::OriginalName("VOICE_EVENT_WAKEWORD")] VoiceEventWakeword = 3,
    /// <summary>
    /// Voice Grammar Recognition such as LVCSR
    /// </summary>
    [pbr::OriginalName("VOICE_TRANSCRIBE_GRAMMAR")] VoiceTranscribeGrammar = 4,
    /// <summary>
    /// Voice Commands and Search recognition
    /// </summary>
    [pbr::OriginalName("VOICE_TRANSCRIBE_COMMAND_AND_SEARCH")] VoiceTranscribeCommandAndSearch = 5,
    /// <summary>
    /// Voice activity detection
    /// </summary>
    [pbr::OriginalName("VOICE_RECOGNITION_ACTIVITY_DETECTION")] VoiceRecognitionActivityDetection = 6,
    /// <summary>
    /// Voice feature extractor
    /// </summary>
    [pbr::OriginalName("VOICE_FEATURE_EXTRACTOR")] VoiceFeatureExtractor = 7,
    /// <summary>
    /// Voice digit recognizer for liveness
    /// </summary>
    [pbr::OriginalName("VOICE_BIOMETRIC_LIVENESS_DIGIT")] VoiceBiometricLivenessDigit = 8,
    /// <summary>
    /// Voice Auth Text Dependent (Enrollable)
    /// </summary>
    [pbr::OriginalName("VOICE_BIOMETRIC_TEXT_DEPENDENT")] VoiceBiometricTextDependent = 9,
    /// <summary>
    /// Voice Synthesis
    /// </summary>
    [pbr::OriginalName("VOICE_SYNTHESIS")] VoiceSynthesis = 10,
    /// <summary>
    /// Sound Event Auth (Enrollable)
    /// </summary>
    [pbr::OriginalName("SOUND_EVENT_ENROLLABLE")] SoundEventEnrollable = 100,
    /// <summary>
    /// Sound Event Revalidation
    /// </summary>
    [pbr::OriginalName("SOUND_EVENT_REVALIDATION")] SoundEventRevalidation = 101,
    /// <summary>
    /// Sound Event Recognition
    /// </summary>
    [pbr::OriginalName("SOUND_EVENT_FIXED")] SoundEventFixed = 102,
    /// <summary>
    /// Sound Scene Recognition
    /// </summary>
    [pbr::OriginalName("SOUND_SCENE_FIXED")] SoundSceneFixed = 103,
    /// <summary>
    /// Face Auth (Enrollable)
    /// </summary>
    [pbr::OriginalName("FACE_BIOMETRIC")] FaceBiometric = 201,
    /// <summary>
    /// Face Recognition
    /// </summary>
    [pbr::OriginalName("FACE_RECOGNITION")] FaceRecognition = 202,
    /// <summary>
    /// Object Recognition
    /// </summary>
    [pbr::OriginalName("OBJECT_RECOGNITION")] ObjectRecognition = 203,
    /// <summary>
    /// Image Transformation
    /// </summary>
    [pbr::OriginalName("IMAGE_TRANSFORM")] ImageTransform = 204,
    /// <summary>
    /// Face Embedding
    /// </summary>
    [pbr::OriginalName("FACE_EMBEDDING")] FaceEmbedding = 205,
    /// <summary>
    /// Large Language Model
    /// </summary>
    [pbr::OriginalName("LLM_GPT_3_5")] LlmGpt35 = 301,
  }

  /// <summary>
  /// An enum denoting the type of Sensory technology employed
  /// </summary>
  public enum TechnologyType {
    /// <summary>
    /// Not Set type - used internally
    /// </summary>
    [pbr::OriginalName("NOT_SET")] NotSet = 0,
    /// <summary>
    /// Truly Secure Speaker Verification, an audio authentication and wakeword tool
    /// </summary>
    [pbr::OriginalName("TSSV")] Tssv = 1,
    /// <summary>
    /// Truly Secure, a face identification and liveness suite
    /// </summary>
    [pbr::OriginalName("TS")] Ts = 2,
    /// <summary>
    /// Truly Natural, a wakeword and speech recognition tool
    /// </summary>
    [pbr::OriginalName("TNL")] Tnl = 3,
    /// <summary>
    /// Speech to Text, a large scale neural speech recognition tool
    /// </summary>
    [pbr::OriginalName("STT")] Stt = 4,
    /// <summary>
    /// Text to Speech, a voice synthesis tool
    /// </summary>
    [pbr::OriginalName("TTS")] Tts = 5,
    /// <summary>
    /// Sound Id, a sound identification tool
    /// </summary>
    [pbr::OriginalName("SOUND_ID")] SoundId = 6,
  }

  /// <summary>
  /// Every type of compression that is supported
  /// Note: if you change this enum, ensure to update schema.prisma CompressionType
  /// </summary>
  public enum CompressionType {
    /// <summary>
    /// Image data is in grayscale instead of full color
    /// </summary>
    [pbr::OriginalName("IMAGE_GRAYSCALE")] ImageGrayscale = 0,
  }

  /// <summary>
  /// Possible client types
  /// </summary>
  public enum ClientType {
    /// <summary>
    /// Invalid, not set role
    /// </summary>
    [pbr::OriginalName("INVALID")] Invalid = 0,
    /// <summary>
    /// User End Device       (E.G. Sensory SDK on Smartphone)
    /// </summary>
    [pbr::OriginalName("DEVICE")] Device = 1,
    /// <summary>
    /// Remote Cluster        (E.G. Customer-Deployed Io Cluster)
    /// </summary>
    [pbr::OriginalName("CLUSTER")] Cluster = 2,
    /// <summary>
    /// User Account          (E.G. Customer-Portal)
    /// </summary>
    [pbr::OriginalName("USER")] User = 3,
    /// <summary>
    /// Super User Account    (E.G. Admin)
    /// </summary>
    [pbr::OriginalName("SUPER_USER")] SuperUser = 4,
    /// <summary>
    /// Billing User Account   (E.G. CFO)
    /// </summary>
    [pbr::OriginalName("BILLING_USER")] BillingUser = 5,
    /// <summary>
    /// Read-Only Account
    /// </summary>
    [pbr::OriginalName("READ_ONLY_USER")] ReadOnlyUser = 6,
    /// <summary>
    /// Sensory Root Token
    /// </summary>
    [pbr::OriginalName("ROOT")] Root = 100,
  }

  /// <summary>
  /// Possible usage event type
  /// Note: if you change this enum, ensure to update schema.prisma EventType
  /// </summary>
  public enum UsageEventType {
    /// <summary>
    /// Authentication usage event
    /// </summary>
    [pbr::OriginalName("AUTHENTICATION")] Authentication = 0,
    /// <summary>
    /// Recognition usage event
    /// </summary>
    [pbr::OriginalName("RECOGNITION")] Recognition = 1,
    /// <summary>
    /// Enrollment usage event
    /// </summary>
    [pbr::OriginalName("ENROLLMENT")] Enrollment = 2,
    /// <summary>
    /// Synthesis usage event
    /// </summary>
    [pbr::OriginalName("SYNTHESIS")] Synthesis = 3,
    /// <summary>
    /// Speech to text usage event
    /// </summary>
    [pbr::OriginalName("TRANSCRIPTION")] Transcription = 4,
    /// <summary>
    /// Large Language Model
    /// </summary>
    [pbr::OriginalName("LLM")] Llm = 5,
  }

  /// <summary>
  /// Possible types of servers
  /// </summary>
  public enum ServerType {
    [pbr::OriginalName("TITAN")] Titan = 0,
    [pbr::OriginalName("IO")] Io = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Configuration for how data can be compressed
  /// </summary>
  public sealed partial class CompressionConfiguration : pb::IMessage<CompressionConfiguration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompressionConfiguration> _parser = new pb::MessageParser<CompressionConfiguration>(() => new CompressionConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompressionConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressionConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressionConfiguration(CompressionConfiguration other) : this() {
      compressions_ = other.compressions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressionConfiguration Clone() {
      return new CompressionConfiguration(this);
    }

    /// <summary>Field number for the "compressions" field.</summary>
    public const int CompressionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Sensory.Api.Common.CompressionType> _repeated_compressions_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Sensory.Api.Common.CompressionType) x);
    private readonly pbc::RepeatedField<global::Sensory.Api.Common.CompressionType> compressions_ = new pbc::RepeatedField<global::Sensory.Api.Common.CompressionType>();
    /// <summary>
    /// List of every compression method that was used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Sensory.Api.Common.CompressionType> Compressions {
      get { return compressions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompressionConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompressionConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!compressions_.Equals(other.compressions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= compressions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      compressions_.WriteTo(output, _repeated_compressions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      compressions_.WriteTo(ref output, _repeated_compressions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += compressions_.CalculateSize(_repeated_compressions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompressionConfiguration other) {
      if (other == null) {
        return;
      }
      compressions_.Add(other.compressions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            compressions_.AddEntriesFrom(input, _repeated_compressions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            compressions_.AddEntriesFrom(ref input, _repeated_compressions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response from a successful token request
  /// </summary>
  public sealed partial class TokenResponse : pb::IMessage<TokenResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokenResponse> _parser = new pb::MessageParser<TokenResponse>(() => new TokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenResponse(TokenResponse other) : this() {
      accessToken_ = other.accessToken_;
      expiresIn_ = other.expiresIn_;
      keyId_ = other.keyId_;
      tokenType_ = other.tokenType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenResponse Clone() {
      return new TokenResponse(this);
    }

    /// <summary>Field number for the "accessToken" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private string accessToken_ = "";
    /// <summary>
    /// Signed JSON web token that should be added to any subsequent request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiresIn" field.</summary>
    public const int ExpiresInFieldNumber = 2;
    private int expiresIn_;
    /// <summary>
    /// Number of seconds until this token will expire
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExpiresIn {
      get { return expiresIn_; }
      set {
        expiresIn_ = value;
      }
    }

    /// <summary>Field number for the "keyId" field.</summary>
    public const int KeyIdFieldNumber = 3;
    private string keyId_ = "";
    /// <summary>
    /// Signing key identifier which can be used to retrieve the matching public key via the GetPublicKey request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KeyId {
      get { return keyId_; }
      set {
        keyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tokenType" field.</summary>
    public const int TokenTypeFieldNumber = 4;
    private string tokenType_ = "";
    /// <summary>
    /// Token type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TokenType {
      get { return tokenType_; }
      set {
        tokenType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessToken != other.AccessToken) return false;
      if (ExpiresIn != other.ExpiresIn) return false;
      if (KeyId != other.KeyId) return false;
      if (TokenType != other.TokenType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (ExpiresIn != 0) hash ^= ExpiresIn.GetHashCode();
      if (KeyId.Length != 0) hash ^= KeyId.GetHashCode();
      if (TokenType.Length != 0) hash ^= TokenType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AccessToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (ExpiresIn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpiresIn);
      }
      if (KeyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(KeyId);
      }
      if (TokenType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AccessToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (ExpiresIn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpiresIn);
      }
      if (KeyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(KeyId);
      }
      if (TokenType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (ExpiresIn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpiresIn);
      }
      if (KeyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyId);
      }
      if (TokenType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.ExpiresIn != 0) {
        ExpiresIn = other.ExpiresIn;
      }
      if (other.KeyId.Length != 0) {
        KeyId = other.KeyId;
      }
      if (other.TokenType.Length != 0) {
        TokenType = other.TokenType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 16: {
            ExpiresIn = input.ReadInt32();
            break;
          }
          case 26: {
            KeyId = input.ReadString();
            break;
          }
          case 34: {
            TokenType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 16: {
            ExpiresIn = input.ReadInt32();
            break;
          }
          case 26: {
            KeyId = input.ReadString();
            break;
          }
          case 34: {
            TokenType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An indication of the health of a particular service
  /// </summary>
  public sealed partial class ServiceHealth : pb::IMessage<ServiceHealth>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServiceHealth> _parser = new pb::MessageParser<ServiceHealth>(() => new ServiceHealth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServiceHealth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceHealth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceHealth(ServiceHealth other) : this() {
      isHealthy_ = other.isHealthy_;
      name_ = other.name_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceHealth Clone() {
      return new ServiceHealth(this);
    }

    /// <summary>Field number for the "isHealthy" field.</summary>
    public const int IsHealthyFieldNumber = 1;
    private bool isHealthy_;
    /// <summary>
    /// Is healthy indication
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHealthy {
      get { return isHealthy_; }
      set {
        isHealthy_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the service
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    /// <summary>
    /// Details of the service health
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServiceHealth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServiceHealth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsHealthy != other.IsHealthy) return false;
      if (Name != other.Name) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsHealthy != false) hash ^= IsHealthy.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsHealthy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHealthy);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsHealthy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHealthy);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsHealthy != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServiceHealth other) {
      if (other == null) {
        return;
      }
      if (other.IsHealthy != false) {
        IsHealthy = other.IsHealthy;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsHealthy = input.ReadBool();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsHealthy = input.ReadBool();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response from a GetHealth request
  /// </summary>
  public sealed partial class ServerHealthResponse : pb::IMessage<ServerHealthResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerHealthResponse> _parser = new pb::MessageParser<ServerHealthResponse>(() => new ServerHealthResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerHealthResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerHealthResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerHealthResponse(ServerHealthResponse other) : this() {
      isHealthy_ = other.isHealthy_;
      serverVersion_ = other.serverVersion_;
      id_ = other.id_;
      services_ = other.services_.Clone();
      serverType_ = other.serverType_;
      isLeader_ = other.isLeader_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerHealthResponse Clone() {
      return new ServerHealthResponse(this);
    }

    /// <summary>Field number for the "isHealthy" field.</summary>
    public const int IsHealthyFieldNumber = 1;
    private bool isHealthy_;
    /// <summary>
    /// Is healthy indication. True if all services are healthy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHealthy {
      get { return isHealthy_; }
      set {
        isHealthy_ = value;
      }
    }

    /// <summary>Field number for the "serverVersion" field.</summary>
    public const int ServerVersionFieldNumber = 2;
    private string serverVersion_ = "";
    /// <summary>
    /// Currently running server version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServerVersion {
      get { return serverVersion_; }
      set {
        serverVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    /// <summary>
    /// Unique Identifier for the particular server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Sensory.Api.Common.ServiceHealth> _repeated_services_codec
        = pb::FieldCodec.ForMessage(34, global::Sensory.Api.Common.ServiceHealth.Parser);
    private readonly pbc::RepeatedField<global::Sensory.Api.Common.ServiceHealth> services_ = new pbc::RepeatedField<global::Sensory.Api.Common.ServiceHealth>();
    /// <summary>
    /// List of services and their health statuses
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Sensory.Api.Common.ServiceHealth> Services {
      get { return services_; }
    }

    /// <summary>Field number for the "serverType" field.</summary>
    public const int ServerTypeFieldNumber = 5;
    private global::Sensory.Api.Common.ServerType serverType_ = global::Sensory.Api.Common.ServerType.Titan;
    /// <summary>
    /// The type of server that is sending the health response
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.ServerType ServerType {
      get { return serverType_; }
      set {
        serverType_ = value;
      }
    }

    /// <summary>Field number for the "isLeader" field.</summary>
    public const int IsLeaderFieldNumber = 6;
    private bool isLeader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsLeader {
      get { return isLeader_; }
      set {
        isLeader_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerHealthResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerHealthResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsHealthy != other.IsHealthy) return false;
      if (ServerVersion != other.ServerVersion) return false;
      if (Id != other.Id) return false;
      if(!services_.Equals(other.services_)) return false;
      if (ServerType != other.ServerType) return false;
      if (IsLeader != other.IsLeader) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsHealthy != false) hash ^= IsHealthy.GetHashCode();
      if (ServerVersion.Length != 0) hash ^= ServerVersion.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= services_.GetHashCode();
      if (ServerType != global::Sensory.Api.Common.ServerType.Titan) hash ^= ServerType.GetHashCode();
      if (IsLeader != false) hash ^= IsLeader.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsHealthy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHealthy);
      }
      if (ServerVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServerVersion);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      services_.WriteTo(output, _repeated_services_codec);
      if (ServerType != global::Sensory.Api.Common.ServerType.Titan) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ServerType);
      }
      if (IsLeader != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsLeader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsHealthy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHealthy);
      }
      if (ServerVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServerVersion);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      services_.WriteTo(ref output, _repeated_services_codec);
      if (ServerType != global::Sensory.Api.Common.ServerType.Titan) {
        output.WriteRawTag(40);
        output.WriteEnum((int) ServerType);
      }
      if (IsLeader != false) {
        output.WriteRawTag(48);
        output.WriteBool(IsLeader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsHealthy != false) {
        size += 1 + 1;
      }
      if (ServerVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerVersion);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += services_.CalculateSize(_repeated_services_codec);
      if (ServerType != global::Sensory.Api.Common.ServerType.Titan) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ServerType);
      }
      if (IsLeader != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerHealthResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsHealthy != false) {
        IsHealthy = other.IsHealthy;
      }
      if (other.ServerVersion.Length != 0) {
        ServerVersion = other.ServerVersion;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      services_.Add(other.services_);
      if (other.ServerType != global::Sensory.Api.Common.ServerType.Titan) {
        ServerType = other.ServerType;
      }
      if (other.IsLeader != false) {
        IsLeader = other.IsLeader;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsHealthy = input.ReadBool();
            break;
          }
          case 18: {
            ServerVersion = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
          case 40: {
            ServerType = (global::Sensory.Api.Common.ServerType) input.ReadEnum();
            break;
          }
          case 48: {
            IsLeader = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsHealthy = input.ReadBool();
            break;
          }
          case 18: {
            ServerVersion = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            services_.AddEntriesFrom(ref input, _repeated_services_codec);
            break;
          }
          case 40: {
            ServerType = (global::Sensory.Api.Common.ServerType) input.ReadEnum();
            break;
          }
          case 48: {
            IsLeader = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A summary of system statistics
  /// </summary>
  public sealed partial class SystemSummary : pb::IMessage<SystemSummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SystemSummary> _parser = new pb::MessageParser<SystemSummary>(() => new SystemSummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SystemSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SystemSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SystemSummary(SystemSummary other) : this() {
      cpu_ = other.cpu_ != null ? other.cpu_.Clone() : null;
      memory_ = other.memory_ != null ? other.memory_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SystemSummary Clone() {
      return new SystemSummary(this);
    }

    /// <summary>Field number for the "cpu" field.</summary>
    public const int CpuFieldNumber = 1;
    private global::Sensory.Api.Common.CpuSummary cpu_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.CpuSummary Cpu {
      get { return cpu_; }
      set {
        cpu_ = value;
      }
    }

    /// <summary>Field number for the "memory" field.</summary>
    public const int MemoryFieldNumber = 2;
    private global::Sensory.Api.Common.MemorySummary memory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.MemorySummary Memory {
      get { return memory_; }
      set {
        memory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SystemSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SystemSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Cpu, other.Cpu)) return false;
      if (!object.Equals(Memory, other.Memory)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (cpu_ != null) hash ^= Cpu.GetHashCode();
      if (memory_ != null) hash ^= Memory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cpu_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cpu);
      }
      if (memory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Memory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cpu_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cpu);
      }
      if (memory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Memory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (cpu_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cpu);
      }
      if (memory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Memory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SystemSummary other) {
      if (other == null) {
        return;
      }
      if (other.cpu_ != null) {
        if (cpu_ == null) {
          Cpu = new global::Sensory.Api.Common.CpuSummary();
        }
        Cpu.MergeFrom(other.Cpu);
      }
      if (other.memory_ != null) {
        if (memory_ == null) {
          Memory = new global::Sensory.Api.Common.MemorySummary();
        }
        Memory.MergeFrom(other.Memory);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cpu_ == null) {
              Cpu = new global::Sensory.Api.Common.CpuSummary();
            }
            input.ReadMessage(Cpu);
            break;
          }
          case 18: {
            if (memory_ == null) {
              Memory = new global::Sensory.Api.Common.MemorySummary();
            }
            input.ReadMessage(Memory);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cpu_ == null) {
              Cpu = new global::Sensory.Api.Common.CpuSummary();
            }
            input.ReadMessage(Cpu);
            break;
          }
          case 18: {
            if (memory_ == null) {
              Memory = new global::Sensory.Api.Common.MemorySummary();
            }
            input.ReadMessage(Memory);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Summary of all CPU useage as measured in ticks
  /// </summary>
  public sealed partial class CpuSummary : pb::IMessage<CpuSummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CpuSummary> _parser = new pb::MessageParser<CpuSummary>(() => new CpuSummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CpuSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CpuSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CpuSummary(CpuSummary other) : this() {
      user_ = other.user_;
      nice_ = other.nice_;
      system_ = other.system_;
      idle_ = other.idle_;
      ioWait_ = other.ioWait_;
      irq_ = other.irq_;
      softIrq_ = other.softIrq_;
      steal_ = other.steal_;
      guest_ = other.guest_;
      guestNice_ = other.guestNice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CpuSummary Clone() {
      return new CpuSummary(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private ulong user_;
    /// <summary>
    /// normal processes executing in user mode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "nice" field.</summary>
    public const int NiceFieldNumber = 2;
    private ulong nice_;
    /// <summary>
    /// niced processes executing in user mode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Nice {
      get { return nice_; }
      set {
        nice_ = value;
      }
    }

    /// <summary>Field number for the "system" field.</summary>
    public const int SystemFieldNumber = 3;
    private ulong system_;
    /// <summary>
    /// processes executing in kernel mode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong System {
      get { return system_; }
      set {
        system_ = value;
      }
    }

    /// <summary>Field number for the "idle" field.</summary>
    public const int IdleFieldNumber = 4;
    private ulong idle_;
    /// <summary>
    /// idle cpu
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Idle {
      get { return idle_; }
      set {
        idle_ = value;
      }
    }

    /// <summary>Field number for the "ioWait" field.</summary>
    public const int IoWaitFieldNumber = 5;
    private ulong ioWait_;
    /// <summary>
    /// waiting for I/O to complete
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong IoWait {
      get { return ioWait_; }
      set {
        ioWait_ = value;
      }
    }

    /// <summary>Field number for the "irq" field.</summary>
    public const int IrqFieldNumber = 6;
    private ulong irq_;
    /// <summary>
    /// servicing interrupts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Irq {
      get { return irq_; }
      set {
        irq_ = value;
      }
    }

    /// <summary>Field number for the "softIrq" field.</summary>
    public const int SoftIrqFieldNumber = 7;
    private ulong softIrq_;
    /// <summary>
    /// servicing softirqs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SoftIrq {
      get { return softIrq_; }
      set {
        softIrq_ = value;
      }
    }

    /// <summary>Field number for the "steal" field.</summary>
    public const int StealFieldNumber = 8;
    private ulong steal_;
    /// <summary>
    /// counts the ticks spent executing other virtual hosts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steal {
      get { return steal_; }
      set {
        steal_ = value;
      }
    }

    /// <summary>Field number for the "guest" field.</summary>
    public const int GuestFieldNumber = 9;
    private ulong guest_;
    /// <summary>
    /// counts the time spent running a virtual CPU for guest operating systems under the control of the Linux kernel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Guest {
      get { return guest_; }
      set {
        guest_ = value;
      }
    }

    /// <summary>Field number for the "guestNice" field.</summary>
    public const int GuestNiceFieldNumber = 10;
    private ulong guestNice_;
    /// <summary>
    /// time spent running a niced guest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GuestNice {
      get { return guestNice_; }
      set {
        guestNice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CpuSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CpuSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (User != other.User) return false;
      if (Nice != other.Nice) return false;
      if (System != other.System) return false;
      if (Idle != other.Idle) return false;
      if (IoWait != other.IoWait) return false;
      if (Irq != other.Irq) return false;
      if (SoftIrq != other.SoftIrq) return false;
      if (Steal != other.Steal) return false;
      if (Guest != other.Guest) return false;
      if (GuestNice != other.GuestNice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (User != 0UL) hash ^= User.GetHashCode();
      if (Nice != 0UL) hash ^= Nice.GetHashCode();
      if (System != 0UL) hash ^= System.GetHashCode();
      if (Idle != 0UL) hash ^= Idle.GetHashCode();
      if (IoWait != 0UL) hash ^= IoWait.GetHashCode();
      if (Irq != 0UL) hash ^= Irq.GetHashCode();
      if (SoftIrq != 0UL) hash ^= SoftIrq.GetHashCode();
      if (Steal != 0UL) hash ^= Steal.GetHashCode();
      if (Guest != 0UL) hash ^= Guest.GetHashCode();
      if (GuestNice != 0UL) hash ^= GuestNice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (User != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(User);
      }
      if (Nice != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Nice);
      }
      if (System != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(System);
      }
      if (Idle != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Idle);
      }
      if (IoWait != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(IoWait);
      }
      if (Irq != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Irq);
      }
      if (SoftIrq != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(SoftIrq);
      }
      if (Steal != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(Steal);
      }
      if (Guest != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(Guest);
      }
      if (GuestNice != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(GuestNice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (User != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(User);
      }
      if (Nice != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Nice);
      }
      if (System != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(System);
      }
      if (Idle != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Idle);
      }
      if (IoWait != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(IoWait);
      }
      if (Irq != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Irq);
      }
      if (SoftIrq != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(SoftIrq);
      }
      if (Steal != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(Steal);
      }
      if (Guest != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(Guest);
      }
      if (GuestNice != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(GuestNice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (User != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(User);
      }
      if (Nice != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nice);
      }
      if (System != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(System);
      }
      if (Idle != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Idle);
      }
      if (IoWait != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(IoWait);
      }
      if (Irq != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Irq);
      }
      if (SoftIrq != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SoftIrq);
      }
      if (Steal != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steal);
      }
      if (Guest != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Guest);
      }
      if (GuestNice != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuestNice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CpuSummary other) {
      if (other == null) {
        return;
      }
      if (other.User != 0UL) {
        User = other.User;
      }
      if (other.Nice != 0UL) {
        Nice = other.Nice;
      }
      if (other.System != 0UL) {
        System = other.System;
      }
      if (other.Idle != 0UL) {
        Idle = other.Idle;
      }
      if (other.IoWait != 0UL) {
        IoWait = other.IoWait;
      }
      if (other.Irq != 0UL) {
        Irq = other.Irq;
      }
      if (other.SoftIrq != 0UL) {
        SoftIrq = other.SoftIrq;
      }
      if (other.Steal != 0UL) {
        Steal = other.Steal;
      }
      if (other.Guest != 0UL) {
        Guest = other.Guest;
      }
      if (other.GuestNice != 0UL) {
        GuestNice = other.GuestNice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            User = input.ReadUInt64();
            break;
          }
          case 16: {
            Nice = input.ReadUInt64();
            break;
          }
          case 24: {
            System = input.ReadUInt64();
            break;
          }
          case 32: {
            Idle = input.ReadUInt64();
            break;
          }
          case 40: {
            IoWait = input.ReadUInt64();
            break;
          }
          case 48: {
            Irq = input.ReadUInt64();
            break;
          }
          case 56: {
            SoftIrq = input.ReadUInt64();
            break;
          }
          case 64: {
            Steal = input.ReadUInt64();
            break;
          }
          case 72: {
            Guest = input.ReadUInt64();
            break;
          }
          case 80: {
            GuestNice = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            User = input.ReadUInt64();
            break;
          }
          case 16: {
            Nice = input.ReadUInt64();
            break;
          }
          case 24: {
            System = input.ReadUInt64();
            break;
          }
          case 32: {
            Idle = input.ReadUInt64();
            break;
          }
          case 40: {
            IoWait = input.ReadUInt64();
            break;
          }
          case 48: {
            Irq = input.ReadUInt64();
            break;
          }
          case 56: {
            SoftIrq = input.ReadUInt64();
            break;
          }
          case 64: {
            Steal = input.ReadUInt64();
            break;
          }
          case 72: {
            Guest = input.ReadUInt64();
            break;
          }
          case 80: {
            GuestNice = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A summary of memory usage
  /// </summary>
  public sealed partial class MemorySummary : pb::IMessage<MemorySummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MemorySummary> _parser = new pb::MessageParser<MemorySummary>(() => new MemorySummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MemorySummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MemorySummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MemorySummary(MemorySummary other) : this() {
      memTotal_ = other.memTotal_;
      memFree_ = other.memFree_;
      memAvailable_ = other.memAvailable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MemorySummary Clone() {
      return new MemorySummary(this);
    }

    /// <summary>Field number for the "memTotal" field.</summary>
    public const int MemTotalFieldNumber = 1;
    private ulong memTotal_;
    /// <summary>
    /// total memory in use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MemTotal {
      get { return memTotal_; }
      set {
        memTotal_ = value;
      }
    }

    /// <summary>Field number for the "memFree" field.</summary>
    public const int MemFreeFieldNumber = 2;
    private ulong memFree_;
    /// <summary>
    /// total memory free
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MemFree {
      get { return memFree_; }
      set {
        memFree_ = value;
      }
    }

    /// <summary>Field number for the "memAvailable" field.</summary>
    public const int MemAvailableFieldNumber = 3;
    private ulong memAvailable_;
    /// <summary>
    /// total memory available by the system
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MemAvailable {
      get { return memAvailable_; }
      set {
        memAvailable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MemorySummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MemorySummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemTotal != other.MemTotal) return false;
      if (MemFree != other.MemFree) return false;
      if (MemAvailable != other.MemAvailable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MemTotal != 0UL) hash ^= MemTotal.GetHashCode();
      if (MemFree != 0UL) hash ^= MemFree.GetHashCode();
      if (MemAvailable != 0UL) hash ^= MemAvailable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MemTotal != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MemTotal);
      }
      if (MemFree != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(MemFree);
      }
      if (MemAvailable != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MemAvailable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MemTotal != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MemTotal);
      }
      if (MemFree != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(MemFree);
      }
      if (MemAvailable != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MemAvailable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MemTotal != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MemTotal);
      }
      if (MemFree != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MemFree);
      }
      if (MemAvailable != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MemAvailable);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MemorySummary other) {
      if (other == null) {
        return;
      }
      if (other.MemTotal != 0UL) {
        MemTotal = other.MemTotal;
      }
      if (other.MemFree != 0UL) {
        MemFree = other.MemFree;
      }
      if (other.MemAvailable != 0UL) {
        MemAvailable = other.MemAvailable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MemTotal = input.ReadUInt64();
            break;
          }
          case 16: {
            MemFree = input.ReadUInt64();
            break;
          }
          case 24: {
            MemAvailable = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MemTotal = input.ReadUInt64();
            break;
          }
          case 16: {
            MemFree = input.ReadUInt64();
            break;
          }
          case 24: {
            MemAvailable = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to create a generic client. Client type should be inferred by usage.
  /// This data should be stored securely on the client endpoint.
  /// </summary>
  public sealed partial class GenericClient : pb::IMessage<GenericClient>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenericClient> _parser = new pb::MessageParser<GenericClient>(() => new GenericClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GenericClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GenericClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GenericClient(GenericClient other) : this() {
      clientId_ = other.clientId_;
      secret_ = other.secret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GenericClient Clone() {
      return new GenericClient(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    /// <summary>
    /// Unique Client ID as UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 2;
    private string secret_ = "";
    /// <summary>
    /// Strong secret value (min length of 10)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GenericClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GenericClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (Secret != other.Secret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (Secret.Length != 0) hash ^= Secret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GenericClient other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.Secret.Length != 0) {
        Secret = other.Secret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Tenant response
  /// </summary>
  public sealed partial class TenantResponse : pb::IMessage<TenantResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TenantResponse> _parser = new pb::MessageParser<TenantResponse>(() => new TenantResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TenantResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TenantResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TenantResponse(TenantResponse other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      updatedAt_ = other.updatedAt_ != null ? other.updatedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TenantResponse Clone() {
      return new TenantResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The unique uuid for this tenant
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The unique name for this tenant
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "createdAt" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// Created timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "updatedAt" field.</summary>
    public const int UpdatedAtFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp updatedAt_;
    /// <summary>
    /// Last updated timestamp
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp UpdatedAt {
      get { return updatedAt_; }
      set {
        updatedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TenantResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TenantResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (!object.Equals(UpdatedAt, other.UpdatedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (updatedAt_ != null) hash ^= UpdatedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (updatedAt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (updatedAt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(UpdatedAt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (updatedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdatedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TenantResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.updatedAt_ != null) {
        if (updatedAt_ == null) {
          UpdatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        UpdatedAt.MergeFrom(other.UpdatedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            if (updatedAt_ == null) {
              UpdatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdatedAt);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            if (updatedAt_ == null) {
              UpdatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(UpdatedAt);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A message for telling the server how to paginate and order data
  /// </summary>
  public sealed partial class PaginationOptions : pb::IMessage<PaginationOptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PaginationOptions> _parser = new pb::MessageParser<PaginationOptions>(() => new PaginationOptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PaginationOptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PaginationOptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PaginationOptions(PaginationOptions other) : this() {
      ordering_ = other.ordering_;
      decending_ = other.decending_;
      pageIndex_ = other.pageIndex_;
      pageSize_ = other.pageSize_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PaginationOptions Clone() {
      return new PaginationOptions(this);
    }

    /// <summary>Field number for the "ordering" field.</summary>
    public const int OrderingFieldNumber = 1;
    private string ordering_ = "";
    /// <summary>
    /// The parameter to order the data by. If empty, the server will choose a default ordering
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ordering {
      get { return ordering_; }
      set {
        ordering_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "decending" field.</summary>
    public const int DecendingFieldNumber = 2;
    private bool decending_;
    /// <summary>
    /// If "True" the data will be sorted in decending order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Decending {
      get { return decending_; }
      set {
        decending_ = value;
      }
    }

    /// <summary>Field number for the "pageIndex" field.</summary>
    public const int PageIndexFieldNumber = 3;
    private int pageIndex_;
    /// <summary>
    /// The page index to return
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PageIndex {
      get { return pageIndex_; }
      set {
        pageIndex_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 4;
    private int pageSize_;
    /// <summary>
    /// The preferred number of elements per page. If zero the server will choose a default size
    /// The server enforces a maximum page size of 100
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PaginationOptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PaginationOptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ordering != other.Ordering) return false;
      if (Decending != other.Decending) return false;
      if (PageIndex != other.PageIndex) return false;
      if (PageSize != other.PageSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ordering.Length != 0) hash ^= Ordering.GetHashCode();
      if (Decending != false) hash ^= Decending.GetHashCode();
      if (PageIndex != 0) hash ^= PageIndex.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ordering.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ordering);
      }
      if (Decending != false) {
        output.WriteRawTag(16);
        output.WriteBool(Decending);
      }
      if (PageIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageIndex);
      }
      if (PageSize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PageSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ordering.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ordering);
      }
      if (Decending != false) {
        output.WriteRawTag(16);
        output.WriteBool(Decending);
      }
      if (PageIndex != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(PageIndex);
      }
      if (PageSize != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(PageSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ordering.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ordering);
      }
      if (Decending != false) {
        size += 1 + 1;
      }
      if (PageIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageIndex);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PaginationOptions other) {
      if (other == null) {
        return;
      }
      if (other.Ordering.Length != 0) {
        Ordering = other.Ordering;
      }
      if (other.Decending != false) {
        Decending = other.Decending;
      }
      if (other.PageIndex != 0) {
        PageIndex = other.PageIndex;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ordering = input.ReadString();
            break;
          }
          case 16: {
            Decending = input.ReadBool();
            break;
          }
          case 24: {
            PageIndex = input.ReadInt32();
            break;
          }
          case 32: {
            PageSize = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ordering = input.ReadString();
            break;
          }
          case 16: {
            Decending = input.ReadBool();
            break;
          }
          case 24: {
            PageIndex = input.ReadInt32();
            break;
          }
          case 32: {
            PageSize = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A message for the server to tell how the data has been paginated
  /// </summary>
  public sealed partial class PaginationResponse : pb::IMessage<PaginationResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PaginationResponse> _parser = new pb::MessageParser<PaginationResponse>(() => new PaginationResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PaginationResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PaginationResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PaginationResponse(PaginationResponse other) : this() {
      ordering_ = other.ordering_;
      decending_ = other.decending_;
      possibleOrderings_ = other.possibleOrderings_.Clone();
      totalCount_ = other.totalCount_;
      pageSize_ = other.pageSize_;
      prevPageIndex_ = other.prevPageIndex_;
      currentPageIndex_ = other.currentPageIndex_;
      nextPageIndex_ = other.nextPageIndex_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PaginationResponse Clone() {
      return new PaginationResponse(this);
    }

    /// <summary>Field number for the "ordering" field.</summary>
    public const int OrderingFieldNumber = 1;
    private string ordering_ = "";
    /// <summary>
    /// The parameter by which the data has been ordered by
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Ordering {
      get { return ordering_; }
      set {
        ordering_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "decending" field.</summary>
    public const int DecendingFieldNumber = 2;
    private bool decending_;
    /// <summary>
    /// "True" if the data has been sorted in decending order
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Decending {
      get { return decending_; }
      set {
        decending_ = value;
      }
    }

    /// <summary>Field number for the "possibleOrderings" field.</summary>
    public const int PossibleOrderingsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_possibleOrderings_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> possibleOrderings_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// A list of all possible parameters that the data can be ordered by
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> PossibleOrderings {
      get { return possibleOrderings_; }
    }

    /// <summary>Field number for the "totalCount" field.</summary>
    public const int TotalCountFieldNumber = 4;
    private long totalCount_;
    /// <summary>
    /// The total count of data objects
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long TotalCount {
      get { return totalCount_; }
      set {
        totalCount_ = value;
      }
    }

    /// <summary>Field number for the "pageSize" field.</summary>
    public const int PageSizeFieldNumber = 5;
    private int pageSize_;
    /// <summary>
    /// The page size of the data
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "prevPageIndex" field.</summary>
    public const int PrevPageIndexFieldNumber = 6;
    private int prevPageIndex_;
    /// <summary>
    /// The page index for the previous page. If negative there is no previous page
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PrevPageIndex {
      get { return prevPageIndex_; }
      set {
        prevPageIndex_ = value;
      }
    }

    /// <summary>Field number for the "currentPageIndex" field.</summary>
    public const int CurrentPageIndexFieldNumber = 7;
    private int currentPageIndex_;
    /// <summary>
    /// The page index for the current page.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CurrentPageIndex {
      get { return currentPageIndex_; }
      set {
        currentPageIndex_ = value;
      }
    }

    /// <summary>Field number for the "nextPageIndex" field.</summary>
    public const int NextPageIndexFieldNumber = 8;
    private int nextPageIndex_;
    /// <summary>
    /// The page index for the next page. If negative there is no next page
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int NextPageIndex {
      get { return nextPageIndex_; }
      set {
        nextPageIndex_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PaginationResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PaginationResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Ordering != other.Ordering) return false;
      if (Decending != other.Decending) return false;
      if(!possibleOrderings_.Equals(other.possibleOrderings_)) return false;
      if (TotalCount != other.TotalCount) return false;
      if (PageSize != other.PageSize) return false;
      if (PrevPageIndex != other.PrevPageIndex) return false;
      if (CurrentPageIndex != other.CurrentPageIndex) return false;
      if (NextPageIndex != other.NextPageIndex) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Ordering.Length != 0) hash ^= Ordering.GetHashCode();
      if (Decending != false) hash ^= Decending.GetHashCode();
      hash ^= possibleOrderings_.GetHashCode();
      if (TotalCount != 0L) hash ^= TotalCount.GetHashCode();
      if (PageSize != 0) hash ^= PageSize.GetHashCode();
      if (PrevPageIndex != 0) hash ^= PrevPageIndex.GetHashCode();
      if (CurrentPageIndex != 0) hash ^= CurrentPageIndex.GetHashCode();
      if (NextPageIndex != 0) hash ^= NextPageIndex.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Ordering.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ordering);
      }
      if (Decending != false) {
        output.WriteRawTag(16);
        output.WriteBool(Decending);
      }
      possibleOrderings_.WriteTo(output, _repeated_possibleOrderings_codec);
      if (TotalCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalCount);
      }
      if (PageSize != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PageSize);
      }
      if (PrevPageIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PrevPageIndex);
      }
      if (CurrentPageIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CurrentPageIndex);
      }
      if (NextPageIndex != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(NextPageIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Ordering.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Ordering);
      }
      if (Decending != false) {
        output.WriteRawTag(16);
        output.WriteBool(Decending);
      }
      possibleOrderings_.WriteTo(ref output, _repeated_possibleOrderings_codec);
      if (TotalCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalCount);
      }
      if (PageSize != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(PageSize);
      }
      if (PrevPageIndex != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(PrevPageIndex);
      }
      if (CurrentPageIndex != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(CurrentPageIndex);
      }
      if (NextPageIndex != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(NextPageIndex);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Ordering.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ordering);
      }
      if (Decending != false) {
        size += 1 + 1;
      }
      size += possibleOrderings_.CalculateSize(_repeated_possibleOrderings_codec);
      if (TotalCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCount);
      }
      if (PageSize != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PageSize);
      }
      if (PrevPageIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PrevPageIndex);
      }
      if (CurrentPageIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(CurrentPageIndex);
      }
      if (NextPageIndex != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NextPageIndex);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PaginationResponse other) {
      if (other == null) {
        return;
      }
      if (other.Ordering.Length != 0) {
        Ordering = other.Ordering;
      }
      if (other.Decending != false) {
        Decending = other.Decending;
      }
      possibleOrderings_.Add(other.possibleOrderings_);
      if (other.TotalCount != 0L) {
        TotalCount = other.TotalCount;
      }
      if (other.PageSize != 0) {
        PageSize = other.PageSize;
      }
      if (other.PrevPageIndex != 0) {
        PrevPageIndex = other.PrevPageIndex;
      }
      if (other.CurrentPageIndex != 0) {
        CurrentPageIndex = other.CurrentPageIndex;
      }
      if (other.NextPageIndex != 0) {
        NextPageIndex = other.NextPageIndex;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Ordering = input.ReadString();
            break;
          }
          case 16: {
            Decending = input.ReadBool();
            break;
          }
          case 26: {
            possibleOrderings_.AddEntriesFrom(input, _repeated_possibleOrderings_codec);
            break;
          }
          case 32: {
            TotalCount = input.ReadInt64();
            break;
          }
          case 40: {
            PageSize = input.ReadInt32();
            break;
          }
          case 48: {
            PrevPageIndex = input.ReadInt32();
            break;
          }
          case 56: {
            CurrentPageIndex = input.ReadInt32();
            break;
          }
          case 64: {
            NextPageIndex = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Ordering = input.ReadString();
            break;
          }
          case 16: {
            Decending = input.ReadBool();
            break;
          }
          case 26: {
            possibleOrderings_.AddEntriesFrom(ref input, _repeated_possibleOrderings_codec);
            break;
          }
          case 32: {
            TotalCount = input.ReadInt64();
            break;
          }
          case 40: {
            PageSize = input.ReadInt32();
            break;
          }
          case 48: {
            PrevPageIndex = input.ReadInt32();
            break;
          }
          case 56: {
            CurrentPageIndex = input.ReadInt32();
            break;
          }
          case 64: {
            NextPageIndex = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A message with an encrypted enrollment token and a token expiration date
  /// </summary>
  public sealed partial class EnrollmentToken : pb::IMessage<EnrollmentToken>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<EnrollmentToken> _parser = new pb::MessageParser<EnrollmentToken>(() => new EnrollmentToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<EnrollmentToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnrollmentToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnrollmentToken(EnrollmentToken other) : this() {
      token_ = other.token_;
      expiration_ = other.expiration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public EnrollmentToken Clone() {
      return new EnrollmentToken(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private pb::ByteString token_ = pb::ByteString.Empty;
    /// <summary>
    /// Encrypted token containing enrollment information
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Token {
      get { return token_; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiration" field.</summary>
    public const int ExpirationFieldNumber = 2;
    private long expiration_;
    /// <summary>
    /// The number of seconds until the enrollment token expires
    /// An expiration of 0 means that the enrollment token never expires
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Expiration {
      get { return expiration_; }
      set {
        expiration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as EnrollmentToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(EnrollmentToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if (Expiration != other.Expiration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Token.Length != 0) hash ^= Token.GetHashCode();
      if (Expiration != 0L) hash ^= Expiration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Token);
      }
      if (Expiration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Expiration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Token.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Token);
      }
      if (Expiration != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Expiration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Token.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Token);
      }
      if (Expiration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Expiration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(EnrollmentToken other) {
      if (other == null) {
        return;
      }
      if (other.Token.Length != 0) {
        Token = other.Token;
      }
      if (other.Expiration != 0L) {
        Expiration = other.Expiration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadBytes();
            break;
          }
          case 16: {
            Expiration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadBytes();
            break;
          }
          case 16: {
            Expiration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to a key request. Holds a byte array representing the key value.
  /// Also should we add a "userCreated" boolean or enum to the keys?
  /// </summary>
  public sealed partial class CreateKeyRequest : pb::IMessage<CreateKeyRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateKeyRequest> _parser = new pb::MessageParser<CreateKeyRequest>(() => new CreateKeyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CreateKeyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateKeyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateKeyRequest(CreateKeyRequest other) : this() {
      name_ = other.name_;
      keyType_ = other.keyType_;
      value_ = other.value_;
      expiration_ = other.expiration_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CreateKeyRequest Clone() {
      return new CreateKeyRequest(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// The name you'd like to associate with this key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "keyType" field.</summary>
    public const int KeyTypeFieldNumber = 2;
    private global::Sensory.Api.Common.KeyType keyType_ = global::Sensory.Api.Common.KeyType.PublicKey;
    /// <summary>
    /// The key type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.KeyType KeyType {
      get { return keyType_; }
      set {
        keyType_ = value;
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private string value_ = "";
    /// <summary>
    /// The value of the key as a string
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiration" field.</summary>
    public const int ExpirationFieldNumber = 4;
    private long expiration_;
    /// <summary>
    /// Optional seconds until this key expires
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Expiration {
      get { return expiration_; }
      set {
        expiration_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CreateKeyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CreateKeyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (KeyType != other.KeyType) return false;
      if (Value != other.Value) return false;
      if (Expiration != other.Expiration) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (KeyType != global::Sensory.Api.Common.KeyType.PublicKey) hash ^= KeyType.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (Expiration != 0L) hash ^= Expiration.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (KeyType != global::Sensory.Api.Common.KeyType.PublicKey) {
        output.WriteRawTag(16);
        output.WriteEnum((int) KeyType);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (Expiration != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Expiration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (KeyType != global::Sensory.Api.Common.KeyType.PublicKey) {
        output.WriteRawTag(16);
        output.WriteEnum((int) KeyType);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Value);
      }
      if (Expiration != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Expiration);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (KeyType != global::Sensory.Api.Common.KeyType.PublicKey) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) KeyType);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (Expiration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Expiration);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CreateKeyRequest other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.KeyType != global::Sensory.Api.Common.KeyType.PublicKey) {
        KeyType = other.KeyType;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      if (other.Expiration != 0L) {
        Expiration = other.Expiration;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            KeyType = (global::Sensory.Api.Common.KeyType) input.ReadEnum();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
          case 32: {
            Expiration = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            KeyType = (global::Sensory.Api.Common.KeyType) input.ReadEnum();
            break;
          }
          case 26: {
            Value = input.ReadString();
            break;
          }
          case 32: {
            Expiration = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response to a key request. Holds a byte array representing the key value.
  /// </summary>
  public sealed partial class KeyResponse : pb::IMessage<KeyResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<KeyResponse> _parser = new pb::MessageParser<KeyResponse>(() => new KeyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<KeyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyResponse(KeyResponse other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      keyType_ = other.keyType_;
      expiration_ = other.expiration_;
      tenantId_ = other.tenantId_;
      disabled_ = other.disabled_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public KeyResponse Clone() {
      return new KeyResponse(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// The the uuid associated with this key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// The name associated with this key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "keyType" field.</summary>
    public const int KeyTypeFieldNumber = 3;
    private global::Sensory.Api.Common.KeyType keyType_ = global::Sensory.Api.Common.KeyType.PublicKey;
    /// <summary>
    /// The key type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.KeyType KeyType {
      get { return keyType_; }
      set {
        keyType_ = value;
      }
    }

    /// <summary>Field number for the "expiration" field.</summary>
    public const int ExpirationFieldNumber = 4;
    private long expiration_;
    /// <summary>
    /// Optional seconds until this key expires.
    /// If this value is 0, this key will never expire
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Expiration {
      get { return expiration_; }
      set {
        expiration_ = value;
      }
    }

    /// <summary>Field number for the "tenantId" field.</summary>
    public const int TenantIdFieldNumber = 5;
    private string tenantId_ = "";
    /// <summary>
    /// TenantId for this key
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TenantId {
      get { return tenantId_; }
      set {
        tenantId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disabled" field.</summary>
    public const int DisabledFieldNumber = 6;
    private bool disabled_;
    /// <summary>
    /// Indicates if this key is disabled
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Disabled {
      get { return disabled_; }
      set {
        disabled_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as KeyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(KeyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (KeyType != other.KeyType) return false;
      if (Expiration != other.Expiration) return false;
      if (TenantId != other.TenantId) return false;
      if (Disabled != other.Disabled) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (KeyType != global::Sensory.Api.Common.KeyType.PublicKey) hash ^= KeyType.GetHashCode();
      if (Expiration != 0L) hash ^= Expiration.GetHashCode();
      if (TenantId.Length != 0) hash ^= TenantId.GetHashCode();
      if (Disabled != false) hash ^= Disabled.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (KeyType != global::Sensory.Api.Common.KeyType.PublicKey) {
        output.WriteRawTag(24);
        output.WriteEnum((int) KeyType);
      }
      if (Expiration != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Expiration);
      }
      if (TenantId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TenantId);
      }
      if (Disabled != false) {
        output.WriteRawTag(48);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (KeyType != global::Sensory.Api.Common.KeyType.PublicKey) {
        output.WriteRawTag(24);
        output.WriteEnum((int) KeyType);
      }
      if (Expiration != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Expiration);
      }
      if (TenantId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(TenantId);
      }
      if (Disabled != false) {
        output.WriteRawTag(48);
        output.WriteBool(Disabled);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (KeyType != global::Sensory.Api.Common.KeyType.PublicKey) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) KeyType);
      }
      if (Expiration != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Expiration);
      }
      if (TenantId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TenantId);
      }
      if (Disabled != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(KeyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.KeyType != global::Sensory.Api.Common.KeyType.PublicKey) {
        KeyType = other.KeyType;
      }
      if (other.Expiration != 0L) {
        Expiration = other.Expiration;
      }
      if (other.TenantId.Length != 0) {
        TenantId = other.TenantId;
      }
      if (other.Disabled != false) {
        Disabled = other.Disabled;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            KeyType = (global::Sensory.Api.Common.KeyType) input.ReadEnum();
            break;
          }
          case 32: {
            Expiration = input.ReadInt64();
            break;
          }
          case 42: {
            TenantId = input.ReadString();
            break;
          }
          case 48: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            KeyType = (global::Sensory.Api.Common.KeyType) input.ReadEnum();
            break;
          }
          case 32: {
            Expiration = input.ReadInt64();
            break;
          }
          case 42: {
            TenantId = input.ReadString();
            break;
          }
          case 48: {
            Disabled = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
