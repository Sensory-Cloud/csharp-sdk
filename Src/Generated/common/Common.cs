// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: common/common.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Sensory.Api.Common {

  /// <summary>Holder for reflection information generated from common/common.proto</summary>
  public static partial class CommonReflection {

    #region Descriptor
    /// <summary>File descriptor for common/common.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static CommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNjb21tb24vY29tbW9uLnByb3RvEhJzZW5zb3J5LmFwaS5jb21tb24aF3Zh",
            "bGlkYXRlL3ZhbGlkYXRlLnByb3RvIlUKGENvbXByZXNzaW9uQ29uZmlndXJh",
            "dGlvbhI5Cgxjb21wcmVzc2lvbnMYASADKA4yIy5zZW5zb3J5LmFwaS5jb21t",
            "b24uQ29tcHJlc3Npb25UeXBlIlkKDVRva2VuUmVzcG9uc2USEwoLYWNjZXNz",
            "VG9rZW4YASABKAkSEQoJZXhwaXJlc0luGAIgASgFEg0KBWtleUlkGAMgASgJ",
            "EhEKCXRva2VuVHlwZRgEIAEoCSJBCg1TZXJ2aWNlSGVhbHRoEhEKCWlzSGVh",
            "bHRoeRgBIAEoCBIMCgRuYW1lGAIgASgJEg8KB21lc3NhZ2UYAyABKAkigQEK",
            "FFNlcnZlckhlYWx0aFJlc3BvbnNlEhEKCWlzSGVhbHRoeRgBIAEoCBIVCg1z",
            "ZXJ2ZXJWZXJzaW9uGAIgASgJEgoKAmlkGAMgASgJEjMKCHNlcnZpY2VzGAQg",
            "AygLMiEuc2Vuc29yeS5hcGkuY29tbW9uLlNlcnZpY2VIZWFsdGgigwEKDVN5",
            "c3RlbVN1bW1hcnkSNQoDY3B1GAEgASgLMh4uc2Vuc29yeS5hcGkuY29tbW9u",
            "LkNwdVN1bW1hcnlCCPpCBYoBAhABEjsKBm1lbW9yeRgCIAEoCzIhLnNlbnNv",
            "cnkuYXBpLmNvbW1vbi5NZW1vcnlTdW1tYXJ5Qgj6QgWKAQIQASKlAQoKQ3B1",
            "U3VtbWFyeRIMCgR1c2VyGAEgASgEEgwKBG5pY2UYAiABKAQSDgoGc3lzdGVt",
            "GAMgASgEEgwKBGlkbGUYBCABKAQSDgoGaW9XYWl0GAUgASgEEgsKA2lycRgG",
            "IAEoBBIPCgdzb2Z0SXJxGAcgASgEEg0KBXN0ZWFsGAggASgEEg0KBWd1ZXN0",
            "GAkgASgEEhEKCWd1ZXN0TmljZRgKIAEoBCJICg1NZW1vcnlTdW1tYXJ5EhAK",
            "CG1lbVRvdGFsGAEgASgEEg8KB21lbUZyZWUYAiABKAQSFAoMbWVtQXZhaWxh",
            "YmxlGAMgASgEIkQKDUdlbmVyaWNDbGllbnQSGgoIY2xpZW50SWQYASABKAlC",
            "CPpCBXIDsAEBEhcKBnNlY3JldBgCIAEoCUIH+kIEcgIQCipECgdLZXlUeXBl",
            "Eg4KClBVQkxJQ19LRVkQABIWChJQVUJMSUNfS0VZX0VEMjU1MTkQARIRCg1T",
            "SEFSRURfU0VDUkVUEAMqkAQKCU1vZGVsVHlwZRIiCh5WT0lDRV9CSU9NRVRS",
            "SUNfVEVYVF9ERVBFTkRFTlQQABIkCiBWT0lDRV9CSU9NRVRSSUNfVEVYVF9J",
            "TkRFUEVOREVOVBABEhwKGFZPSUNFX0JJT01FVFJJQ19XQUtFV09SRBACEhgK",
            "FFZPSUNFX0VWRU5UX1dBS0VXT1JEEAMSHAoYVk9JQ0VfVFJBTlNDUklCRV9H",
            "UkFNTUFSEAQSJwojVk9JQ0VfVFJBTlNDUklCRV9DT01NQU5EX0FORF9TRUFS",
            "Q0gQBRIoCiRWT0lDRV9SRUNPR05JVElPTl9BQ1RJVklUWV9ERVRFQ1RJT04Q",
            "BhIbChdWT0lDRV9GRUFUVVJFX0VYVFJBQ1RPUhAHEiIKHlZPSUNFX0JJT01F",
            "VFJJQ19MSVZFTkVTU19ESUdJVBAIEhoKFlNPVU5EX0VWRU5UX0VOUk9MTEFC",
            "TEUQZBIcChhTT1VORF9FVkVOVF9SRVZBTElEQVRJT04QZRIVChFTT1VORF9F",
            "VkVOVF9GSVhFRBBmEhUKEVNPVU5EX1NDRU5FX0ZJWEVEEGcSEwoORkFDRV9C",
            "SU9NRVRSSUMQyQESFQoQRkFDRV9SRUNPR05JVElPThDKARIXChJPQkpFQ1Rf",
            "UkVDT0dOSVRJT04QywESFAoPSU1BR0VfVFJBTlNGT1JNEMwBEgwKB1VOS05P",
            "V04Q6AcqQQoOVGVjaG5vbG9neVR5cGUSCwoHTk9UX1NFVBAAEggKBFRTU1YQ",
            "ARIGCgJUUxACEgcKA1ROTBADEgcKA1NUVBAEKiYKD0NvbXByZXNzaW9uVHlw",
            "ZRITCg9JTUFHRV9HUkFZU0NBTEUQACo5CgpDbGllbnRUeXBlEggKBFJPT1QQ",
            "ABIKCgZERVZJQ0UQARILCgdDTFVTVEVSEAISCAoEVVNFUhADKkUKDlVzYWdl",
            "RXZlbnRUeXBlEhIKDkFVVEhFTlRJQ0FUSU9OEAASDwoLUkVDT0dOSVRJT04Q",
            "ARIOCgpFTlJPTExNRU5UEAJCagoVaW8uc2Vuc29yeS5hcGkuY29tbW9uQhVT",
            "ZW5zb3J5QXBpQ29tbW9uUHJvdG9QAVo4Z2l0bGFiLmNvbS9zZW5zb3J5LWNs",
            "b3VkL3NlcnZlci90aXRhbi5naXQvcGtnL2FwaS9jb21tb25iBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Validate.ValidateReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Sensory.Api.Common.KeyType), typeof(global::Sensory.Api.Common.ModelType), typeof(global::Sensory.Api.Common.TechnologyType), typeof(global::Sensory.Api.Common.CompressionType), typeof(global::Sensory.Api.Common.ClientType), typeof(global::Sensory.Api.Common.UsageEventType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.CompressionConfiguration), global::Sensory.Api.Common.CompressionConfiguration.Parser, new[]{ "Compressions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.TokenResponse), global::Sensory.Api.Common.TokenResponse.Parser, new[]{ "AccessToken", "ExpiresIn", "KeyId", "TokenType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.ServiceHealth), global::Sensory.Api.Common.ServiceHealth.Parser, new[]{ "IsHealthy", "Name", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.ServerHealthResponse), global::Sensory.Api.Common.ServerHealthResponse.Parser, new[]{ "IsHealthy", "ServerVersion", "Id", "Services" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.SystemSummary), global::Sensory.Api.Common.SystemSummary.Parser, new[]{ "Cpu", "Memory" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.CpuSummary), global::Sensory.Api.Common.CpuSummary.Parser, new[]{ "User", "Nice", "System", "Idle", "IoWait", "Irq", "SoftIrq", "Steal", "Guest", "GuestNice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.MemorySummary), global::Sensory.Api.Common.MemorySummary.Parser, new[]{ "MemTotal", "MemFree", "MemAvailable" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Sensory.Api.Common.GenericClient), global::Sensory.Api.Common.GenericClient.Parser, new[]{ "ClientId", "Secret" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// A type of key supported by the API
  /// Note: if you change this enum, ensure to update schema.prisma KeyType
  /// </summary>
  public enum KeyType {
    /// <summary>
    /// General Public key - kept for backwards compatability
    /// </summary>
    [pbr::OriginalName("PUBLIC_KEY")] PublicKey = 0,
    /// <summary>
    /// ED25519 Public key used for asymmetric cryptographic operations
    /// </summary>
    [pbr::OriginalName("PUBLIC_KEY_ED25519")] PublicKeyEd25519 = 1,
    /// <summary>
    /// Shared secret string
    /// </summary>
    [pbr::OriginalName("SHARED_SECRET")] SharedSecret = 3,
  }

  /// <summary>
  /// A type of model supported by this API
  /// Note: if you change this enum, ensure to update schema.prisma ModelType
  /// </summary>
  public enum ModelType {
    /// <summary>
    /// Voice Auth Text Dependent (Enrollable)
    /// </summary>
    [pbr::OriginalName("VOICE_BIOMETRIC_TEXT_DEPENDENT")] VoiceBiometricTextDependent = 0,
    /// <summary>
    /// Voice Auth Text Independent (Enrollable)
    /// </summary>
    [pbr::OriginalName("VOICE_BIOMETRIC_TEXT_INDEPENDENT")] VoiceBiometricTextIndependent = 1,
    /// <summary>
    /// Voice Wakeword (Enrollable)
    /// </summary>
    [pbr::OriginalName("VOICE_BIOMETRIC_WAKEWORD")] VoiceBiometricWakeword = 2,
    /// <summary>
    /// Voice Wakeword
    /// </summary>
    [pbr::OriginalName("VOICE_EVENT_WAKEWORD")] VoiceEventWakeword = 3,
    /// <summary>
    /// Voice Grammar Recognition such as LVCSR
    /// </summary>
    [pbr::OriginalName("VOICE_TRANSCRIBE_GRAMMAR")] VoiceTranscribeGrammar = 4,
    /// <summary>
    /// Voice Commands and Search recognition
    /// </summary>
    [pbr::OriginalName("VOICE_TRANSCRIBE_COMMAND_AND_SEARCH")] VoiceTranscribeCommandAndSearch = 5,
    /// <summary>
    /// Voice activity detection
    /// </summary>
    [pbr::OriginalName("VOICE_RECOGNITION_ACTIVITY_DETECTION")] VoiceRecognitionActivityDetection = 6,
    /// <summary>
    /// Voice feature extractor
    /// </summary>
    [pbr::OriginalName("VOICE_FEATURE_EXTRACTOR")] VoiceFeatureExtractor = 7,
    /// <summary>
    /// Voice digit recognizer for liveness
    /// </summary>
    [pbr::OriginalName("VOICE_BIOMETRIC_LIVENESS_DIGIT")] VoiceBiometricLivenessDigit = 8,
    /// <summary>
    /// Sound Event Auth (Enrollable)
    /// </summary>
    [pbr::OriginalName("SOUND_EVENT_ENROLLABLE")] SoundEventEnrollable = 100,
    /// <summary>
    /// Sound Event Revalidation
    /// </summary>
    [pbr::OriginalName("SOUND_EVENT_REVALIDATION")] SoundEventRevalidation = 101,
    /// <summary>
    /// Sound Event Recognition
    /// </summary>
    [pbr::OriginalName("SOUND_EVENT_FIXED")] SoundEventFixed = 102,
    /// <summary>
    /// Sound Scene Recognition
    /// </summary>
    [pbr::OriginalName("SOUND_SCENE_FIXED")] SoundSceneFixed = 103,
    /// <summary>
    /// Face Auth (Enrollable)
    /// </summary>
    [pbr::OriginalName("FACE_BIOMETRIC")] FaceBiometric = 201,
    /// <summary>
    /// Face Recognition
    /// </summary>
    [pbr::OriginalName("FACE_RECOGNITION")] FaceRecognition = 202,
    /// <summary>
    /// Object Recognition
    /// </summary>
    [pbr::OriginalName("OBJECT_RECOGNITION")] ObjectRecognition = 203,
    /// <summary>
    /// Image Transformation
    /// </summary>
    [pbr::OriginalName("IMAGE_TRANSFORM")] ImageTransform = 204,
    /// <summary>
    /// Unknown Model Type
    /// </summary>
    [pbr::OriginalName("UNKNOWN")] Unknown = 1000,
  }

  /// <summary>
  /// An enum denoting the type of Sensory technology employed
  /// </summary>
  public enum TechnologyType {
    /// <summary>
    /// Not Set type - used internally
    /// </summary>
    [pbr::OriginalName("NOT_SET")] NotSet = 0,
    /// <summary>
    /// Truly Secure Speaker Verification, an audio authentication and wakeword tool
    /// </summary>
    [pbr::OriginalName("TSSV")] Tssv = 1,
    /// <summary>
    /// Truly Secure, a face identification and liveness suite
    /// </summary>
    [pbr::OriginalName("TS")] Ts = 2,
    /// <summary>
    /// Truly Natural, a wakeword and speech recognition tool
    /// </summary>
    [pbr::OriginalName("TNL")] Tnl = 3,
    /// <summary>
    /// Speech to Text, a large scale neural speech recognition tool
    /// </summary>
    [pbr::OriginalName("STT")] Stt = 4,
  }

  /// <summary>
  /// Every type of compression that is supported
  /// Note: if you change this enum, ensure to update schema.prisma CompressionType
  /// </summary>
  public enum CompressionType {
    /// <summary>
    /// Image data is in grayscale instead of full color
    /// </summary>
    [pbr::OriginalName("IMAGE_GRAYSCALE")] ImageGrayscale = 0,
  }

  /// <summary>
  /// Possible client types
  /// </summary>
  public enum ClientType {
    /// <summary>
    /// Sensory Root Token
    /// </summary>
    [pbr::OriginalName("ROOT")] Root = 0,
    /// <summary>
    /// User End Device (E.G. Sensory SDK on Smartphone)
    /// </summary>
    [pbr::OriginalName("DEVICE")] Device = 1,
    /// <summary>
    /// Remote Cluster   (E.G. Customer-Deployed Io Cluster)
    /// </summary>
    [pbr::OriginalName("CLUSTER")] Cluster = 2,
    /// <summary>
    /// User Account    (E.G. Customer-Portal)
    /// </summary>
    [pbr::OriginalName("USER")] User = 3,
  }

  /// <summary>
  /// Possible usage event type
  /// Note: if you change this enum, ensure to update schema.prisma EventType
  /// </summary>
  public enum UsageEventType {
    /// <summary>
    /// Authentication usage event
    /// </summary>
    [pbr::OriginalName("AUTHENTICATION")] Authentication = 0,
    /// <summary>
    /// Recognition usage event
    /// </summary>
    [pbr::OriginalName("RECOGNITION")] Recognition = 1,
    /// <summary>
    /// Enrollment usage event
    /// </summary>
    [pbr::OriginalName("ENROLLMENT")] Enrollment = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Configuration for how data can be compressed
  /// </summary>
  public sealed partial class CompressionConfiguration : pb::IMessage<CompressionConfiguration>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CompressionConfiguration> _parser = new pb::MessageParser<CompressionConfiguration>(() => new CompressionConfiguration());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CompressionConfiguration> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressionConfiguration() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressionConfiguration(CompressionConfiguration other) : this() {
      compressions_ = other.compressions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CompressionConfiguration Clone() {
      return new CompressionConfiguration(this);
    }

    /// <summary>Field number for the "compressions" field.</summary>
    public const int CompressionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Sensory.Api.Common.CompressionType> _repeated_compressions_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Sensory.Api.Common.CompressionType) x);
    private readonly pbc::RepeatedField<global::Sensory.Api.Common.CompressionType> compressions_ = new pbc::RepeatedField<global::Sensory.Api.Common.CompressionType>();
    /// <summary>
    /// List of every compression method that was used
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Sensory.Api.Common.CompressionType> Compressions {
      get { return compressions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CompressionConfiguration);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CompressionConfiguration other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!compressions_.Equals(other.compressions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= compressions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      compressions_.WriteTo(output, _repeated_compressions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      compressions_.WriteTo(ref output, _repeated_compressions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += compressions_.CalculateSize(_repeated_compressions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CompressionConfiguration other) {
      if (other == null) {
        return;
      }
      compressions_.Add(other.compressions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            compressions_.AddEntriesFrom(input, _repeated_compressions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10:
          case 8: {
            compressions_.AddEntriesFrom(ref input, _repeated_compressions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response from a successful token request
  /// </summary>
  public sealed partial class TokenResponse : pb::IMessage<TokenResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TokenResponse> _parser = new pb::MessageParser<TokenResponse>(() => new TokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenResponse(TokenResponse other) : this() {
      accessToken_ = other.accessToken_;
      expiresIn_ = other.expiresIn_;
      keyId_ = other.keyId_;
      tokenType_ = other.tokenType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TokenResponse Clone() {
      return new TokenResponse(this);
    }

    /// <summary>Field number for the "accessToken" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private string accessToken_ = "";
    /// <summary>
    /// Signed JSON web token that should be added to any subsequent request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "expiresIn" field.</summary>
    public const int ExpiresInFieldNumber = 2;
    private int expiresIn_;
    /// <summary>
    /// Number of seconds until this token will expire
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ExpiresIn {
      get { return expiresIn_; }
      set {
        expiresIn_ = value;
      }
    }

    /// <summary>Field number for the "keyId" field.</summary>
    public const int KeyIdFieldNumber = 3;
    private string keyId_ = "";
    /// <summary>
    /// Signing key identifier which can be used to retrieve the matching public key via the GetPublicKey request
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string KeyId {
      get { return keyId_; }
      set {
        keyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tokenType" field.</summary>
    public const int TokenTypeFieldNumber = 4;
    private string tokenType_ = "";
    /// <summary>
    /// Token type
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TokenType {
      get { return tokenType_; }
      set {
        tokenType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessToken != other.AccessToken) return false;
      if (ExpiresIn != other.ExpiresIn) return false;
      if (KeyId != other.KeyId) return false;
      if (TokenType != other.TokenType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (ExpiresIn != 0) hash ^= ExpiresIn.GetHashCode();
      if (KeyId.Length != 0) hash ^= KeyId.GetHashCode();
      if (TokenType.Length != 0) hash ^= TokenType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (AccessToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (ExpiresIn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpiresIn);
      }
      if (KeyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(KeyId);
      }
      if (TokenType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (AccessToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      if (ExpiresIn != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ExpiresIn);
      }
      if (KeyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(KeyId);
      }
      if (TokenType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(TokenType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (ExpiresIn != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExpiresIn);
      }
      if (KeyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyId);
      }
      if (TokenType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TokenType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.ExpiresIn != 0) {
        ExpiresIn = other.ExpiresIn;
      }
      if (other.KeyId.Length != 0) {
        KeyId = other.KeyId;
      }
      if (other.TokenType.Length != 0) {
        TokenType = other.TokenType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 16: {
            ExpiresIn = input.ReadInt32();
            break;
          }
          case 26: {
            KeyId = input.ReadString();
            break;
          }
          case 34: {
            TokenType = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 16: {
            ExpiresIn = input.ReadInt32();
            break;
          }
          case 26: {
            KeyId = input.ReadString();
            break;
          }
          case 34: {
            TokenType = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// An indication of the health of a particular service
  /// </summary>
  public sealed partial class ServiceHealth : pb::IMessage<ServiceHealth>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServiceHealth> _parser = new pb::MessageParser<ServiceHealth>(() => new ServiceHealth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServiceHealth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceHealth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceHealth(ServiceHealth other) : this() {
      isHealthy_ = other.isHealthy_;
      name_ = other.name_;
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServiceHealth Clone() {
      return new ServiceHealth(this);
    }

    /// <summary>Field number for the "isHealthy" field.</summary>
    public const int IsHealthyFieldNumber = 1;
    private bool isHealthy_;
    /// <summary>
    /// Is healthy indication
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHealthy {
      get { return isHealthy_; }
      set {
        isHealthy_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the service
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    /// <summary>
    /// Details of the service health
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServiceHealth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServiceHealth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsHealthy != other.IsHealthy) return false;
      if (Name != other.Name) return false;
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsHealthy != false) hash ^= IsHealthy.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsHealthy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHealthy);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsHealthy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHealthy);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsHealthy != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServiceHealth other) {
      if (other == null) {
        return;
      }
      if (other.IsHealthy != false) {
        IsHealthy = other.IsHealthy;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsHealthy = input.ReadBool();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsHealthy = input.ReadBool();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Response from a GetHealth request
  /// </summary>
  public sealed partial class ServerHealthResponse : pb::IMessage<ServerHealthResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ServerHealthResponse> _parser = new pb::MessageParser<ServerHealthResponse>(() => new ServerHealthResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ServerHealthResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerHealthResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerHealthResponse(ServerHealthResponse other) : this() {
      isHealthy_ = other.isHealthy_;
      serverVersion_ = other.serverVersion_;
      id_ = other.id_;
      services_ = other.services_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ServerHealthResponse Clone() {
      return new ServerHealthResponse(this);
    }

    /// <summary>Field number for the "isHealthy" field.</summary>
    public const int IsHealthyFieldNumber = 1;
    private bool isHealthy_;
    /// <summary>
    /// Is healthy indication. True if all services are healthy.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsHealthy {
      get { return isHealthy_; }
      set {
        isHealthy_ = value;
      }
    }

    /// <summary>Field number for the "serverVersion" field.</summary>
    public const int ServerVersionFieldNumber = 2;
    private string serverVersion_ = "";
    /// <summary>
    /// Currently running server version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ServerVersion {
      get { return serverVersion_; }
      set {
        serverVersion_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 3;
    private string id_ = "";
    /// <summary>
    /// Unique Identifier for the particular server
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Sensory.Api.Common.ServiceHealth> _repeated_services_codec
        = pb::FieldCodec.ForMessage(34, global::Sensory.Api.Common.ServiceHealth.Parser);
    private readonly pbc::RepeatedField<global::Sensory.Api.Common.ServiceHealth> services_ = new pbc::RepeatedField<global::Sensory.Api.Common.ServiceHealth>();
    /// <summary>
    /// List of services and their health statuses
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Sensory.Api.Common.ServiceHealth> Services {
      get { return services_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ServerHealthResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ServerHealthResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsHealthy != other.IsHealthy) return false;
      if (ServerVersion != other.ServerVersion) return false;
      if (Id != other.Id) return false;
      if(!services_.Equals(other.services_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IsHealthy != false) hash ^= IsHealthy.GetHashCode();
      if (ServerVersion.Length != 0) hash ^= ServerVersion.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      hash ^= services_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IsHealthy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHealthy);
      }
      if (ServerVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServerVersion);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      services_.WriteTo(output, _repeated_services_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IsHealthy != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsHealthy);
      }
      if (ServerVersion.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ServerVersion);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Id);
      }
      services_.WriteTo(ref output, _repeated_services_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IsHealthy != false) {
        size += 1 + 1;
      }
      if (ServerVersion.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerVersion);
      }
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      size += services_.CalculateSize(_repeated_services_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ServerHealthResponse other) {
      if (other == null) {
        return;
      }
      if (other.IsHealthy != false) {
        IsHealthy = other.IsHealthy;
      }
      if (other.ServerVersion.Length != 0) {
        ServerVersion = other.ServerVersion;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      services_.Add(other.services_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsHealthy = input.ReadBool();
            break;
          }
          case 18: {
            ServerVersion = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IsHealthy = input.ReadBool();
            break;
          }
          case 18: {
            ServerVersion = input.ReadString();
            break;
          }
          case 26: {
            Id = input.ReadString();
            break;
          }
          case 34: {
            services_.AddEntriesFrom(ref input, _repeated_services_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A summary of system statistics
  /// </summary>
  public sealed partial class SystemSummary : pb::IMessage<SystemSummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SystemSummary> _parser = new pb::MessageParser<SystemSummary>(() => new SystemSummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SystemSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SystemSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SystemSummary(SystemSummary other) : this() {
      cpu_ = other.cpu_ != null ? other.cpu_.Clone() : null;
      memory_ = other.memory_ != null ? other.memory_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SystemSummary Clone() {
      return new SystemSummary(this);
    }

    /// <summary>Field number for the "cpu" field.</summary>
    public const int CpuFieldNumber = 1;
    private global::Sensory.Api.Common.CpuSummary cpu_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.CpuSummary Cpu {
      get { return cpu_; }
      set {
        cpu_ = value;
      }
    }

    /// <summary>Field number for the "memory" field.</summary>
    public const int MemoryFieldNumber = 2;
    private global::Sensory.Api.Common.MemorySummary memory_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Sensory.Api.Common.MemorySummary Memory {
      get { return memory_; }
      set {
        memory_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SystemSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SystemSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Cpu, other.Cpu)) return false;
      if (!object.Equals(Memory, other.Memory)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (cpu_ != null) hash ^= Cpu.GetHashCode();
      if (memory_ != null) hash ^= Memory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (cpu_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cpu);
      }
      if (memory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Memory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (cpu_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Cpu);
      }
      if (memory_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Memory);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (cpu_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Cpu);
      }
      if (memory_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Memory);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SystemSummary other) {
      if (other == null) {
        return;
      }
      if (other.cpu_ != null) {
        if (cpu_ == null) {
          Cpu = new global::Sensory.Api.Common.CpuSummary();
        }
        Cpu.MergeFrom(other.Cpu);
      }
      if (other.memory_ != null) {
        if (memory_ == null) {
          Memory = new global::Sensory.Api.Common.MemorySummary();
        }
        Memory.MergeFrom(other.Memory);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (cpu_ == null) {
              Cpu = new global::Sensory.Api.Common.CpuSummary();
            }
            input.ReadMessage(Cpu);
            break;
          }
          case 18: {
            if (memory_ == null) {
              Memory = new global::Sensory.Api.Common.MemorySummary();
            }
            input.ReadMessage(Memory);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (cpu_ == null) {
              Cpu = new global::Sensory.Api.Common.CpuSummary();
            }
            input.ReadMessage(Cpu);
            break;
          }
          case 18: {
            if (memory_ == null) {
              Memory = new global::Sensory.Api.Common.MemorySummary();
            }
            input.ReadMessage(Memory);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Summary of all CPU useage as measured in ticks
  /// </summary>
  public sealed partial class CpuSummary : pb::IMessage<CpuSummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CpuSummary> _parser = new pb::MessageParser<CpuSummary>(() => new CpuSummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CpuSummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CpuSummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CpuSummary(CpuSummary other) : this() {
      user_ = other.user_;
      nice_ = other.nice_;
      system_ = other.system_;
      idle_ = other.idle_;
      ioWait_ = other.ioWait_;
      irq_ = other.irq_;
      softIrq_ = other.softIrq_;
      steal_ = other.steal_;
      guest_ = other.guest_;
      guestNice_ = other.guestNice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CpuSummary Clone() {
      return new CpuSummary(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private ulong user_;
    /// <summary>
    /// normal processes executing in user mode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "nice" field.</summary>
    public const int NiceFieldNumber = 2;
    private ulong nice_;
    /// <summary>
    /// niced processes executing in user mode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Nice {
      get { return nice_; }
      set {
        nice_ = value;
      }
    }

    /// <summary>Field number for the "system" field.</summary>
    public const int SystemFieldNumber = 3;
    private ulong system_;
    /// <summary>
    /// processes executing in kernel mode
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong System {
      get { return system_; }
      set {
        system_ = value;
      }
    }

    /// <summary>Field number for the "idle" field.</summary>
    public const int IdleFieldNumber = 4;
    private ulong idle_;
    /// <summary>
    /// idle cpu
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Idle {
      get { return idle_; }
      set {
        idle_ = value;
      }
    }

    /// <summary>Field number for the "ioWait" field.</summary>
    public const int IoWaitFieldNumber = 5;
    private ulong ioWait_;
    /// <summary>
    /// waiting for I/O to complete
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong IoWait {
      get { return ioWait_; }
      set {
        ioWait_ = value;
      }
    }

    /// <summary>Field number for the "irq" field.</summary>
    public const int IrqFieldNumber = 6;
    private ulong irq_;
    /// <summary>
    /// servicing interrupts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Irq {
      get { return irq_; }
      set {
        irq_ = value;
      }
    }

    /// <summary>Field number for the "softIrq" field.</summary>
    public const int SoftIrqFieldNumber = 7;
    private ulong softIrq_;
    /// <summary>
    /// servicing softirqs
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong SoftIrq {
      get { return softIrq_; }
      set {
        softIrq_ = value;
      }
    }

    /// <summary>Field number for the "steal" field.</summary>
    public const int StealFieldNumber = 8;
    private ulong steal_;
    /// <summary>
    /// counts the ticks spent executing other virtual hosts
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steal {
      get { return steal_; }
      set {
        steal_ = value;
      }
    }

    /// <summary>Field number for the "guest" field.</summary>
    public const int GuestFieldNumber = 9;
    private ulong guest_;
    /// <summary>
    /// counts the time spent running a virtual CPU for guest operating systems under the control of the Linux kernel
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Guest {
      get { return guest_; }
      set {
        guest_ = value;
      }
    }

    /// <summary>Field number for the "guestNice" field.</summary>
    public const int GuestNiceFieldNumber = 10;
    private ulong guestNice_;
    /// <summary>
    /// time spent running a niced guest
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong GuestNice {
      get { return guestNice_; }
      set {
        guestNice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CpuSummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CpuSummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (User != other.User) return false;
      if (Nice != other.Nice) return false;
      if (System != other.System) return false;
      if (Idle != other.Idle) return false;
      if (IoWait != other.IoWait) return false;
      if (Irq != other.Irq) return false;
      if (SoftIrq != other.SoftIrq) return false;
      if (Steal != other.Steal) return false;
      if (Guest != other.Guest) return false;
      if (GuestNice != other.GuestNice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (User != 0UL) hash ^= User.GetHashCode();
      if (Nice != 0UL) hash ^= Nice.GetHashCode();
      if (System != 0UL) hash ^= System.GetHashCode();
      if (Idle != 0UL) hash ^= Idle.GetHashCode();
      if (IoWait != 0UL) hash ^= IoWait.GetHashCode();
      if (Irq != 0UL) hash ^= Irq.GetHashCode();
      if (SoftIrq != 0UL) hash ^= SoftIrq.GetHashCode();
      if (Steal != 0UL) hash ^= Steal.GetHashCode();
      if (Guest != 0UL) hash ^= Guest.GetHashCode();
      if (GuestNice != 0UL) hash ^= GuestNice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (User != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(User);
      }
      if (Nice != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Nice);
      }
      if (System != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(System);
      }
      if (Idle != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Idle);
      }
      if (IoWait != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(IoWait);
      }
      if (Irq != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Irq);
      }
      if (SoftIrq != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(SoftIrq);
      }
      if (Steal != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(Steal);
      }
      if (Guest != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(Guest);
      }
      if (GuestNice != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(GuestNice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (User != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(User);
      }
      if (Nice != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(Nice);
      }
      if (System != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(System);
      }
      if (Idle != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(Idle);
      }
      if (IoWait != 0UL) {
        output.WriteRawTag(40);
        output.WriteUInt64(IoWait);
      }
      if (Irq != 0UL) {
        output.WriteRawTag(48);
        output.WriteUInt64(Irq);
      }
      if (SoftIrq != 0UL) {
        output.WriteRawTag(56);
        output.WriteUInt64(SoftIrq);
      }
      if (Steal != 0UL) {
        output.WriteRawTag(64);
        output.WriteUInt64(Steal);
      }
      if (Guest != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(Guest);
      }
      if (GuestNice != 0UL) {
        output.WriteRawTag(80);
        output.WriteUInt64(GuestNice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (User != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(User);
      }
      if (Nice != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Nice);
      }
      if (System != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(System);
      }
      if (Idle != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Idle);
      }
      if (IoWait != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(IoWait);
      }
      if (Irq != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Irq);
      }
      if (SoftIrq != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SoftIrq);
      }
      if (Steal != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Steal);
      }
      if (Guest != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Guest);
      }
      if (GuestNice != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(GuestNice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CpuSummary other) {
      if (other == null) {
        return;
      }
      if (other.User != 0UL) {
        User = other.User;
      }
      if (other.Nice != 0UL) {
        Nice = other.Nice;
      }
      if (other.System != 0UL) {
        System = other.System;
      }
      if (other.Idle != 0UL) {
        Idle = other.Idle;
      }
      if (other.IoWait != 0UL) {
        IoWait = other.IoWait;
      }
      if (other.Irq != 0UL) {
        Irq = other.Irq;
      }
      if (other.SoftIrq != 0UL) {
        SoftIrq = other.SoftIrq;
      }
      if (other.Steal != 0UL) {
        Steal = other.Steal;
      }
      if (other.Guest != 0UL) {
        Guest = other.Guest;
      }
      if (other.GuestNice != 0UL) {
        GuestNice = other.GuestNice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            User = input.ReadUInt64();
            break;
          }
          case 16: {
            Nice = input.ReadUInt64();
            break;
          }
          case 24: {
            System = input.ReadUInt64();
            break;
          }
          case 32: {
            Idle = input.ReadUInt64();
            break;
          }
          case 40: {
            IoWait = input.ReadUInt64();
            break;
          }
          case 48: {
            Irq = input.ReadUInt64();
            break;
          }
          case 56: {
            SoftIrq = input.ReadUInt64();
            break;
          }
          case 64: {
            Steal = input.ReadUInt64();
            break;
          }
          case 72: {
            Guest = input.ReadUInt64();
            break;
          }
          case 80: {
            GuestNice = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            User = input.ReadUInt64();
            break;
          }
          case 16: {
            Nice = input.ReadUInt64();
            break;
          }
          case 24: {
            System = input.ReadUInt64();
            break;
          }
          case 32: {
            Idle = input.ReadUInt64();
            break;
          }
          case 40: {
            IoWait = input.ReadUInt64();
            break;
          }
          case 48: {
            Irq = input.ReadUInt64();
            break;
          }
          case 56: {
            SoftIrq = input.ReadUInt64();
            break;
          }
          case 64: {
            Steal = input.ReadUInt64();
            break;
          }
          case 72: {
            Guest = input.ReadUInt64();
            break;
          }
          case 80: {
            GuestNice = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// A summary of memory usage
  /// </summary>
  public sealed partial class MemorySummary : pb::IMessage<MemorySummary>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MemorySummary> _parser = new pb::MessageParser<MemorySummary>(() => new MemorySummary());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MemorySummary> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MemorySummary() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MemorySummary(MemorySummary other) : this() {
      memTotal_ = other.memTotal_;
      memFree_ = other.memFree_;
      memAvailable_ = other.memAvailable_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MemorySummary Clone() {
      return new MemorySummary(this);
    }

    /// <summary>Field number for the "memTotal" field.</summary>
    public const int MemTotalFieldNumber = 1;
    private ulong memTotal_;
    /// <summary>
    /// total memory in use
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MemTotal {
      get { return memTotal_; }
      set {
        memTotal_ = value;
      }
    }

    /// <summary>Field number for the "memFree" field.</summary>
    public const int MemFreeFieldNumber = 2;
    private ulong memFree_;
    /// <summary>
    /// total memory free
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MemFree {
      get { return memFree_; }
      set {
        memFree_ = value;
      }
    }

    /// <summary>Field number for the "memAvailable" field.</summary>
    public const int MemAvailableFieldNumber = 3;
    private ulong memAvailable_;
    /// <summary>
    /// total memory available by the system
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong MemAvailable {
      get { return memAvailable_; }
      set {
        memAvailable_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MemorySummary);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MemorySummary other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MemTotal != other.MemTotal) return false;
      if (MemFree != other.MemFree) return false;
      if (MemAvailable != other.MemAvailable) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (MemTotal != 0UL) hash ^= MemTotal.GetHashCode();
      if (MemFree != 0UL) hash ^= MemFree.GetHashCode();
      if (MemAvailable != 0UL) hash ^= MemAvailable.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (MemTotal != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MemTotal);
      }
      if (MemFree != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(MemFree);
      }
      if (MemAvailable != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MemAvailable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (MemTotal != 0UL) {
        output.WriteRawTag(8);
        output.WriteUInt64(MemTotal);
      }
      if (MemFree != 0UL) {
        output.WriteRawTag(16);
        output.WriteUInt64(MemFree);
      }
      if (MemAvailable != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(MemAvailable);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (MemTotal != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MemTotal);
      }
      if (MemFree != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MemFree);
      }
      if (MemAvailable != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(MemAvailable);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MemorySummary other) {
      if (other == null) {
        return;
      }
      if (other.MemTotal != 0UL) {
        MemTotal = other.MemTotal;
      }
      if (other.MemFree != 0UL) {
        MemFree = other.MemFree;
      }
      if (other.MemAvailable != 0UL) {
        MemAvailable = other.MemAvailable;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MemTotal = input.ReadUInt64();
            break;
          }
          case 16: {
            MemFree = input.ReadUInt64();
            break;
          }
          case 24: {
            MemAvailable = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            MemTotal = input.ReadUInt64();
            break;
          }
          case 16: {
            MemFree = input.ReadUInt64();
            break;
          }
          case 24: {
            MemAvailable = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Request to create a generic client. Client type should be inferred by usage.
  /// This data should be stored securely on the client endpoint.
  /// </summary>
  public sealed partial class GenericClient : pb::IMessage<GenericClient>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GenericClient> _parser = new pb::MessageParser<GenericClient>(() => new GenericClient());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GenericClient> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Sensory.Api.Common.CommonReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GenericClient() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GenericClient(GenericClient other) : this() {
      clientId_ = other.clientId_;
      secret_ = other.secret_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GenericClient Clone() {
      return new GenericClient(this);
    }

    /// <summary>Field number for the "clientId" field.</summary>
    public const int ClientIdFieldNumber = 1;
    private string clientId_ = "";
    /// <summary>
    /// Unique Client ID as UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string ClientId {
      get { return clientId_; }
      set {
        clientId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "secret" field.</summary>
    public const int SecretFieldNumber = 2;
    private string secret_ = "";
    /// <summary>
    /// Strong secret value (min length of 10)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Secret {
      get { return secret_; }
      set {
        secret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GenericClient);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GenericClient other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClientId != other.ClientId) return false;
      if (Secret != other.Secret) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ClientId.Length != 0) hash ^= ClientId.GetHashCode();
      if (Secret.Length != 0) hash ^= Secret.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ClientId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClientId);
      }
      if (Secret.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Secret);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ClientId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClientId);
      }
      if (Secret.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Secret);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GenericClient other) {
      if (other == null) {
        return;
      }
      if (other.ClientId.Length != 0) {
        ClientId = other.ClientId;
      }
      if (other.Secret.Length != 0) {
        Secret = other.Secret;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ClientId = input.ReadString();
            break;
          }
          case 18: {
            Secret = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
